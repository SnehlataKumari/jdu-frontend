function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["admin-dashboard-admin-dashboard-module"], {
  /***/
  "./node_modules/aws-sdk/apis/cognito-identity-2014-06-30.min.json":
  /*!************************************************************************!*\
    !*** ./node_modules/aws-sdk/apis/cognito-identity-2014-06-30.min.json ***!
    \************************************************************************/

  /*! exports provided: version, metadata, operations, shapes, default */

  /***/
  function node_modulesAwsSdkApisCognitoIdentity20140630MinJson(module) {
    module.exports = JSON.parse("{\"version\":\"2.0\",\"metadata\":{\"apiVersion\":\"2014-06-30\",\"endpointPrefix\":\"cognito-identity\",\"jsonVersion\":\"1.1\",\"protocol\":\"json\",\"serviceFullName\":\"Amazon Cognito Identity\",\"serviceId\":\"Cognito Identity\",\"signatureVersion\":\"v4\",\"targetPrefix\":\"AWSCognitoIdentityService\",\"uid\":\"cognito-identity-2014-06-30\"},\"operations\":{\"CreateIdentityPool\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolName\",\"AllowUnauthenticatedIdentities\"],\"members\":{\"IdentityPoolName\":{},\"AllowUnauthenticatedIdentities\":{\"type\":\"boolean\"},\"AllowClassicFlow\":{\"type\":\"boolean\"},\"SupportedLoginProviders\":{\"shape\":\"S5\"},\"DeveloperProviderName\":{},\"OpenIdConnectProviderARNs\":{\"shape\":\"S9\"},\"CognitoIdentityProviders\":{\"shape\":\"Sb\"},\"SamlProviderARNs\":{\"shape\":\"Sg\"},\"IdentityPoolTags\":{\"shape\":\"Sh\"}}},\"output\":{\"shape\":\"Sk\"}},\"DeleteIdentities\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityIdsToDelete\"],\"members\":{\"IdentityIdsToDelete\":{\"type\":\"list\",\"member\":{}}}},\"output\":{\"type\":\"structure\",\"members\":{\"UnprocessedIdentityIds\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"IdentityId\":{},\"ErrorCode\":{}}}}}}},\"DeleteIdentityPool\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\"],\"members\":{\"IdentityPoolId\":{}}}},\"DescribeIdentity\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityId\"],\"members\":{\"IdentityId\":{}}},\"output\":{\"shape\":\"Sv\"}},\"DescribeIdentityPool\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\"],\"members\":{\"IdentityPoolId\":{}}},\"output\":{\"shape\":\"Sk\"}},\"GetCredentialsForIdentity\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityId\"],\"members\":{\"IdentityId\":{},\"Logins\":{\"shape\":\"S10\"},\"CustomRoleArn\":{}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityId\":{},\"Credentials\":{\"type\":\"structure\",\"members\":{\"AccessKeyId\":{},\"SecretKey\":{},\"SessionToken\":{},\"Expiration\":{\"type\":\"timestamp\"}}}}}},\"GetId\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\"],\"members\":{\"AccountId\":{},\"IdentityPoolId\":{},\"Logins\":{\"shape\":\"S10\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityId\":{}}}},\"GetIdentityPoolRoles\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\"],\"members\":{\"IdentityPoolId\":{}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityPoolId\":{},\"Roles\":{\"shape\":\"S1c\"},\"RoleMappings\":{\"shape\":\"S1e\"}}}},\"GetOpenIdToken\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityId\"],\"members\":{\"IdentityId\":{},\"Logins\":{\"shape\":\"S10\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityId\":{},\"Token\":{}}}},\"GetOpenIdTokenForDeveloperIdentity\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\",\"Logins\"],\"members\":{\"IdentityPoolId\":{},\"IdentityId\":{},\"Logins\":{\"shape\":\"S10\"},\"TokenDuration\":{\"type\":\"long\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityId\":{},\"Token\":{}}}},\"ListIdentities\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\",\"MaxResults\"],\"members\":{\"IdentityPoolId\":{},\"MaxResults\":{\"type\":\"integer\"},\"NextToken\":{},\"HideDisabled\":{\"type\":\"boolean\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityPoolId\":{},\"Identities\":{\"type\":\"list\",\"member\":{\"shape\":\"Sv\"}},\"NextToken\":{}}}},\"ListIdentityPools\":{\"input\":{\"type\":\"structure\",\"required\":[\"MaxResults\"],\"members\":{\"MaxResults\":{\"type\":\"integer\"},\"NextToken\":{}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityPools\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"IdentityPoolId\":{},\"IdentityPoolName\":{}}}},\"NextToken\":{}}}},\"ListTagsForResource\":{\"input\":{\"type\":\"structure\",\"required\":[\"ResourceArn\"],\"members\":{\"ResourceArn\":{}}},\"output\":{\"type\":\"structure\",\"members\":{\"Tags\":{\"shape\":\"Sh\"}}}},\"LookupDeveloperIdentity\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\"],\"members\":{\"IdentityPoolId\":{},\"IdentityId\":{},\"DeveloperUserIdentifier\":{},\"MaxResults\":{\"type\":\"integer\"},\"NextToken\":{}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityId\":{},\"DeveloperUserIdentifierList\":{\"type\":\"list\",\"member\":{}},\"NextToken\":{}}}},\"MergeDeveloperIdentities\":{\"input\":{\"type\":\"structure\",\"required\":[\"SourceUserIdentifier\",\"DestinationUserIdentifier\",\"DeveloperProviderName\",\"IdentityPoolId\"],\"members\":{\"SourceUserIdentifier\":{},\"DestinationUserIdentifier\":{},\"DeveloperProviderName\":{},\"IdentityPoolId\":{}}},\"output\":{\"type\":\"structure\",\"members\":{\"IdentityId\":{}}}},\"SetIdentityPoolRoles\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\",\"Roles\"],\"members\":{\"IdentityPoolId\":{},\"Roles\":{\"shape\":\"S1c\"},\"RoleMappings\":{\"shape\":\"S1e\"}}}},\"TagResource\":{\"input\":{\"type\":\"structure\",\"required\":[\"ResourceArn\",\"Tags\"],\"members\":{\"ResourceArn\":{},\"Tags\":{\"shape\":\"Sh\"}}},\"output\":{\"type\":\"structure\",\"members\":{}}},\"UnlinkDeveloperIdentity\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityId\",\"IdentityPoolId\",\"DeveloperProviderName\",\"DeveloperUserIdentifier\"],\"members\":{\"IdentityId\":{},\"IdentityPoolId\":{},\"DeveloperProviderName\":{},\"DeveloperUserIdentifier\":{}}}},\"UnlinkIdentity\":{\"input\":{\"type\":\"structure\",\"required\":[\"IdentityId\",\"Logins\",\"LoginsToRemove\"],\"members\":{\"IdentityId\":{},\"Logins\":{\"shape\":\"S10\"},\"LoginsToRemove\":{\"shape\":\"Sw\"}}}},\"UntagResource\":{\"input\":{\"type\":\"structure\",\"required\":[\"ResourceArn\",\"TagKeys\"],\"members\":{\"ResourceArn\":{},\"TagKeys\":{\"type\":\"list\",\"member\":{}}}},\"output\":{\"type\":\"structure\",\"members\":{}}},\"UpdateIdentityPool\":{\"input\":{\"shape\":\"Sk\"},\"output\":{\"shape\":\"Sk\"}}},\"shapes\":{\"S5\":{\"type\":\"map\",\"key\":{},\"value\":{}},\"S9\":{\"type\":\"list\",\"member\":{}},\"Sb\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"ProviderName\":{},\"ClientId\":{},\"ServerSideTokenCheck\":{\"type\":\"boolean\"}}}},\"Sg\":{\"type\":\"list\",\"member\":{}},\"Sh\":{\"type\":\"map\",\"key\":{},\"value\":{}},\"Sk\":{\"type\":\"structure\",\"required\":[\"IdentityPoolId\",\"IdentityPoolName\",\"AllowUnauthenticatedIdentities\"],\"members\":{\"IdentityPoolId\":{},\"IdentityPoolName\":{},\"AllowUnauthenticatedIdentities\":{\"type\":\"boolean\"},\"AllowClassicFlow\":{\"type\":\"boolean\"},\"SupportedLoginProviders\":{\"shape\":\"S5\"},\"DeveloperProviderName\":{},\"OpenIdConnectProviderARNs\":{\"shape\":\"S9\"},\"CognitoIdentityProviders\":{\"shape\":\"Sb\"},\"SamlProviderARNs\":{\"shape\":\"Sg\"},\"IdentityPoolTags\":{\"shape\":\"Sh\"}}},\"Sv\":{\"type\":\"structure\",\"members\":{\"IdentityId\":{},\"Logins\":{\"shape\":\"Sw\"},\"CreationDate\":{\"type\":\"timestamp\"},\"LastModifiedDate\":{\"type\":\"timestamp\"}}},\"Sw\":{\"type\":\"list\",\"member\":{}},\"S10\":{\"type\":\"map\",\"key\":{},\"value\":{}},\"S1c\":{\"type\":\"map\",\"key\":{},\"value\":{}},\"S1e\":{\"type\":\"map\",\"key\":{},\"value\":{\"type\":\"structure\",\"required\":[\"Type\"],\"members\":{\"Type\":{},\"AmbiguousRoleResolution\":{},\"RulesConfiguration\":{\"type\":\"structure\",\"required\":[\"Rules\"],\"members\":{\"Rules\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"Claim\",\"MatchType\",\"Value\",\"RoleARN\"],\"members\":{\"Claim\":{},\"MatchType\":{},\"Value\":{},\"RoleARN\":{}}}}}}}}}}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/apis/cognito-identity-2014-06-30.paginators.json":
  /*!*******************************************************************************!*\
    !*** ./node_modules/aws-sdk/apis/cognito-identity-2014-06-30.paginators.json ***!
    \*******************************************************************************/

  /*! exports provided: pagination, default */

  /***/
  function node_modulesAwsSdkApisCognitoIdentity20140630PaginatorsJson(module) {
    module.exports = JSON.parse("{\"pagination\":{}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/apis/metadata.json":
  /*!*************************************************!*\
    !*** ./node_modules/aws-sdk/apis/metadata.json ***!
    \*************************************************/

  /*! exports provided: acm, apigateway, applicationautoscaling, appstream, autoscaling, batch, budgets, clouddirectory, cloudformation, cloudfront, cloudhsm, cloudsearch, cloudsearchdomain, cloudtrail, cloudwatch, cloudwatchevents, cloudwatchlogs, codebuild, codecommit, codedeploy, codepipeline, cognitoidentity, cognitoidentityserviceprovider, cognitosync, configservice, cur, datapipeline, devicefarm, directconnect, directoryservice, discovery, dms, dynamodb, dynamodbstreams, ec2, ecr, ecs, efs, elasticache, elasticbeanstalk, elb, elbv2, emr, es, elastictranscoder, firehose, gamelift, glacier, health, iam, importexport, inspector, iot, iotdata, kinesis, kinesisanalytics, kms, lambda, lexruntime, lightsail, machinelearning, marketplacecommerceanalytics, marketplacemetering, mturk, mobileanalytics, opsworks, opsworkscm, organizations, pinpoint, polly, rds, redshift, rekognition, resourcegroupstaggingapi, route53, route53domains, s3, s3control, servicecatalog, ses, shield, simpledb, sms, snowball, sns, sqs, ssm, storagegateway, stepfunctions, sts, support, swf, xray, waf, wafregional, workdocs, workspaces, codestar, lexmodelbuildingservice, marketplaceentitlementservice, athena, greengrass, dax, migrationhub, cloudhsmv2, glue, mobile, pricing, costexplorer, mediaconvert, medialive, mediapackage, mediastore, mediastoredata, appsync, guardduty, mq, comprehend, iotjobsdataplane, kinesisvideoarchivedmedia, kinesisvideomedia, kinesisvideo, sagemakerruntime, sagemaker, translate, resourcegroups, alexaforbusiness, cloud9, serverlessapplicationrepository, servicediscovery, workmail, autoscalingplans, transcribeservice, connect, acmpca, fms, secretsmanager, iotanalytics, iot1clickdevicesservice, iot1clickprojects, pi, neptune, mediatailor, eks, macie, dlm, signer, chime, pinpointemail, ram, route53resolver, pinpointsmsvoice, quicksight, rdsdataservice, amplify, datasync, robomaker, transfer, globalaccelerator, comprehendmedical, kinesisanalyticsv2, mediaconnect, fsx, securityhub, appmesh, licensemanager, kafka, apigatewaymanagementapi, apigatewayv2, docdb, backup, worklink, textract, managedblockchain, mediapackagevod, groundstation, iotthingsgraph, iotevents, ioteventsdata, personalize, personalizeevents, personalizeruntime, applicationinsights, servicequotas, ec2instanceconnect, eventbridge, lakeformation, forecastservice, forecastqueryservice, qldb, qldbsession, workmailmessageflow, codestarnotifications, savingsplans, sso, ssooidc, marketplacecatalog, dataexchange, sesv2, migrationhubconfig, connectparticipant, appconfig, iotsecuretunneling, wafv2, elasticinference, imagebuilder, schemas, accessanalyzer, codegurureviewer, codeguruprofiler, computeoptimizer, frauddetector, kendra, networkmanager, outposts, augmentedairuntime, ebs, kinesisvideosignalingchannels, detective, codestarconnections, synthetics, iotsitewise, macie2, default */

  /***/
  function node_modulesAwsSdkApisMetadataJson(module) {
    module.exports = JSON.parse("{\"acm\":{\"name\":\"ACM\",\"cors\":true},\"apigateway\":{\"name\":\"APIGateway\",\"cors\":true},\"applicationautoscaling\":{\"prefix\":\"application-autoscaling\",\"name\":\"ApplicationAutoScaling\",\"cors\":true},\"appstream\":{\"name\":\"AppStream\"},\"autoscaling\":{\"name\":\"AutoScaling\",\"cors\":true},\"batch\":{\"name\":\"Batch\"},\"budgets\":{\"name\":\"Budgets\"},\"clouddirectory\":{\"name\":\"CloudDirectory\",\"versions\":[\"2016-05-10*\"]},\"cloudformation\":{\"name\":\"CloudFormation\",\"cors\":true},\"cloudfront\":{\"name\":\"CloudFront\",\"versions\":[\"2013-05-12*\",\"2013-11-11*\",\"2014-05-31*\",\"2014-10-21*\",\"2014-11-06*\",\"2015-04-17*\",\"2015-07-27*\",\"2015-09-17*\",\"2016-01-13*\",\"2016-01-28*\",\"2016-08-01*\",\"2016-08-20*\",\"2016-09-07*\",\"2016-09-29*\",\"2016-11-25*\",\"2017-03-25*\",\"2017-10-30*\",\"2018-06-18*\",\"2018-11-05*\"],\"cors\":true},\"cloudhsm\":{\"name\":\"CloudHSM\",\"cors\":true},\"cloudsearch\":{\"name\":\"CloudSearch\"},\"cloudsearchdomain\":{\"name\":\"CloudSearchDomain\"},\"cloudtrail\":{\"name\":\"CloudTrail\",\"cors\":true},\"cloudwatch\":{\"prefix\":\"monitoring\",\"name\":\"CloudWatch\",\"cors\":true},\"cloudwatchevents\":{\"prefix\":\"events\",\"name\":\"CloudWatchEvents\",\"versions\":[\"2014-02-03*\"],\"cors\":true},\"cloudwatchlogs\":{\"prefix\":\"logs\",\"name\":\"CloudWatchLogs\",\"cors\":true},\"codebuild\":{\"name\":\"CodeBuild\",\"cors\":true},\"codecommit\":{\"name\":\"CodeCommit\",\"cors\":true},\"codedeploy\":{\"name\":\"CodeDeploy\",\"cors\":true},\"codepipeline\":{\"name\":\"CodePipeline\",\"cors\":true},\"cognitoidentity\":{\"prefix\":\"cognito-identity\",\"name\":\"CognitoIdentity\",\"cors\":true},\"cognitoidentityserviceprovider\":{\"prefix\":\"cognito-idp\",\"name\":\"CognitoIdentityServiceProvider\",\"cors\":true},\"cognitosync\":{\"prefix\":\"cognito-sync\",\"name\":\"CognitoSync\",\"cors\":true},\"configservice\":{\"prefix\":\"config\",\"name\":\"ConfigService\",\"cors\":true},\"cur\":{\"name\":\"CUR\",\"cors\":true},\"datapipeline\":{\"name\":\"DataPipeline\"},\"devicefarm\":{\"name\":\"DeviceFarm\",\"cors\":true},\"directconnect\":{\"name\":\"DirectConnect\",\"cors\":true},\"directoryservice\":{\"prefix\":\"ds\",\"name\":\"DirectoryService\"},\"discovery\":{\"name\":\"Discovery\"},\"dms\":{\"name\":\"DMS\"},\"dynamodb\":{\"name\":\"DynamoDB\",\"cors\":true},\"dynamodbstreams\":{\"prefix\":\"streams.dynamodb\",\"name\":\"DynamoDBStreams\",\"cors\":true},\"ec2\":{\"name\":\"EC2\",\"versions\":[\"2013-06-15*\",\"2013-10-15*\",\"2014-02-01*\",\"2014-05-01*\",\"2014-06-15*\",\"2014-09-01*\",\"2014-10-01*\",\"2015-03-01*\",\"2015-04-15*\",\"2015-10-01*\",\"2016-04-01*\",\"2016-09-15*\"],\"cors\":true},\"ecr\":{\"name\":\"ECR\",\"cors\":true},\"ecs\":{\"name\":\"ECS\",\"cors\":true},\"efs\":{\"prefix\":\"elasticfilesystem\",\"name\":\"EFS\",\"cors\":true},\"elasticache\":{\"name\":\"ElastiCache\",\"versions\":[\"2012-11-15*\",\"2014-03-24*\",\"2014-07-15*\",\"2014-09-30*\"],\"cors\":true},\"elasticbeanstalk\":{\"name\":\"ElasticBeanstalk\",\"cors\":true},\"elb\":{\"prefix\":\"elasticloadbalancing\",\"name\":\"ELB\",\"cors\":true},\"elbv2\":{\"prefix\":\"elasticloadbalancingv2\",\"name\":\"ELBv2\",\"cors\":true},\"emr\":{\"prefix\":\"elasticmapreduce\",\"name\":\"EMR\",\"cors\":true},\"es\":{\"name\":\"ES\"},\"elastictranscoder\":{\"name\":\"ElasticTranscoder\",\"cors\":true},\"firehose\":{\"name\":\"Firehose\",\"cors\":true},\"gamelift\":{\"name\":\"GameLift\",\"cors\":true},\"glacier\":{\"name\":\"Glacier\"},\"health\":{\"name\":\"Health\"},\"iam\":{\"name\":\"IAM\",\"cors\":true},\"importexport\":{\"name\":\"ImportExport\"},\"inspector\":{\"name\":\"Inspector\",\"versions\":[\"2015-08-18*\"],\"cors\":true},\"iot\":{\"name\":\"Iot\",\"cors\":true},\"iotdata\":{\"prefix\":\"iot-data\",\"name\":\"IotData\",\"cors\":true},\"kinesis\":{\"name\":\"Kinesis\",\"cors\":true},\"kinesisanalytics\":{\"name\":\"KinesisAnalytics\"},\"kms\":{\"name\":\"KMS\",\"cors\":true},\"lambda\":{\"name\":\"Lambda\",\"cors\":true},\"lexruntime\":{\"prefix\":\"runtime.lex\",\"name\":\"LexRuntime\",\"cors\":true},\"lightsail\":{\"name\":\"Lightsail\"},\"machinelearning\":{\"name\":\"MachineLearning\",\"cors\":true},\"marketplacecommerceanalytics\":{\"name\":\"MarketplaceCommerceAnalytics\",\"cors\":true},\"marketplacemetering\":{\"prefix\":\"meteringmarketplace\",\"name\":\"MarketplaceMetering\"},\"mturk\":{\"prefix\":\"mturk-requester\",\"name\":\"MTurk\",\"cors\":true},\"mobileanalytics\":{\"name\":\"MobileAnalytics\",\"cors\":true},\"opsworks\":{\"name\":\"OpsWorks\",\"cors\":true},\"opsworkscm\":{\"name\":\"OpsWorksCM\"},\"organizations\":{\"name\":\"Organizations\"},\"pinpoint\":{\"name\":\"Pinpoint\"},\"polly\":{\"name\":\"Polly\",\"cors\":true},\"rds\":{\"name\":\"RDS\",\"versions\":[\"2014-09-01*\"],\"cors\":true},\"redshift\":{\"name\":\"Redshift\",\"cors\":true},\"rekognition\":{\"name\":\"Rekognition\",\"cors\":true},\"resourcegroupstaggingapi\":{\"name\":\"ResourceGroupsTaggingAPI\"},\"route53\":{\"name\":\"Route53\",\"cors\":true},\"route53domains\":{\"name\":\"Route53Domains\",\"cors\":true},\"s3\":{\"name\":\"S3\",\"dualstackAvailable\":true,\"cors\":true},\"s3control\":{\"name\":\"S3Control\",\"dualstackAvailable\":true,\"xmlNoDefaultLists\":true},\"servicecatalog\":{\"name\":\"ServiceCatalog\",\"cors\":true},\"ses\":{\"prefix\":\"email\",\"name\":\"SES\",\"cors\":true},\"shield\":{\"name\":\"Shield\"},\"simpledb\":{\"prefix\":\"sdb\",\"name\":\"SimpleDB\"},\"sms\":{\"name\":\"SMS\"},\"snowball\":{\"name\":\"Snowball\"},\"sns\":{\"name\":\"SNS\",\"cors\":true},\"sqs\":{\"name\":\"SQS\",\"cors\":true},\"ssm\":{\"name\":\"SSM\",\"cors\":true},\"storagegateway\":{\"name\":\"StorageGateway\",\"cors\":true},\"stepfunctions\":{\"prefix\":\"states\",\"name\":\"StepFunctions\"},\"sts\":{\"name\":\"STS\",\"cors\":true},\"support\":{\"name\":\"Support\"},\"swf\":{\"name\":\"SWF\"},\"xray\":{\"name\":\"XRay\",\"cors\":true},\"waf\":{\"name\":\"WAF\",\"cors\":true},\"wafregional\":{\"prefix\":\"waf-regional\",\"name\":\"WAFRegional\"},\"workdocs\":{\"name\":\"WorkDocs\",\"cors\":true},\"workspaces\":{\"name\":\"WorkSpaces\"},\"codestar\":{\"name\":\"CodeStar\"},\"lexmodelbuildingservice\":{\"prefix\":\"lex-models\",\"name\":\"LexModelBuildingService\",\"cors\":true},\"marketplaceentitlementservice\":{\"prefix\":\"entitlement.marketplace\",\"name\":\"MarketplaceEntitlementService\"},\"athena\":{\"name\":\"Athena\"},\"greengrass\":{\"name\":\"Greengrass\"},\"dax\":{\"name\":\"DAX\"},\"migrationhub\":{\"prefix\":\"AWSMigrationHub\",\"name\":\"MigrationHub\"},\"cloudhsmv2\":{\"name\":\"CloudHSMV2\"},\"glue\":{\"name\":\"Glue\"},\"mobile\":{\"name\":\"Mobile\"},\"pricing\":{\"name\":\"Pricing\",\"cors\":true},\"costexplorer\":{\"prefix\":\"ce\",\"name\":\"CostExplorer\",\"cors\":true},\"mediaconvert\":{\"name\":\"MediaConvert\"},\"medialive\":{\"name\":\"MediaLive\"},\"mediapackage\":{\"name\":\"MediaPackage\"},\"mediastore\":{\"name\":\"MediaStore\"},\"mediastoredata\":{\"prefix\":\"mediastore-data\",\"name\":\"MediaStoreData\",\"cors\":true},\"appsync\":{\"name\":\"AppSync\"},\"guardduty\":{\"name\":\"GuardDuty\"},\"mq\":{\"name\":\"MQ\"},\"comprehend\":{\"name\":\"Comprehend\",\"cors\":true},\"iotjobsdataplane\":{\"prefix\":\"iot-jobs-data\",\"name\":\"IoTJobsDataPlane\"},\"kinesisvideoarchivedmedia\":{\"prefix\":\"kinesis-video-archived-media\",\"name\":\"KinesisVideoArchivedMedia\",\"cors\":true},\"kinesisvideomedia\":{\"prefix\":\"kinesis-video-media\",\"name\":\"KinesisVideoMedia\",\"cors\":true},\"kinesisvideo\":{\"name\":\"KinesisVideo\",\"cors\":true},\"sagemakerruntime\":{\"prefix\":\"runtime.sagemaker\",\"name\":\"SageMakerRuntime\"},\"sagemaker\":{\"name\":\"SageMaker\"},\"translate\":{\"name\":\"Translate\",\"cors\":true},\"resourcegroups\":{\"prefix\":\"resource-groups\",\"name\":\"ResourceGroups\",\"cors\":true},\"alexaforbusiness\":{\"name\":\"AlexaForBusiness\"},\"cloud9\":{\"name\":\"Cloud9\"},\"serverlessapplicationrepository\":{\"prefix\":\"serverlessrepo\",\"name\":\"ServerlessApplicationRepository\"},\"servicediscovery\":{\"name\":\"ServiceDiscovery\"},\"workmail\":{\"name\":\"WorkMail\"},\"autoscalingplans\":{\"prefix\":\"autoscaling-plans\",\"name\":\"AutoScalingPlans\"},\"transcribeservice\":{\"prefix\":\"transcribe\",\"name\":\"TranscribeService\"},\"connect\":{\"name\":\"Connect\",\"cors\":true},\"acmpca\":{\"prefix\":\"acm-pca\",\"name\":\"ACMPCA\"},\"fms\":{\"name\":\"FMS\"},\"secretsmanager\":{\"name\":\"SecretsManager\",\"cors\":true},\"iotanalytics\":{\"name\":\"IoTAnalytics\",\"cors\":true},\"iot1clickdevicesservice\":{\"prefix\":\"iot1click-devices\",\"name\":\"IoT1ClickDevicesService\"},\"iot1clickprojects\":{\"prefix\":\"iot1click-projects\",\"name\":\"IoT1ClickProjects\"},\"pi\":{\"name\":\"PI\"},\"neptune\":{\"name\":\"Neptune\"},\"mediatailor\":{\"name\":\"MediaTailor\"},\"eks\":{\"name\":\"EKS\"},\"macie\":{\"name\":\"Macie\"},\"dlm\":{\"name\":\"DLM\"},\"signer\":{\"name\":\"Signer\"},\"chime\":{\"name\":\"Chime\"},\"pinpointemail\":{\"prefix\":\"pinpoint-email\",\"name\":\"PinpointEmail\"},\"ram\":{\"name\":\"RAM\"},\"route53resolver\":{\"name\":\"Route53Resolver\"},\"pinpointsmsvoice\":{\"prefix\":\"sms-voice\",\"name\":\"PinpointSMSVoice\"},\"quicksight\":{\"name\":\"QuickSight\"},\"rdsdataservice\":{\"prefix\":\"rds-data\",\"name\":\"RDSDataService\"},\"amplify\":{\"name\":\"Amplify\"},\"datasync\":{\"name\":\"DataSync\"},\"robomaker\":{\"name\":\"RoboMaker\"},\"transfer\":{\"name\":\"Transfer\"},\"globalaccelerator\":{\"name\":\"GlobalAccelerator\"},\"comprehendmedical\":{\"name\":\"ComprehendMedical\",\"cors\":true},\"kinesisanalyticsv2\":{\"name\":\"KinesisAnalyticsV2\"},\"mediaconnect\":{\"name\":\"MediaConnect\"},\"fsx\":{\"name\":\"FSx\"},\"securityhub\":{\"name\":\"SecurityHub\"},\"appmesh\":{\"name\":\"AppMesh\",\"versions\":[\"2018-10-01*\"]},\"licensemanager\":{\"prefix\":\"license-manager\",\"name\":\"LicenseManager\"},\"kafka\":{\"name\":\"Kafka\"},\"apigatewaymanagementapi\":{\"name\":\"ApiGatewayManagementApi\"},\"apigatewayv2\":{\"name\":\"ApiGatewayV2\"},\"docdb\":{\"name\":\"DocDB\"},\"backup\":{\"name\":\"Backup\"},\"worklink\":{\"name\":\"WorkLink\"},\"textract\":{\"name\":\"Textract\"},\"managedblockchain\":{\"name\":\"ManagedBlockchain\"},\"mediapackagevod\":{\"prefix\":\"mediapackage-vod\",\"name\":\"MediaPackageVod\"},\"groundstation\":{\"name\":\"GroundStation\"},\"iotthingsgraph\":{\"name\":\"IoTThingsGraph\"},\"iotevents\":{\"name\":\"IoTEvents\"},\"ioteventsdata\":{\"prefix\":\"iotevents-data\",\"name\":\"IoTEventsData\"},\"personalize\":{\"name\":\"Personalize\",\"cors\":true},\"personalizeevents\":{\"prefix\":\"personalize-events\",\"name\":\"PersonalizeEvents\",\"cors\":true},\"personalizeruntime\":{\"prefix\":\"personalize-runtime\",\"name\":\"PersonalizeRuntime\",\"cors\":true},\"applicationinsights\":{\"prefix\":\"application-insights\",\"name\":\"ApplicationInsights\"},\"servicequotas\":{\"prefix\":\"service-quotas\",\"name\":\"ServiceQuotas\"},\"ec2instanceconnect\":{\"prefix\":\"ec2-instance-connect\",\"name\":\"EC2InstanceConnect\"},\"eventbridge\":{\"name\":\"EventBridge\"},\"lakeformation\":{\"name\":\"LakeFormation\"},\"forecastservice\":{\"prefix\":\"forecast\",\"name\":\"ForecastService\",\"cors\":true},\"forecastqueryservice\":{\"prefix\":\"forecastquery\",\"name\":\"ForecastQueryService\",\"cors\":true},\"qldb\":{\"name\":\"QLDB\"},\"qldbsession\":{\"prefix\":\"qldb-session\",\"name\":\"QLDBSession\"},\"workmailmessageflow\":{\"name\":\"WorkMailMessageFlow\"},\"codestarnotifications\":{\"prefix\":\"codestar-notifications\",\"name\":\"CodeStarNotifications\"},\"savingsplans\":{\"name\":\"SavingsPlans\"},\"sso\":{\"name\":\"SSO\"},\"ssooidc\":{\"prefix\":\"sso-oidc\",\"name\":\"SSOOIDC\"},\"marketplacecatalog\":{\"prefix\":\"marketplace-catalog\",\"name\":\"MarketplaceCatalog\"},\"dataexchange\":{\"name\":\"DataExchange\"},\"sesv2\":{\"name\":\"SESV2\"},\"migrationhubconfig\":{\"prefix\":\"migrationhub-config\",\"name\":\"MigrationHubConfig\"},\"connectparticipant\":{\"name\":\"ConnectParticipant\"},\"appconfig\":{\"name\":\"AppConfig\"},\"iotsecuretunneling\":{\"name\":\"IoTSecureTunneling\"},\"wafv2\":{\"name\":\"WAFV2\"},\"elasticinference\":{\"prefix\":\"elastic-inference\",\"name\":\"ElasticInference\"},\"imagebuilder\":{\"name\":\"Imagebuilder\"},\"schemas\":{\"name\":\"Schemas\"},\"accessanalyzer\":{\"name\":\"AccessAnalyzer\"},\"codegurureviewer\":{\"prefix\":\"codeguru-reviewer\",\"name\":\"CodeGuruReviewer\"},\"codeguruprofiler\":{\"name\":\"CodeGuruProfiler\"},\"computeoptimizer\":{\"prefix\":\"compute-optimizer\",\"name\":\"ComputeOptimizer\"},\"frauddetector\":{\"name\":\"FraudDetector\"},\"kendra\":{\"name\":\"Kendra\"},\"networkmanager\":{\"name\":\"NetworkManager\"},\"outposts\":{\"name\":\"Outposts\"},\"augmentedairuntime\":{\"prefix\":\"sagemaker-a2i-runtime\",\"name\":\"AugmentedAIRuntime\"},\"ebs\":{\"name\":\"EBS\"},\"kinesisvideosignalingchannels\":{\"prefix\":\"kinesis-video-signaling\",\"name\":\"KinesisVideoSignalingChannels\",\"cors\":true},\"detective\":{\"name\":\"Detective\"},\"codestarconnections\":{\"prefix\":\"codestar-connections\",\"name\":\"CodeStarconnections\"},\"synthetics\":{\"name\":\"Synthetics\"},\"iotsitewise\":{\"name\":\"IoTSiteWise\"},\"macie2\":{\"name\":\"Macie2\"}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/apis/s3-2006-03-01.min.json":
  /*!**********************************************************!*\
    !*** ./node_modules/aws-sdk/apis/s3-2006-03-01.min.json ***!
    \**********************************************************/

  /*! exports provided: version, metadata, operations, shapes, default */

  /***/
  function node_modulesAwsSdkApisS320060301MinJson(module) {
    module.exports = JSON.parse("{\"version\":\"2.0\",\"metadata\":{\"apiVersion\":\"2006-03-01\",\"checksumFormat\":\"md5\",\"endpointPrefix\":\"s3\",\"globalEndpoint\":\"s3.amazonaws.com\",\"protocol\":\"rest-xml\",\"serviceAbbreviation\":\"Amazon S3\",\"serviceFullName\":\"Amazon Simple Storage Service\",\"serviceId\":\"S3\",\"signatureVersion\":\"s3\",\"uid\":\"s3-2006-03-01\"},\"operations\":{\"AbortMultipartUpload\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}/{Key+}\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\",\"UploadId\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"UploadId\":{\"location\":\"querystring\",\"locationName\":\"uploadId\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}}},\"CompleteMultipartUpload\":{\"http\":{\"requestUri\":\"/{Bucket}/{Key+}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\",\"UploadId\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"MultipartUpload\":{\"locationName\":\"CompleteMultipartUpload\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"members\":{\"Parts\":{\"locationName\":\"Part\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"ETag\":{},\"PartNumber\":{\"type\":\"integer\"}}},\"flattened\":true}}},\"UploadId\":{\"location\":\"querystring\",\"locationName\":\"uploadId\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}},\"payload\":\"MultipartUpload\"},\"output\":{\"type\":\"structure\",\"members\":{\"Location\":{},\"Bucket\":{},\"Key\":{},\"Expiration\":{\"location\":\"header\",\"locationName\":\"x-amz-expiration\"},\"ETag\":{},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}}},\"CopyObject\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}/{Key+}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"CopySource\",\"Key\"],\"members\":{\"ACL\":{\"location\":\"header\",\"locationName\":\"x-amz-acl\"},\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"CacheControl\":{\"location\":\"header\",\"locationName\":\"Cache-Control\"},\"ContentDisposition\":{\"location\":\"header\",\"locationName\":\"Content-Disposition\"},\"ContentEncoding\":{\"location\":\"header\",\"locationName\":\"Content-Encoding\"},\"ContentLanguage\":{\"location\":\"header\",\"locationName\":\"Content-Language\"},\"ContentType\":{\"location\":\"header\",\"locationName\":\"Content-Type\"},\"CopySource\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source\"},\"CopySourceIfMatch\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-if-match\"},\"CopySourceIfModifiedSince\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-if-modified-since\",\"type\":\"timestamp\"},\"CopySourceIfNoneMatch\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-if-none-match\"},\"CopySourceIfUnmodifiedSince\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-if-unmodified-since\",\"type\":\"timestamp\"},\"Expires\":{\"location\":\"header\",\"locationName\":\"Expires\",\"type\":\"timestamp\"},\"GrantFullControl\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-full-control\"},\"GrantRead\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read\"},\"GrantReadACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read-acp\"},\"GrantWriteACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write-acp\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"Metadata\":{\"shape\":\"S11\",\"location\":\"headers\",\"locationName\":\"x-amz-meta-\"},\"MetadataDirective\":{\"location\":\"header\",\"locationName\":\"x-amz-metadata-directive\"},\"TaggingDirective\":{\"location\":\"header\",\"locationName\":\"x-amz-tagging-directive\"},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"StorageClass\":{\"location\":\"header\",\"locationName\":\"x-amz-storage-class\"},\"WebsiteRedirectLocation\":{\"location\":\"header\",\"locationName\":\"x-amz-website-redirect-location\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKey\":{\"shape\":\"S19\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"SSEKMSEncryptionContext\":{\"shape\":\"S1b\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-context\"},\"CopySourceSSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-server-side-encryption-customer-algorithm\"},\"CopySourceSSECustomerKey\":{\"shape\":\"S1d\",\"location\":\"header\",\"locationName\":\"x-amz-copy-source-server-side-encryption-customer-key\"},\"CopySourceSSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-server-side-encryption-customer-key-MD5\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"Tagging\":{\"location\":\"header\",\"locationName\":\"x-amz-tagging\"},\"ObjectLockMode\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-mode\"},\"ObjectLockRetainUntilDate\":{\"shape\":\"S1h\",\"location\":\"header\",\"locationName\":\"x-amz-object-lock-retain-until-date\"},\"ObjectLockLegalHoldStatus\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-legal-hold\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"CopyObjectResult\":{\"type\":\"structure\",\"members\":{\"ETag\":{},\"LastModified\":{\"type\":\"timestamp\"}}},\"Expiration\":{\"location\":\"header\",\"locationName\":\"x-amz-expiration\"},\"CopySourceVersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-version-id\"},\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"SSEKMSEncryptionContext\":{\"shape\":\"S1b\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-context\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}},\"payload\":\"CopyObjectResult\"},\"alias\":\"PutObjectCopy\"},\"CreateBucket\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"ACL\":{\"location\":\"header\",\"locationName\":\"x-amz-acl\"},\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"CreateBucketConfiguration\":{\"locationName\":\"CreateBucketConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"members\":{\"LocationConstraint\":{}}},\"GrantFullControl\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-full-control\"},\"GrantRead\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read\"},\"GrantReadACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read-acp\"},\"GrantWrite\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write\"},\"GrantWriteACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write-acp\"},\"ObjectLockEnabledForBucket\":{\"location\":\"header\",\"locationName\":\"x-amz-bucket-object-lock-enabled\",\"type\":\"boolean\"}},\"payload\":\"CreateBucketConfiguration\"},\"output\":{\"type\":\"structure\",\"members\":{\"Location\":{\"location\":\"header\",\"locationName\":\"Location\"}}},\"alias\":\"PutBucket\"},\"CreateMultipartUpload\":{\"http\":{\"requestUri\":\"/{Bucket}/{Key+}?uploads\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"ACL\":{\"location\":\"header\",\"locationName\":\"x-amz-acl\"},\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"CacheControl\":{\"location\":\"header\",\"locationName\":\"Cache-Control\"},\"ContentDisposition\":{\"location\":\"header\",\"locationName\":\"Content-Disposition\"},\"ContentEncoding\":{\"location\":\"header\",\"locationName\":\"Content-Encoding\"},\"ContentLanguage\":{\"location\":\"header\",\"locationName\":\"Content-Language\"},\"ContentType\":{\"location\":\"header\",\"locationName\":\"Content-Type\"},\"Expires\":{\"location\":\"header\",\"locationName\":\"Expires\",\"type\":\"timestamp\"},\"GrantFullControl\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-full-control\"},\"GrantRead\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read\"},\"GrantReadACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read-acp\"},\"GrantWriteACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write-acp\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"Metadata\":{\"shape\":\"S11\",\"location\":\"headers\",\"locationName\":\"x-amz-meta-\"},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"StorageClass\":{\"location\":\"header\",\"locationName\":\"x-amz-storage-class\"},\"WebsiteRedirectLocation\":{\"location\":\"header\",\"locationName\":\"x-amz-website-redirect-location\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKey\":{\"shape\":\"S19\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"SSEKMSEncryptionContext\":{\"shape\":\"S1b\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-context\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"Tagging\":{\"location\":\"header\",\"locationName\":\"x-amz-tagging\"},\"ObjectLockMode\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-mode\"},\"ObjectLockRetainUntilDate\":{\"shape\":\"S1h\",\"location\":\"header\",\"locationName\":\"x-amz-object-lock-retain-until-date\"},\"ObjectLockLegalHoldStatus\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-legal-hold\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"AbortDate\":{\"location\":\"header\",\"locationName\":\"x-amz-abort-date\",\"type\":\"timestamp\"},\"AbortRuleId\":{\"location\":\"header\",\"locationName\":\"x-amz-abort-rule-id\"},\"Bucket\":{\"locationName\":\"Bucket\"},\"Key\":{},\"UploadId\":{},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"SSEKMSEncryptionContext\":{\"shape\":\"S1b\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-context\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}},\"alias\":\"InitiateMultipartUpload\"},\"DeleteBucket\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"DeleteBucketAnalyticsConfiguration\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?analytics\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"}}}},\"DeleteBucketCors\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?cors\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"DeleteBucketEncryption\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?encryption\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"DeleteBucketInventoryConfiguration\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?inventory\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"}}}},\"DeleteBucketLifecycle\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?lifecycle\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"DeleteBucketMetricsConfiguration\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?metrics\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"}}}},\"DeleteBucketPolicy\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?policy\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"DeleteBucketReplication\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?replication\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"DeleteBucketTagging\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?tagging\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"DeleteBucketWebsite\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?website\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"DeleteObject\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}/{Key+}\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"MFA\":{\"location\":\"header\",\"locationName\":\"x-amz-mfa\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"BypassGovernanceRetention\":{\"location\":\"header\",\"locationName\":\"x-amz-bypass-governance-retention\",\"type\":\"boolean\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"DeleteMarker\":{\"location\":\"header\",\"locationName\":\"x-amz-delete-marker\",\"type\":\"boolean\"},\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}}},\"DeleteObjectTagging\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}/{Key+}?tagging\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"}}}},\"DeleteObjects\":{\"http\":{\"requestUri\":\"/{Bucket}?delete\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Delete\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Delete\":{\"locationName\":\"Delete\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"required\":[\"Objects\"],\"members\":{\"Objects\":{\"locationName\":\"Object\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"Key\"],\"members\":{\"Key\":{},\"VersionId\":{}}},\"flattened\":true},\"Quiet\":{\"type\":\"boolean\"}}},\"MFA\":{\"location\":\"header\",\"locationName\":\"x-amz-mfa\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"BypassGovernanceRetention\":{\"location\":\"header\",\"locationName\":\"x-amz-bypass-governance-retention\",\"type\":\"boolean\"}},\"payload\":\"Delete\"},\"output\":{\"type\":\"structure\",\"members\":{\"Deleted\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"Key\":{},\"VersionId\":{},\"DeleteMarker\":{\"type\":\"boolean\"},\"DeleteMarkerVersionId\":{}}},\"flattened\":true},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"},\"Errors\":{\"locationName\":\"Error\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"Key\":{},\"VersionId\":{},\"Code\":{},\"Message\":{}}},\"flattened\":true}}},\"alias\":\"DeleteMultipleObjects\",\"httpChecksumRequired\":true},\"DeletePublicAccessBlock\":{\"http\":{\"method\":\"DELETE\",\"requestUri\":\"/{Bucket}?publicAccessBlock\",\"responseCode\":204},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"GetBucketAccelerateConfiguration\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?accelerate\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Status\":{}}}},\"GetBucketAcl\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?acl\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Owner\":{\"shape\":\"S32\"},\"Grants\":{\"shape\":\"S35\",\"locationName\":\"AccessControlList\"}}}},\"GetBucketAnalyticsConfiguration\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?analytics\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"AnalyticsConfiguration\":{\"shape\":\"S3e\"}},\"payload\":\"AnalyticsConfiguration\"}},\"GetBucketCors\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?cors\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"CORSRules\":{\"shape\":\"S3u\",\"locationName\":\"CORSRule\"}}}},\"GetBucketEncryption\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?encryption\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"ServerSideEncryptionConfiguration\":{\"shape\":\"S47\"}},\"payload\":\"ServerSideEncryptionConfiguration\"}},\"GetBucketInventoryConfiguration\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?inventory\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"InventoryConfiguration\":{\"shape\":\"S4d\"}},\"payload\":\"InventoryConfiguration\"}},\"GetBucketLifecycle\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?lifecycle\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Rules\":{\"shape\":\"S4t\",\"locationName\":\"Rule\"}}},\"deprecated\":true},\"GetBucketLifecycleConfiguration\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?lifecycle\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Rules\":{\"shape\":\"S58\",\"locationName\":\"Rule\"}}}},\"GetBucketLocation\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?location\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"LocationConstraint\":{}}}},\"GetBucketLogging\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?logging\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"LoggingEnabled\":{\"shape\":\"S5i\"}}}},\"GetBucketMetricsConfiguration\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?metrics\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"MetricsConfiguration\":{\"shape\":\"S5q\"}},\"payload\":\"MetricsConfiguration\"}},\"GetBucketNotification\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?notification\"},\"input\":{\"shape\":\"S5t\"},\"output\":{\"shape\":\"S5u\"},\"deprecated\":true},\"GetBucketNotificationConfiguration\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?notification\"},\"input\":{\"shape\":\"S5t\"},\"output\":{\"shape\":\"S65\"}},\"GetBucketPolicy\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?policy\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Policy\":{}},\"payload\":\"Policy\"}},\"GetBucketPolicyStatus\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?policyStatus\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"PolicyStatus\":{\"type\":\"structure\",\"members\":{\"IsPublic\":{\"locationName\":\"IsPublic\",\"type\":\"boolean\"}}}},\"payload\":\"PolicyStatus\"}},\"GetBucketReplication\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?replication\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"ReplicationConfiguration\":{\"shape\":\"S6s\"}},\"payload\":\"ReplicationConfiguration\"}},\"GetBucketRequestPayment\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?requestPayment\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Payer\":{}}}},\"GetBucketTagging\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?tagging\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"required\":[\"TagSet\"],\"members\":{\"TagSet\":{\"shape\":\"S3k\"}}}},\"GetBucketVersioning\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?versioning\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Status\":{},\"MFADelete\":{\"locationName\":\"MfaDelete\"}}}},\"GetBucketWebsite\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?website\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"RedirectAllRequestsTo\":{\"shape\":\"S7t\"},\"IndexDocument\":{\"shape\":\"S7w\"},\"ErrorDocument\":{\"shape\":\"S7y\"},\"RoutingRules\":{\"shape\":\"S7z\"}}}},\"GetObject\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}/{Key+}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"IfMatch\":{\"location\":\"header\",\"locationName\":\"If-Match\"},\"IfModifiedSince\":{\"location\":\"header\",\"locationName\":\"If-Modified-Since\",\"type\":\"timestamp\"},\"IfNoneMatch\":{\"location\":\"header\",\"locationName\":\"If-None-Match\"},\"IfUnmodifiedSince\":{\"location\":\"header\",\"locationName\":\"If-Unmodified-Since\",\"type\":\"timestamp\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"Range\":{\"location\":\"header\",\"locationName\":\"Range\"},\"ResponseCacheControl\":{\"location\":\"querystring\",\"locationName\":\"response-cache-control\"},\"ResponseContentDisposition\":{\"location\":\"querystring\",\"locationName\":\"response-content-disposition\"},\"ResponseContentEncoding\":{\"location\":\"querystring\",\"locationName\":\"response-content-encoding\"},\"ResponseContentLanguage\":{\"location\":\"querystring\",\"locationName\":\"response-content-language\"},\"ResponseContentType\":{\"location\":\"querystring\",\"locationName\":\"response-content-type\"},\"ResponseExpires\":{\"location\":\"querystring\",\"locationName\":\"response-expires\",\"type\":\"timestamp\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKey\":{\"shape\":\"S19\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"PartNumber\":{\"location\":\"querystring\",\"locationName\":\"partNumber\",\"type\":\"integer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Body\":{\"streaming\":true,\"type\":\"blob\"},\"DeleteMarker\":{\"location\":\"header\",\"locationName\":\"x-amz-delete-marker\",\"type\":\"boolean\"},\"AcceptRanges\":{\"location\":\"header\",\"locationName\":\"accept-ranges\"},\"Expiration\":{\"location\":\"header\",\"locationName\":\"x-amz-expiration\"},\"Restore\":{\"location\":\"header\",\"locationName\":\"x-amz-restore\"},\"LastModified\":{\"location\":\"header\",\"locationName\":\"Last-Modified\",\"type\":\"timestamp\"},\"ContentLength\":{\"location\":\"header\",\"locationName\":\"Content-Length\",\"type\":\"long\"},\"ETag\":{\"location\":\"header\",\"locationName\":\"ETag\"},\"MissingMeta\":{\"location\":\"header\",\"locationName\":\"x-amz-missing-meta\",\"type\":\"integer\"},\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"},\"CacheControl\":{\"location\":\"header\",\"locationName\":\"Cache-Control\"},\"ContentDisposition\":{\"location\":\"header\",\"locationName\":\"Content-Disposition\"},\"ContentEncoding\":{\"location\":\"header\",\"locationName\":\"Content-Encoding\"},\"ContentLanguage\":{\"location\":\"header\",\"locationName\":\"Content-Language\"},\"ContentRange\":{\"location\":\"header\",\"locationName\":\"Content-Range\"},\"ContentType\":{\"location\":\"header\",\"locationName\":\"Content-Type\"},\"Expires\":{\"location\":\"header\",\"locationName\":\"Expires\",\"type\":\"timestamp\"},\"WebsiteRedirectLocation\":{\"location\":\"header\",\"locationName\":\"x-amz-website-redirect-location\"},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"Metadata\":{\"shape\":\"S11\",\"location\":\"headers\",\"locationName\":\"x-amz-meta-\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"StorageClass\":{\"location\":\"header\",\"locationName\":\"x-amz-storage-class\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"},\"ReplicationStatus\":{\"location\":\"header\",\"locationName\":\"x-amz-replication-status\"},\"PartsCount\":{\"location\":\"header\",\"locationName\":\"x-amz-mp-parts-count\",\"type\":\"integer\"},\"TagCount\":{\"location\":\"header\",\"locationName\":\"x-amz-tagging-count\",\"type\":\"integer\"},\"ObjectLockMode\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-mode\"},\"ObjectLockRetainUntilDate\":{\"shape\":\"S1h\",\"location\":\"header\",\"locationName\":\"x-amz-object-lock-retain-until-date\"},\"ObjectLockLegalHoldStatus\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-legal-hold\"}},\"payload\":\"Body\"}},\"GetObjectAcl\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}/{Key+}?acl\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Owner\":{\"shape\":\"S32\"},\"Grants\":{\"shape\":\"S35\",\"locationName\":\"AccessControlList\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}}},\"GetObjectLegalHold\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}/{Key+}?legal-hold\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"LegalHold\":{\"shape\":\"S8y\"}},\"payload\":\"LegalHold\"}},\"GetObjectLockConfiguration\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?object-lock\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"ObjectLockConfiguration\":{\"shape\":\"S91\"}},\"payload\":\"ObjectLockConfiguration\"}},\"GetObjectRetention\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}/{Key+}?retention\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Retention\":{\"shape\":\"S99\"}},\"payload\":\"Retention\"}},\"GetObjectTagging\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}/{Key+}?tagging\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"}}},\"output\":{\"type\":\"structure\",\"required\":[\"TagSet\"],\"members\":{\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"},\"TagSet\":{\"shape\":\"S3k\"}}}},\"GetObjectTorrent\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}/{Key+}?torrent\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Body\":{\"streaming\":true,\"type\":\"blob\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}},\"payload\":\"Body\"}},\"GetPublicAccessBlock\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?publicAccessBlock\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"PublicAccessBlockConfiguration\":{\"shape\":\"S9g\"}},\"payload\":\"PublicAccessBlockConfiguration\"}},\"HeadBucket\":{\"http\":{\"method\":\"HEAD\",\"requestUri\":\"/{Bucket}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}}},\"HeadObject\":{\"http\":{\"method\":\"HEAD\",\"requestUri\":\"/{Bucket}/{Key+}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"IfMatch\":{\"location\":\"header\",\"locationName\":\"If-Match\"},\"IfModifiedSince\":{\"location\":\"header\",\"locationName\":\"If-Modified-Since\",\"type\":\"timestamp\"},\"IfNoneMatch\":{\"location\":\"header\",\"locationName\":\"If-None-Match\"},\"IfUnmodifiedSince\":{\"location\":\"header\",\"locationName\":\"If-Unmodified-Since\",\"type\":\"timestamp\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"Range\":{\"location\":\"header\",\"locationName\":\"Range\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKey\":{\"shape\":\"S19\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"PartNumber\":{\"location\":\"querystring\",\"locationName\":\"partNumber\",\"type\":\"integer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"DeleteMarker\":{\"location\":\"header\",\"locationName\":\"x-amz-delete-marker\",\"type\":\"boolean\"},\"AcceptRanges\":{\"location\":\"header\",\"locationName\":\"accept-ranges\"},\"Expiration\":{\"location\":\"header\",\"locationName\":\"x-amz-expiration\"},\"Restore\":{\"location\":\"header\",\"locationName\":\"x-amz-restore\"},\"LastModified\":{\"location\":\"header\",\"locationName\":\"Last-Modified\",\"type\":\"timestamp\"},\"ContentLength\":{\"location\":\"header\",\"locationName\":\"Content-Length\",\"type\":\"long\"},\"ETag\":{\"location\":\"header\",\"locationName\":\"ETag\"},\"MissingMeta\":{\"location\":\"header\",\"locationName\":\"x-amz-missing-meta\",\"type\":\"integer\"},\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"},\"CacheControl\":{\"location\":\"header\",\"locationName\":\"Cache-Control\"},\"ContentDisposition\":{\"location\":\"header\",\"locationName\":\"Content-Disposition\"},\"ContentEncoding\":{\"location\":\"header\",\"locationName\":\"Content-Encoding\"},\"ContentLanguage\":{\"location\":\"header\",\"locationName\":\"Content-Language\"},\"ContentType\":{\"location\":\"header\",\"locationName\":\"Content-Type\"},\"Expires\":{\"location\":\"header\",\"locationName\":\"Expires\",\"type\":\"timestamp\"},\"WebsiteRedirectLocation\":{\"location\":\"header\",\"locationName\":\"x-amz-website-redirect-location\"},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"Metadata\":{\"shape\":\"S11\",\"location\":\"headers\",\"locationName\":\"x-amz-meta-\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"StorageClass\":{\"location\":\"header\",\"locationName\":\"x-amz-storage-class\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"},\"ReplicationStatus\":{\"location\":\"header\",\"locationName\":\"x-amz-replication-status\"},\"PartsCount\":{\"location\":\"header\",\"locationName\":\"x-amz-mp-parts-count\",\"type\":\"integer\"},\"ObjectLockMode\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-mode\"},\"ObjectLockRetainUntilDate\":{\"shape\":\"S1h\",\"location\":\"header\",\"locationName\":\"x-amz-object-lock-retain-until-date\"},\"ObjectLockLegalHoldStatus\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-legal-hold\"}}}},\"ListBucketAnalyticsConfigurations\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?analytics\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContinuationToken\":{\"location\":\"querystring\",\"locationName\":\"continuation-token\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IsTruncated\":{\"type\":\"boolean\"},\"ContinuationToken\":{},\"NextContinuationToken\":{},\"AnalyticsConfigurationList\":{\"locationName\":\"AnalyticsConfiguration\",\"type\":\"list\",\"member\":{\"shape\":\"S3e\"},\"flattened\":true}}}},\"ListBucketInventoryConfigurations\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?inventory\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContinuationToken\":{\"location\":\"querystring\",\"locationName\":\"continuation-token\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"ContinuationToken\":{},\"InventoryConfigurationList\":{\"locationName\":\"InventoryConfiguration\",\"type\":\"list\",\"member\":{\"shape\":\"S4d\"},\"flattened\":true},\"IsTruncated\":{\"type\":\"boolean\"},\"NextContinuationToken\":{}}}},\"ListBucketMetricsConfigurations\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?metrics\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContinuationToken\":{\"location\":\"querystring\",\"locationName\":\"continuation-token\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IsTruncated\":{\"type\":\"boolean\"},\"ContinuationToken\":{},\"NextContinuationToken\":{},\"MetricsConfigurationList\":{\"locationName\":\"MetricsConfiguration\",\"type\":\"list\",\"member\":{\"shape\":\"S5q\"},\"flattened\":true}}}},\"ListBuckets\":{\"http\":{\"method\":\"GET\"},\"output\":{\"type\":\"structure\",\"members\":{\"Buckets\":{\"type\":\"list\",\"member\":{\"locationName\":\"Bucket\",\"type\":\"structure\",\"members\":{\"Name\":{},\"CreationDate\":{\"type\":\"timestamp\"}}}},\"Owner\":{\"shape\":\"S32\"}}},\"alias\":\"GetService\"},\"ListMultipartUploads\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?uploads\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Delimiter\":{\"location\":\"querystring\",\"locationName\":\"delimiter\"},\"EncodingType\":{\"location\":\"querystring\",\"locationName\":\"encoding-type\"},\"KeyMarker\":{\"location\":\"querystring\",\"locationName\":\"key-marker\"},\"MaxUploads\":{\"location\":\"querystring\",\"locationName\":\"max-uploads\",\"type\":\"integer\"},\"Prefix\":{\"location\":\"querystring\",\"locationName\":\"prefix\"},\"UploadIdMarker\":{\"location\":\"querystring\",\"locationName\":\"upload-id-marker\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"Bucket\":{},\"KeyMarker\":{},\"UploadIdMarker\":{},\"NextKeyMarker\":{},\"Prefix\":{},\"Delimiter\":{},\"NextUploadIdMarker\":{},\"MaxUploads\":{\"type\":\"integer\"},\"IsTruncated\":{\"type\":\"boolean\"},\"Uploads\":{\"locationName\":\"Upload\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"UploadId\":{},\"Key\":{},\"Initiated\":{\"type\":\"timestamp\"},\"StorageClass\":{},\"Owner\":{\"shape\":\"S32\"},\"Initiator\":{\"shape\":\"Sad\"}}},\"flattened\":true},\"CommonPrefixes\":{\"shape\":\"Sae\"},\"EncodingType\":{}}}},\"ListObjectVersions\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?versions\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Delimiter\":{\"location\":\"querystring\",\"locationName\":\"delimiter\"},\"EncodingType\":{\"location\":\"querystring\",\"locationName\":\"encoding-type\"},\"KeyMarker\":{\"location\":\"querystring\",\"locationName\":\"key-marker\"},\"MaxKeys\":{\"location\":\"querystring\",\"locationName\":\"max-keys\",\"type\":\"integer\"},\"Prefix\":{\"location\":\"querystring\",\"locationName\":\"prefix\"},\"VersionIdMarker\":{\"location\":\"querystring\",\"locationName\":\"version-id-marker\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IsTruncated\":{\"type\":\"boolean\"},\"KeyMarker\":{},\"VersionIdMarker\":{},\"NextKeyMarker\":{},\"NextVersionIdMarker\":{},\"Versions\":{\"locationName\":\"Version\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"ETag\":{},\"Size\":{\"type\":\"integer\"},\"StorageClass\":{},\"Key\":{},\"VersionId\":{},\"IsLatest\":{\"type\":\"boolean\"},\"LastModified\":{\"type\":\"timestamp\"},\"Owner\":{\"shape\":\"S32\"}}},\"flattened\":true},\"DeleteMarkers\":{\"locationName\":\"DeleteMarker\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"Owner\":{\"shape\":\"S32\"},\"Key\":{},\"VersionId\":{},\"IsLatest\":{\"type\":\"boolean\"},\"LastModified\":{\"type\":\"timestamp\"}}},\"flattened\":true},\"Name\":{},\"Prefix\":{},\"Delimiter\":{},\"MaxKeys\":{\"type\":\"integer\"},\"CommonPrefixes\":{\"shape\":\"Sae\"},\"EncodingType\":{}}},\"alias\":\"GetBucketObjectVersions\"},\"ListObjects\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Delimiter\":{\"location\":\"querystring\",\"locationName\":\"delimiter\"},\"EncodingType\":{\"location\":\"querystring\",\"locationName\":\"encoding-type\"},\"Marker\":{\"location\":\"querystring\",\"locationName\":\"marker\"},\"MaxKeys\":{\"location\":\"querystring\",\"locationName\":\"max-keys\",\"type\":\"integer\"},\"Prefix\":{\"location\":\"querystring\",\"locationName\":\"prefix\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IsTruncated\":{\"type\":\"boolean\"},\"Marker\":{},\"NextMarker\":{},\"Contents\":{\"shape\":\"Saw\"},\"Name\":{},\"Prefix\":{},\"Delimiter\":{},\"MaxKeys\":{\"type\":\"integer\"},\"CommonPrefixes\":{\"shape\":\"Sae\"},\"EncodingType\":{}}},\"alias\":\"GetBucket\"},\"ListObjectsV2\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}?list-type=2\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Delimiter\":{\"location\":\"querystring\",\"locationName\":\"delimiter\"},\"EncodingType\":{\"location\":\"querystring\",\"locationName\":\"encoding-type\"},\"MaxKeys\":{\"location\":\"querystring\",\"locationName\":\"max-keys\",\"type\":\"integer\"},\"Prefix\":{\"location\":\"querystring\",\"locationName\":\"prefix\"},\"ContinuationToken\":{\"location\":\"querystring\",\"locationName\":\"continuation-token\"},\"FetchOwner\":{\"location\":\"querystring\",\"locationName\":\"fetch-owner\",\"type\":\"boolean\"},\"StartAfter\":{\"location\":\"querystring\",\"locationName\":\"start-after\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"IsTruncated\":{\"type\":\"boolean\"},\"Contents\":{\"shape\":\"Saw\"},\"Name\":{},\"Prefix\":{},\"Delimiter\":{},\"MaxKeys\":{\"type\":\"integer\"},\"CommonPrefixes\":{\"shape\":\"Sae\"},\"EncodingType\":{},\"KeyCount\":{\"type\":\"integer\"},\"ContinuationToken\":{},\"NextContinuationToken\":{},\"StartAfter\":{}}}},\"ListParts\":{\"http\":{\"method\":\"GET\",\"requestUri\":\"/{Bucket}/{Key+}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\",\"UploadId\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"MaxParts\":{\"location\":\"querystring\",\"locationName\":\"max-parts\",\"type\":\"integer\"},\"PartNumberMarker\":{\"location\":\"querystring\",\"locationName\":\"part-number-marker\",\"type\":\"integer\"},\"UploadId\":{\"location\":\"querystring\",\"locationName\":\"uploadId\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"AbortDate\":{\"location\":\"header\",\"locationName\":\"x-amz-abort-date\",\"type\":\"timestamp\"},\"AbortRuleId\":{\"location\":\"header\",\"locationName\":\"x-amz-abort-rule-id\"},\"Bucket\":{},\"Key\":{},\"UploadId\":{},\"PartNumberMarker\":{\"type\":\"integer\"},\"NextPartNumberMarker\":{\"type\":\"integer\"},\"MaxParts\":{\"type\":\"integer\"},\"IsTruncated\":{\"type\":\"boolean\"},\"Parts\":{\"locationName\":\"Part\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"PartNumber\":{\"type\":\"integer\"},\"LastModified\":{\"type\":\"timestamp\"},\"ETag\":{},\"Size\":{\"type\":\"integer\"}}},\"flattened\":true},\"Initiator\":{\"shape\":\"Sad\"},\"Owner\":{\"shape\":\"S32\"},\"StorageClass\":{},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}}},\"PutBucketAccelerateConfiguration\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?accelerate\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"AccelerateConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"AccelerateConfiguration\":{\"locationName\":\"AccelerateConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"members\":{\"Status\":{}}}},\"payload\":\"AccelerateConfiguration\"}},\"PutBucketAcl\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?acl\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"ACL\":{\"location\":\"header\",\"locationName\":\"x-amz-acl\"},\"AccessControlPolicy\":{\"shape\":\"Sbe\",\"locationName\":\"AccessControlPolicy\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}},\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"GrantFullControl\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-full-control\"},\"GrantRead\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read\"},\"GrantReadACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read-acp\"},\"GrantWrite\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write\"},\"GrantWriteACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write-acp\"}},\"payload\":\"AccessControlPolicy\"},\"httpChecksumRequired\":true},\"PutBucketAnalyticsConfiguration\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?analytics\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\",\"AnalyticsConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"},\"AnalyticsConfiguration\":{\"shape\":\"S3e\",\"locationName\":\"AnalyticsConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"AnalyticsConfiguration\"}},\"PutBucketCors\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?cors\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"CORSConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"CORSConfiguration\":{\"locationName\":\"CORSConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"required\":[\"CORSRules\"],\"members\":{\"CORSRules\":{\"shape\":\"S3u\",\"locationName\":\"CORSRule\"}}},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"}},\"payload\":\"CORSConfiguration\"},\"httpChecksumRequired\":true},\"PutBucketEncryption\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?encryption\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"ServerSideEncryptionConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"ServerSideEncryptionConfiguration\":{\"shape\":\"S47\",\"locationName\":\"ServerSideEncryptionConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"ServerSideEncryptionConfiguration\"},\"httpChecksumRequired\":true},\"PutBucketInventoryConfiguration\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?inventory\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\",\"InventoryConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"},\"InventoryConfiguration\":{\"shape\":\"S4d\",\"locationName\":\"InventoryConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"InventoryConfiguration\"}},\"PutBucketLifecycle\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?lifecycle\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"LifecycleConfiguration\":{\"locationName\":\"LifecycleConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"required\":[\"Rules\"],\"members\":{\"Rules\":{\"shape\":\"S4t\",\"locationName\":\"Rule\"}}}},\"payload\":\"LifecycleConfiguration\"},\"deprecated\":true,\"httpChecksumRequired\":true},\"PutBucketLifecycleConfiguration\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?lifecycle\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"LifecycleConfiguration\":{\"locationName\":\"LifecycleConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"required\":[\"Rules\"],\"members\":{\"Rules\":{\"shape\":\"S58\",\"locationName\":\"Rule\"}}}},\"payload\":\"LifecycleConfiguration\"},\"httpChecksumRequired\":true},\"PutBucketLogging\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?logging\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"BucketLoggingStatus\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"BucketLoggingStatus\":{\"locationName\":\"BucketLoggingStatus\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"members\":{\"LoggingEnabled\":{\"shape\":\"S5i\"}}},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"}},\"payload\":\"BucketLoggingStatus\"},\"httpChecksumRequired\":true},\"PutBucketMetricsConfiguration\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?metrics\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Id\",\"MetricsConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Id\":{\"location\":\"querystring\",\"locationName\":\"id\"},\"MetricsConfiguration\":{\"shape\":\"S5q\",\"locationName\":\"MetricsConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"MetricsConfiguration\"}},\"PutBucketNotification\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?notification\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"NotificationConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"NotificationConfiguration\":{\"shape\":\"S5u\",\"locationName\":\"NotificationConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"NotificationConfiguration\"},\"deprecated\":true,\"httpChecksumRequired\":true},\"PutBucketNotificationConfiguration\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?notification\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"NotificationConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"NotificationConfiguration\":{\"shape\":\"S65\",\"locationName\":\"NotificationConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"NotificationConfiguration\"}},\"PutBucketPolicy\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?policy\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Policy\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"ConfirmRemoveSelfBucketAccess\":{\"location\":\"header\",\"locationName\":\"x-amz-confirm-remove-self-bucket-access\",\"type\":\"boolean\"},\"Policy\":{}},\"payload\":\"Policy\"},\"httpChecksumRequired\":true},\"PutBucketReplication\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?replication\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"ReplicationConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"ReplicationConfiguration\":{\"shape\":\"S6s\",\"locationName\":\"ReplicationConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}},\"Token\":{\"location\":\"header\",\"locationName\":\"x-amz-bucket-object-lock-token\"}},\"payload\":\"ReplicationConfiguration\"},\"httpChecksumRequired\":true},\"PutBucketRequestPayment\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?requestPayment\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"RequestPaymentConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"RequestPaymentConfiguration\":{\"locationName\":\"RequestPaymentConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"required\":[\"Payer\"],\"members\":{\"Payer\":{}}}},\"payload\":\"RequestPaymentConfiguration\"},\"httpChecksumRequired\":true},\"PutBucketTagging\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?tagging\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Tagging\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"Tagging\":{\"shape\":\"Sc1\",\"locationName\":\"Tagging\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"Tagging\"},\"httpChecksumRequired\":true},\"PutBucketVersioning\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?versioning\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"VersioningConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"MFA\":{\"location\":\"header\",\"locationName\":\"x-amz-mfa\"},\"VersioningConfiguration\":{\"locationName\":\"VersioningConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"members\":{\"MFADelete\":{\"locationName\":\"MfaDelete\"},\"Status\":{}}}},\"payload\":\"VersioningConfiguration\"},\"httpChecksumRequired\":true},\"PutBucketWebsite\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?website\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"WebsiteConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"WebsiteConfiguration\":{\"locationName\":\"WebsiteConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"members\":{\"ErrorDocument\":{\"shape\":\"S7y\"},\"IndexDocument\":{\"shape\":\"S7w\"},\"RedirectAllRequestsTo\":{\"shape\":\"S7t\"},\"RoutingRules\":{\"shape\":\"S7z\"}}}},\"payload\":\"WebsiteConfiguration\"},\"httpChecksumRequired\":true},\"PutObject\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}/{Key+}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"ACL\":{\"location\":\"header\",\"locationName\":\"x-amz-acl\"},\"Body\":{\"streaming\":true,\"type\":\"blob\"},\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"CacheControl\":{\"location\":\"header\",\"locationName\":\"Cache-Control\"},\"ContentDisposition\":{\"location\":\"header\",\"locationName\":\"Content-Disposition\"},\"ContentEncoding\":{\"location\":\"header\",\"locationName\":\"Content-Encoding\"},\"ContentLanguage\":{\"location\":\"header\",\"locationName\":\"Content-Language\"},\"ContentLength\":{\"location\":\"header\",\"locationName\":\"Content-Length\",\"type\":\"long\"},\"ContentMD5\":{\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"ContentType\":{\"location\":\"header\",\"locationName\":\"Content-Type\"},\"Expires\":{\"location\":\"header\",\"locationName\":\"Expires\",\"type\":\"timestamp\"},\"GrantFullControl\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-full-control\"},\"GrantRead\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read\"},\"GrantReadACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read-acp\"},\"GrantWriteACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write-acp\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"Metadata\":{\"shape\":\"S11\",\"location\":\"headers\",\"locationName\":\"x-amz-meta-\"},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"StorageClass\":{\"location\":\"header\",\"locationName\":\"x-amz-storage-class\"},\"WebsiteRedirectLocation\":{\"location\":\"header\",\"locationName\":\"x-amz-website-redirect-location\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKey\":{\"shape\":\"S19\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"SSEKMSEncryptionContext\":{\"shape\":\"S1b\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-context\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"Tagging\":{\"location\":\"header\",\"locationName\":\"x-amz-tagging\"},\"ObjectLockMode\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-mode\"},\"ObjectLockRetainUntilDate\":{\"shape\":\"S1h\",\"location\":\"header\",\"locationName\":\"x-amz-object-lock-retain-until-date\"},\"ObjectLockLegalHoldStatus\":{\"location\":\"header\",\"locationName\":\"x-amz-object-lock-legal-hold\"}},\"payload\":\"Body\"},\"output\":{\"type\":\"structure\",\"members\":{\"Expiration\":{\"location\":\"header\",\"locationName\":\"x-amz-expiration\"},\"ETag\":{\"location\":\"header\",\"locationName\":\"ETag\"},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"SSEKMSEncryptionContext\":{\"shape\":\"S1b\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-context\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}}},\"PutObjectAcl\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}/{Key+}?acl\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"ACL\":{\"location\":\"header\",\"locationName\":\"x-amz-acl\"},\"AccessControlPolicy\":{\"shape\":\"Sbe\",\"locationName\":\"AccessControlPolicy\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}},\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"GrantFullControl\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-full-control\"},\"GrantRead\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read\"},\"GrantReadACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-read-acp\"},\"GrantWrite\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write\"},\"GrantWriteACP\":{\"location\":\"header\",\"locationName\":\"x-amz-grant-write-acp\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"}},\"payload\":\"AccessControlPolicy\"},\"output\":{\"type\":\"structure\",\"members\":{\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}},\"httpChecksumRequired\":true},\"PutObjectLegalHold\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}/{Key+}?legal-hold\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"LegalHold\":{\"shape\":\"S8y\",\"locationName\":\"LegalHold\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"}},\"payload\":\"LegalHold\"},\"output\":{\"type\":\"structure\",\"members\":{\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}},\"httpChecksumRequired\":true},\"PutObjectLockConfiguration\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?object-lock\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ObjectLockConfiguration\":{\"shape\":\"S91\",\"locationName\":\"ObjectLockConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"Token\":{\"location\":\"header\",\"locationName\":\"x-amz-bucket-object-lock-token\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"}},\"payload\":\"ObjectLockConfiguration\"},\"output\":{\"type\":\"structure\",\"members\":{\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}},\"httpChecksumRequired\":true},\"PutObjectRetention\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}/{Key+}?retention\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"Retention\":{\"shape\":\"S99\",\"locationName\":\"Retention\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"BypassGovernanceRetention\":{\"location\":\"header\",\"locationName\":\"x-amz-bypass-governance-retention\",\"type\":\"boolean\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"}},\"payload\":\"Retention\"},\"output\":{\"type\":\"structure\",\"members\":{\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}},\"httpChecksumRequired\":true},\"PutObjectTagging\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}/{Key+}?tagging\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\",\"Tagging\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"Tagging\":{\"shape\":\"Sc1\",\"locationName\":\"Tagging\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"Tagging\"},\"output\":{\"type\":\"structure\",\"members\":{\"VersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-version-id\"}}},\"httpChecksumRequired\":true},\"PutPublicAccessBlock\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}?publicAccessBlock\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"PublicAccessBlockConfiguration\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentMD5\":{\"deprecated\":true,\"deprecatedMessage\":\"Content-MD5 header will now be automatically computed and injected in associated operation's Http request.\",\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"PublicAccessBlockConfiguration\":{\"shape\":\"S9g\",\"locationName\":\"PublicAccessBlockConfiguration\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"}}},\"payload\":\"PublicAccessBlockConfiguration\"},\"httpChecksumRequired\":true},\"RestoreObject\":{\"http\":{\"requestUri\":\"/{Bucket}/{Key+}?restore\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"VersionId\":{\"location\":\"querystring\",\"locationName\":\"versionId\"},\"RestoreRequest\":{\"locationName\":\"RestoreRequest\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"members\":{\"Days\":{\"type\":\"integer\"},\"GlacierJobParameters\":{\"type\":\"structure\",\"required\":[\"Tier\"],\"members\":{\"Tier\":{}}},\"Type\":{},\"Tier\":{},\"Description\":{},\"SelectParameters\":{\"type\":\"structure\",\"required\":[\"InputSerialization\",\"ExpressionType\",\"Expression\",\"OutputSerialization\"],\"members\":{\"InputSerialization\":{\"shape\":\"Scr\"},\"ExpressionType\":{},\"Expression\":{},\"OutputSerialization\":{\"shape\":\"Sd6\"}}},\"OutputLocation\":{\"type\":\"structure\",\"members\":{\"S3\":{\"type\":\"structure\",\"required\":[\"BucketName\",\"Prefix\"],\"members\":{\"BucketName\":{},\"Prefix\":{},\"Encryption\":{\"type\":\"structure\",\"required\":[\"EncryptionType\"],\"members\":{\"EncryptionType\":{},\"KMSKeyId\":{\"shape\":\"Sj\"},\"KMSContext\":{}}},\"CannedACL\":{},\"AccessControlList\":{\"shape\":\"S35\"},\"Tagging\":{\"shape\":\"Sc1\"},\"UserMetadata\":{\"type\":\"list\",\"member\":{\"locationName\":\"MetadataEntry\",\"type\":\"structure\",\"members\":{\"Name\":{},\"Value\":{}}}},\"StorageClass\":{}}}}}}},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}},\"payload\":\"RestoreRequest\"},\"output\":{\"type\":\"structure\",\"members\":{\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"},\"RestoreOutputPath\":{\"location\":\"header\",\"locationName\":\"x-amz-restore-output-path\"}}},\"alias\":\"PostObjectRestore\"},\"SelectObjectContent\":{\"http\":{\"requestUri\":\"/{Bucket}/{Key+}?select&select-type=2\"},\"input\":{\"locationName\":\"SelectObjectContentRequest\",\"xmlNamespace\":{\"uri\":\"http://s3.amazonaws.com/doc/2006-03-01/\"},\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\",\"Expression\",\"ExpressionType\",\"InputSerialization\",\"OutputSerialization\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKey\":{\"shape\":\"S19\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"Expression\":{},\"ExpressionType\":{},\"RequestProgress\":{\"type\":\"structure\",\"members\":{\"Enabled\":{\"type\":\"boolean\"}}},\"InputSerialization\":{\"shape\":\"Scr\"},\"OutputSerialization\":{\"shape\":\"Sd6\"},\"ScanRange\":{\"type\":\"structure\",\"members\":{\"Start\":{\"type\":\"long\"},\"End\":{\"type\":\"long\"}}}}},\"output\":{\"type\":\"structure\",\"members\":{\"Payload\":{\"type\":\"structure\",\"members\":{\"Records\":{\"type\":\"structure\",\"members\":{\"Payload\":{\"eventpayload\":true,\"type\":\"blob\"}},\"event\":true},\"Stats\":{\"type\":\"structure\",\"members\":{\"Details\":{\"eventpayload\":true,\"type\":\"structure\",\"members\":{\"BytesScanned\":{\"type\":\"long\"},\"BytesProcessed\":{\"type\":\"long\"},\"BytesReturned\":{\"type\":\"long\"}}}},\"event\":true},\"Progress\":{\"type\":\"structure\",\"members\":{\"Details\":{\"eventpayload\":true,\"type\":\"structure\",\"members\":{\"BytesScanned\":{\"type\":\"long\"},\"BytesProcessed\":{\"type\":\"long\"},\"BytesReturned\":{\"type\":\"long\"}}}},\"event\":true},\"Cont\":{\"type\":\"structure\",\"members\":{},\"event\":true},\"End\":{\"type\":\"structure\",\"members\":{},\"event\":true}},\"eventstream\":true}},\"payload\":\"Payload\"}},\"UploadPart\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}/{Key+}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Key\",\"PartNumber\",\"UploadId\"],\"members\":{\"Body\":{\"streaming\":true,\"type\":\"blob\"},\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"ContentLength\":{\"location\":\"header\",\"locationName\":\"Content-Length\",\"type\":\"long\"},\"ContentMD5\":{\"location\":\"header\",\"locationName\":\"Content-MD5\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"PartNumber\":{\"location\":\"querystring\",\"locationName\":\"partNumber\",\"type\":\"integer\"},\"UploadId\":{\"location\":\"querystring\",\"locationName\":\"uploadId\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKey\":{\"shape\":\"S19\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}},\"payload\":\"Body\"},\"output\":{\"type\":\"structure\",\"members\":{\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"ETag\":{\"location\":\"header\",\"locationName\":\"ETag\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}}}},\"UploadPartCopy\":{\"http\":{\"method\":\"PUT\",\"requestUri\":\"/{Bucket}/{Key+}\"},\"input\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"CopySource\",\"Key\",\"PartNumber\",\"UploadId\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"},\"CopySource\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source\"},\"CopySourceIfMatch\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-if-match\"},\"CopySourceIfModifiedSince\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-if-modified-since\",\"type\":\"timestamp\"},\"CopySourceIfNoneMatch\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-if-none-match\"},\"CopySourceIfUnmodifiedSince\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-if-unmodified-since\",\"type\":\"timestamp\"},\"CopySourceRange\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-range\"},\"Key\":{\"location\":\"uri\",\"locationName\":\"Key\"},\"PartNumber\":{\"location\":\"querystring\",\"locationName\":\"partNumber\",\"type\":\"integer\"},\"UploadId\":{\"location\":\"querystring\",\"locationName\":\"uploadId\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKey\":{\"shape\":\"S19\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"CopySourceSSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-server-side-encryption-customer-algorithm\"},\"CopySourceSSECustomerKey\":{\"shape\":\"S1d\",\"location\":\"header\",\"locationName\":\"x-amz-copy-source-server-side-encryption-customer-key\"},\"CopySourceSSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-server-side-encryption-customer-key-MD5\"},\"RequestPayer\":{\"location\":\"header\",\"locationName\":\"x-amz-request-payer\"}}},\"output\":{\"type\":\"structure\",\"members\":{\"CopySourceVersionId\":{\"location\":\"header\",\"locationName\":\"x-amz-copy-source-version-id\"},\"CopyPartResult\":{\"type\":\"structure\",\"members\":{\"ETag\":{},\"LastModified\":{\"type\":\"timestamp\"}}},\"ServerSideEncryption\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption\"},\"SSECustomerAlgorithm\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-algorithm\"},\"SSECustomerKeyMD5\":{\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-customer-key-MD5\"},\"SSEKMSKeyId\":{\"shape\":\"Sj\",\"location\":\"header\",\"locationName\":\"x-amz-server-side-encryption-aws-kms-key-id\"},\"RequestCharged\":{\"location\":\"header\",\"locationName\":\"x-amz-request-charged\"}},\"payload\":\"CopyPartResult\"}}},\"shapes\":{\"Sj\":{\"type\":\"string\",\"sensitive\":true},\"S11\":{\"type\":\"map\",\"key\":{},\"value\":{}},\"S19\":{\"type\":\"blob\",\"sensitive\":true},\"S1b\":{\"type\":\"string\",\"sensitive\":true},\"S1d\":{\"type\":\"blob\",\"sensitive\":true},\"S1h\":{\"type\":\"timestamp\",\"timestampFormat\":\"iso8601\"},\"S32\":{\"type\":\"structure\",\"members\":{\"DisplayName\":{},\"ID\":{}}},\"S35\":{\"type\":\"list\",\"member\":{\"locationName\":\"Grant\",\"type\":\"structure\",\"members\":{\"Grantee\":{\"shape\":\"S37\"},\"Permission\":{}}}},\"S37\":{\"type\":\"structure\",\"required\":[\"Type\"],\"members\":{\"DisplayName\":{},\"EmailAddress\":{},\"ID\":{},\"Type\":{\"locationName\":\"xsi:type\",\"xmlAttribute\":true},\"URI\":{}},\"xmlNamespace\":{\"prefix\":\"xsi\",\"uri\":\"http://www.w3.org/2001/XMLSchema-instance\"}},\"S3e\":{\"type\":\"structure\",\"required\":[\"Id\",\"StorageClassAnalysis\"],\"members\":{\"Id\":{},\"Filter\":{\"type\":\"structure\",\"members\":{\"Prefix\":{},\"Tag\":{\"shape\":\"S3h\"},\"And\":{\"type\":\"structure\",\"members\":{\"Prefix\":{},\"Tags\":{\"shape\":\"S3k\",\"flattened\":true,\"locationName\":\"Tag\"}}}}},\"StorageClassAnalysis\":{\"type\":\"structure\",\"members\":{\"DataExport\":{\"type\":\"structure\",\"required\":[\"OutputSchemaVersion\",\"Destination\"],\"members\":{\"OutputSchemaVersion\":{},\"Destination\":{\"type\":\"structure\",\"required\":[\"S3BucketDestination\"],\"members\":{\"S3BucketDestination\":{\"type\":\"structure\",\"required\":[\"Format\",\"Bucket\"],\"members\":{\"Format\":{},\"BucketAccountId\":{},\"Bucket\":{},\"Prefix\":{}}}}}}}}}}},\"S3h\":{\"type\":\"structure\",\"required\":[\"Key\",\"Value\"],\"members\":{\"Key\":{},\"Value\":{}}},\"S3k\":{\"type\":\"list\",\"member\":{\"shape\":\"S3h\",\"locationName\":\"Tag\"}},\"S3u\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"AllowedMethods\",\"AllowedOrigins\"],\"members\":{\"AllowedHeaders\":{\"locationName\":\"AllowedHeader\",\"type\":\"list\",\"member\":{},\"flattened\":true},\"AllowedMethods\":{\"locationName\":\"AllowedMethod\",\"type\":\"list\",\"member\":{},\"flattened\":true},\"AllowedOrigins\":{\"locationName\":\"AllowedOrigin\",\"type\":\"list\",\"member\":{},\"flattened\":true},\"ExposeHeaders\":{\"locationName\":\"ExposeHeader\",\"type\":\"list\",\"member\":{},\"flattened\":true},\"MaxAgeSeconds\":{\"type\":\"integer\"}}},\"flattened\":true},\"S47\":{\"type\":\"structure\",\"required\":[\"Rules\"],\"members\":{\"Rules\":{\"locationName\":\"Rule\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"ApplyServerSideEncryptionByDefault\":{\"type\":\"structure\",\"required\":[\"SSEAlgorithm\"],\"members\":{\"SSEAlgorithm\":{},\"KMSMasterKeyID\":{\"shape\":\"Sj\"}}}}},\"flattened\":true}}},\"S4d\":{\"type\":\"structure\",\"required\":[\"Destination\",\"IsEnabled\",\"Id\",\"IncludedObjectVersions\",\"Schedule\"],\"members\":{\"Destination\":{\"type\":\"structure\",\"required\":[\"S3BucketDestination\"],\"members\":{\"S3BucketDestination\":{\"type\":\"structure\",\"required\":[\"Bucket\",\"Format\"],\"members\":{\"AccountId\":{},\"Bucket\":{},\"Format\":{},\"Prefix\":{},\"Encryption\":{\"type\":\"structure\",\"members\":{\"SSES3\":{\"locationName\":\"SSE-S3\",\"type\":\"structure\",\"members\":{}},\"SSEKMS\":{\"locationName\":\"SSE-KMS\",\"type\":\"structure\",\"required\":[\"KeyId\"],\"members\":{\"KeyId\":{\"shape\":\"Sj\"}}}}}}}}},\"IsEnabled\":{\"type\":\"boolean\"},\"Filter\":{\"type\":\"structure\",\"required\":[\"Prefix\"],\"members\":{\"Prefix\":{}}},\"Id\":{},\"IncludedObjectVersions\":{},\"OptionalFields\":{\"type\":\"list\",\"member\":{\"locationName\":\"Field\"}},\"Schedule\":{\"type\":\"structure\",\"required\":[\"Frequency\"],\"members\":{\"Frequency\":{}}}}},\"S4t\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"Prefix\",\"Status\"],\"members\":{\"Expiration\":{\"shape\":\"S4v\"},\"ID\":{},\"Prefix\":{},\"Status\":{},\"Transition\":{\"shape\":\"S50\"},\"NoncurrentVersionTransition\":{\"shape\":\"S52\"},\"NoncurrentVersionExpiration\":{\"shape\":\"S53\"},\"AbortIncompleteMultipartUpload\":{\"shape\":\"S54\"}}},\"flattened\":true},\"S4v\":{\"type\":\"structure\",\"members\":{\"Date\":{\"shape\":\"S4w\"},\"Days\":{\"type\":\"integer\"},\"ExpiredObjectDeleteMarker\":{\"type\":\"boolean\"}}},\"S4w\":{\"type\":\"timestamp\",\"timestampFormat\":\"iso8601\"},\"S50\":{\"type\":\"structure\",\"members\":{\"Date\":{\"shape\":\"S4w\"},\"Days\":{\"type\":\"integer\"},\"StorageClass\":{}}},\"S52\":{\"type\":\"structure\",\"members\":{\"NoncurrentDays\":{\"type\":\"integer\"},\"StorageClass\":{}}},\"S53\":{\"type\":\"structure\",\"members\":{\"NoncurrentDays\":{\"type\":\"integer\"}}},\"S54\":{\"type\":\"structure\",\"members\":{\"DaysAfterInitiation\":{\"type\":\"integer\"}}},\"S58\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"Status\"],\"members\":{\"Expiration\":{\"shape\":\"S4v\"},\"ID\":{},\"Prefix\":{\"deprecated\":true},\"Filter\":{\"type\":\"structure\",\"members\":{\"Prefix\":{},\"Tag\":{\"shape\":\"S3h\"},\"And\":{\"type\":\"structure\",\"members\":{\"Prefix\":{},\"Tags\":{\"shape\":\"S3k\",\"flattened\":true,\"locationName\":\"Tag\"}}}}},\"Status\":{},\"Transitions\":{\"locationName\":\"Transition\",\"type\":\"list\",\"member\":{\"shape\":\"S50\"},\"flattened\":true},\"NoncurrentVersionTransitions\":{\"locationName\":\"NoncurrentVersionTransition\",\"type\":\"list\",\"member\":{\"shape\":\"S52\"},\"flattened\":true},\"NoncurrentVersionExpiration\":{\"shape\":\"S53\"},\"AbortIncompleteMultipartUpload\":{\"shape\":\"S54\"}}},\"flattened\":true},\"S5i\":{\"type\":\"structure\",\"required\":[\"TargetBucket\",\"TargetPrefix\"],\"members\":{\"TargetBucket\":{},\"TargetGrants\":{\"type\":\"list\",\"member\":{\"locationName\":\"Grant\",\"type\":\"structure\",\"members\":{\"Grantee\":{\"shape\":\"S37\"},\"Permission\":{}}}},\"TargetPrefix\":{}}},\"S5q\":{\"type\":\"structure\",\"required\":[\"Id\"],\"members\":{\"Id\":{},\"Filter\":{\"type\":\"structure\",\"members\":{\"Prefix\":{},\"Tag\":{\"shape\":\"S3h\"},\"And\":{\"type\":\"structure\",\"members\":{\"Prefix\":{},\"Tags\":{\"shape\":\"S3k\",\"flattened\":true,\"locationName\":\"Tag\"}}}}}}},\"S5t\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{\"location\":\"uri\",\"locationName\":\"Bucket\"}}},\"S5u\":{\"type\":\"structure\",\"members\":{\"TopicConfiguration\":{\"type\":\"structure\",\"members\":{\"Id\":{},\"Events\":{\"shape\":\"S5x\",\"locationName\":\"Event\"},\"Event\":{\"deprecated\":true},\"Topic\":{}}},\"QueueConfiguration\":{\"type\":\"structure\",\"members\":{\"Id\":{},\"Event\":{\"deprecated\":true},\"Events\":{\"shape\":\"S5x\",\"locationName\":\"Event\"},\"Queue\":{}}},\"CloudFunctionConfiguration\":{\"type\":\"structure\",\"members\":{\"Id\":{},\"Event\":{\"deprecated\":true},\"Events\":{\"shape\":\"S5x\",\"locationName\":\"Event\"},\"CloudFunction\":{},\"InvocationRole\":{}}}}},\"S5x\":{\"type\":\"list\",\"member\":{},\"flattened\":true},\"S65\":{\"type\":\"structure\",\"members\":{\"TopicConfigurations\":{\"locationName\":\"TopicConfiguration\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"TopicArn\",\"Events\"],\"members\":{\"Id\":{},\"TopicArn\":{\"locationName\":\"Topic\"},\"Events\":{\"shape\":\"S5x\",\"locationName\":\"Event\"},\"Filter\":{\"shape\":\"S68\"}}},\"flattened\":true},\"QueueConfigurations\":{\"locationName\":\"QueueConfiguration\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"QueueArn\",\"Events\"],\"members\":{\"Id\":{},\"QueueArn\":{\"locationName\":\"Queue\"},\"Events\":{\"shape\":\"S5x\",\"locationName\":\"Event\"},\"Filter\":{\"shape\":\"S68\"}}},\"flattened\":true},\"LambdaFunctionConfigurations\":{\"locationName\":\"CloudFunctionConfiguration\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"LambdaFunctionArn\",\"Events\"],\"members\":{\"Id\":{},\"LambdaFunctionArn\":{\"locationName\":\"CloudFunction\"},\"Events\":{\"shape\":\"S5x\",\"locationName\":\"Event\"},\"Filter\":{\"shape\":\"S68\"}}},\"flattened\":true}}},\"S68\":{\"type\":\"structure\",\"members\":{\"Key\":{\"locationName\":\"S3Key\",\"type\":\"structure\",\"members\":{\"FilterRules\":{\"locationName\":\"FilterRule\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"Name\":{},\"Value\":{}}},\"flattened\":true}}}}},\"S6s\":{\"type\":\"structure\",\"required\":[\"Role\",\"Rules\"],\"members\":{\"Role\":{},\"Rules\":{\"locationName\":\"Rule\",\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"Status\",\"Destination\"],\"members\":{\"ID\":{},\"Priority\":{\"type\":\"integer\"},\"Prefix\":{\"deprecated\":true},\"Filter\":{\"type\":\"structure\",\"members\":{\"Prefix\":{},\"Tag\":{\"shape\":\"S3h\"},\"And\":{\"type\":\"structure\",\"members\":{\"Prefix\":{},\"Tags\":{\"shape\":\"S3k\",\"flattened\":true,\"locationName\":\"Tag\"}}}}},\"Status\":{},\"SourceSelectionCriteria\":{\"type\":\"structure\",\"members\":{\"SseKmsEncryptedObjects\":{\"type\":\"structure\",\"required\":[\"Status\"],\"members\":{\"Status\":{}}}}},\"ExistingObjectReplication\":{\"type\":\"structure\",\"required\":[\"Status\"],\"members\":{\"Status\":{}}},\"Destination\":{\"type\":\"structure\",\"required\":[\"Bucket\"],\"members\":{\"Bucket\":{},\"Account\":{},\"StorageClass\":{},\"AccessControlTranslation\":{\"type\":\"structure\",\"required\":[\"Owner\"],\"members\":{\"Owner\":{}}},\"EncryptionConfiguration\":{\"type\":\"structure\",\"members\":{\"ReplicaKmsKeyID\":{}}},\"ReplicationTime\":{\"type\":\"structure\",\"required\":[\"Status\",\"Time\"],\"members\":{\"Status\":{},\"Time\":{\"shape\":\"S7c\"}}},\"Metrics\":{\"type\":\"structure\",\"required\":[\"Status\",\"EventThreshold\"],\"members\":{\"Status\":{},\"EventThreshold\":{\"shape\":\"S7c\"}}}}},\"DeleteMarkerReplication\":{\"type\":\"structure\",\"members\":{\"Status\":{}}}}},\"flattened\":true}}},\"S7c\":{\"type\":\"structure\",\"members\":{\"Minutes\":{\"type\":\"integer\"}}},\"S7t\":{\"type\":\"structure\",\"required\":[\"HostName\"],\"members\":{\"HostName\":{},\"Protocol\":{}}},\"S7w\":{\"type\":\"structure\",\"required\":[\"Suffix\"],\"members\":{\"Suffix\":{}}},\"S7y\":{\"type\":\"structure\",\"required\":[\"Key\"],\"members\":{\"Key\":{}}},\"S7z\":{\"type\":\"list\",\"member\":{\"locationName\":\"RoutingRule\",\"type\":\"structure\",\"required\":[\"Redirect\"],\"members\":{\"Condition\":{\"type\":\"structure\",\"members\":{\"HttpErrorCodeReturnedEquals\":{},\"KeyPrefixEquals\":{}}},\"Redirect\":{\"type\":\"structure\",\"members\":{\"HostName\":{},\"HttpRedirectCode\":{},\"Protocol\":{},\"ReplaceKeyPrefixWith\":{},\"ReplaceKeyWith\":{}}}}}},\"S8y\":{\"type\":\"structure\",\"members\":{\"Status\":{}}},\"S91\":{\"type\":\"structure\",\"members\":{\"ObjectLockEnabled\":{},\"Rule\":{\"type\":\"structure\",\"members\":{\"DefaultRetention\":{\"type\":\"structure\",\"members\":{\"Mode\":{},\"Days\":{\"type\":\"integer\"},\"Years\":{\"type\":\"integer\"}}}}}}},\"S99\":{\"type\":\"structure\",\"members\":{\"Mode\":{},\"RetainUntilDate\":{\"shape\":\"S4w\"}}},\"S9g\":{\"type\":\"structure\",\"members\":{\"BlockPublicAcls\":{\"locationName\":\"BlockPublicAcls\",\"type\":\"boolean\"},\"IgnorePublicAcls\":{\"locationName\":\"IgnorePublicAcls\",\"type\":\"boolean\"},\"BlockPublicPolicy\":{\"locationName\":\"BlockPublicPolicy\",\"type\":\"boolean\"},\"RestrictPublicBuckets\":{\"locationName\":\"RestrictPublicBuckets\",\"type\":\"boolean\"}}},\"Sad\":{\"type\":\"structure\",\"members\":{\"ID\":{},\"DisplayName\":{}}},\"Sae\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"Prefix\":{}}},\"flattened\":true},\"Saw\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"Key\":{},\"LastModified\":{\"type\":\"timestamp\"},\"ETag\":{},\"Size\":{\"type\":\"integer\"},\"StorageClass\":{},\"Owner\":{\"shape\":\"S32\"}}},\"flattened\":true},\"Sbe\":{\"type\":\"structure\",\"members\":{\"Grants\":{\"shape\":\"S35\",\"locationName\":\"AccessControlList\"},\"Owner\":{\"shape\":\"S32\"}}},\"Sc1\":{\"type\":\"structure\",\"required\":[\"TagSet\"],\"members\":{\"TagSet\":{\"shape\":\"S3k\"}}},\"Scr\":{\"type\":\"structure\",\"members\":{\"CSV\":{\"type\":\"structure\",\"members\":{\"FileHeaderInfo\":{},\"Comments\":{},\"QuoteEscapeCharacter\":{},\"RecordDelimiter\":{},\"FieldDelimiter\":{},\"QuoteCharacter\":{},\"AllowQuotedRecordDelimiter\":{\"type\":\"boolean\"}}},\"CompressionType\":{},\"JSON\":{\"type\":\"structure\",\"members\":{\"Type\":{}}},\"Parquet\":{\"type\":\"structure\",\"members\":{}}}},\"Sd6\":{\"type\":\"structure\",\"members\":{\"CSV\":{\"type\":\"structure\",\"members\":{\"QuoteFields\":{},\"QuoteEscapeCharacter\":{},\"RecordDelimiter\":{},\"FieldDelimiter\":{},\"QuoteCharacter\":{}}},\"JSON\":{\"type\":\"structure\",\"members\":{\"RecordDelimiter\":{}}}}}}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/apis/s3-2006-03-01.paginators.json":
  /*!*****************************************************************!*\
    !*** ./node_modules/aws-sdk/apis/s3-2006-03-01.paginators.json ***!
    \*****************************************************************/

  /*! exports provided: pagination, default */

  /***/
  function node_modulesAwsSdkApisS320060301PaginatorsJson(module) {
    module.exports = JSON.parse("{\"pagination\":{\"ListBuckets\":{\"result_key\":\"Buckets\"},\"ListMultipartUploads\":{\"input_token\":[\"KeyMarker\",\"UploadIdMarker\"],\"limit_key\":\"MaxUploads\",\"more_results\":\"IsTruncated\",\"output_token\":[\"NextKeyMarker\",\"NextUploadIdMarker\"],\"result_key\":[\"Uploads\",\"CommonPrefixes\"]},\"ListObjectVersions\":{\"input_token\":[\"KeyMarker\",\"VersionIdMarker\"],\"limit_key\":\"MaxKeys\",\"more_results\":\"IsTruncated\",\"output_token\":[\"NextKeyMarker\",\"NextVersionIdMarker\"],\"result_key\":[\"Versions\",\"DeleteMarkers\",\"CommonPrefixes\"]},\"ListObjects\":{\"input_token\":\"Marker\",\"limit_key\":\"MaxKeys\",\"more_results\":\"IsTruncated\",\"output_token\":\"NextMarker || Contents[-1].Key\",\"result_key\":[\"Contents\",\"CommonPrefixes\"]},\"ListObjectsV2\":{\"input_token\":\"ContinuationToken\",\"limit_key\":\"MaxKeys\",\"output_token\":\"NextContinuationToken\",\"result_key\":[\"Contents\",\"CommonPrefixes\"]},\"ListParts\":{\"input_token\":\"PartNumberMarker\",\"limit_key\":\"MaxParts\",\"more_results\":\"IsTruncated\",\"output_token\":\"NextPartNumberMarker\",\"result_key\":\"Parts\"}}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/apis/s3-2006-03-01.waiters2.json":
  /*!***************************************************************!*\
    !*** ./node_modules/aws-sdk/apis/s3-2006-03-01.waiters2.json ***!
    \***************************************************************/

  /*! exports provided: version, waiters, default */

  /***/
  function node_modulesAwsSdkApisS320060301Waiters2Json(module) {
    module.exports = JSON.parse("{\"version\":2,\"waiters\":{\"BucketExists\":{\"delay\":5,\"operation\":\"HeadBucket\",\"maxAttempts\":20,\"acceptors\":[{\"expected\":200,\"matcher\":\"status\",\"state\":\"success\"},{\"expected\":301,\"matcher\":\"status\",\"state\":\"success\"},{\"expected\":403,\"matcher\":\"status\",\"state\":\"success\"},{\"expected\":404,\"matcher\":\"status\",\"state\":\"retry\"}]},\"BucketNotExists\":{\"delay\":5,\"operation\":\"HeadBucket\",\"maxAttempts\":20,\"acceptors\":[{\"expected\":404,\"matcher\":\"status\",\"state\":\"success\"}]},\"ObjectExists\":{\"delay\":5,\"operation\":\"HeadObject\",\"maxAttempts\":20,\"acceptors\":[{\"expected\":200,\"matcher\":\"status\",\"state\":\"success\"},{\"expected\":404,\"matcher\":\"status\",\"state\":\"retry\"}]},\"ObjectNotExists\":{\"delay\":5,\"operation\":\"HeadObject\",\"maxAttempts\":20,\"acceptors\":[{\"expected\":404,\"matcher\":\"status\",\"state\":\"success\"}]}}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/apis/sts-2011-06-15.min.json":
  /*!***********************************************************!*\
    !*** ./node_modules/aws-sdk/apis/sts-2011-06-15.min.json ***!
    \***********************************************************/

  /*! exports provided: version, metadata, operations, shapes, default */

  /***/
  function node_modulesAwsSdkApisSts20110615MinJson(module) {
    module.exports = JSON.parse("{\"version\":\"2.0\",\"metadata\":{\"apiVersion\":\"2011-06-15\",\"endpointPrefix\":\"sts\",\"globalEndpoint\":\"sts.amazonaws.com\",\"protocol\":\"query\",\"serviceAbbreviation\":\"AWS STS\",\"serviceFullName\":\"AWS Security Token Service\",\"serviceId\":\"STS\",\"signatureVersion\":\"v4\",\"uid\":\"sts-2011-06-15\",\"xmlNamespace\":\"https://sts.amazonaws.com/doc/2011-06-15/\"},\"operations\":{\"AssumeRole\":{\"input\":{\"type\":\"structure\",\"required\":[\"RoleArn\",\"RoleSessionName\"],\"members\":{\"RoleArn\":{},\"RoleSessionName\":{},\"PolicyArns\":{\"shape\":\"S4\"},\"Policy\":{},\"DurationSeconds\":{\"type\":\"integer\"},\"Tags\":{\"shape\":\"S8\"},\"TransitiveTagKeys\":{\"type\":\"list\",\"member\":{}},\"ExternalId\":{},\"SerialNumber\":{},\"TokenCode\":{}}},\"output\":{\"resultWrapper\":\"AssumeRoleResult\",\"type\":\"structure\",\"members\":{\"Credentials\":{\"shape\":\"Sh\"},\"AssumedRoleUser\":{\"shape\":\"Sm\"},\"PackedPolicySize\":{\"type\":\"integer\"}}}},\"AssumeRoleWithSAML\":{\"input\":{\"type\":\"structure\",\"required\":[\"RoleArn\",\"PrincipalArn\",\"SAMLAssertion\"],\"members\":{\"RoleArn\":{},\"PrincipalArn\":{},\"SAMLAssertion\":{\"type\":\"string\",\"sensitive\":true},\"PolicyArns\":{\"shape\":\"S4\"},\"Policy\":{},\"DurationSeconds\":{\"type\":\"integer\"}}},\"output\":{\"resultWrapper\":\"AssumeRoleWithSAMLResult\",\"type\":\"structure\",\"members\":{\"Credentials\":{\"shape\":\"Sh\"},\"AssumedRoleUser\":{\"shape\":\"Sm\"},\"PackedPolicySize\":{\"type\":\"integer\"},\"Subject\":{},\"SubjectType\":{},\"Issuer\":{},\"Audience\":{},\"NameQualifier\":{}}}},\"AssumeRoleWithWebIdentity\":{\"input\":{\"type\":\"structure\",\"required\":[\"RoleArn\",\"RoleSessionName\",\"WebIdentityToken\"],\"members\":{\"RoleArn\":{},\"RoleSessionName\":{},\"WebIdentityToken\":{\"type\":\"string\",\"sensitive\":true},\"ProviderId\":{},\"PolicyArns\":{\"shape\":\"S4\"},\"Policy\":{},\"DurationSeconds\":{\"type\":\"integer\"}}},\"output\":{\"resultWrapper\":\"AssumeRoleWithWebIdentityResult\",\"type\":\"structure\",\"members\":{\"Credentials\":{\"shape\":\"Sh\"},\"SubjectFromWebIdentityToken\":{},\"AssumedRoleUser\":{\"shape\":\"Sm\"},\"PackedPolicySize\":{\"type\":\"integer\"},\"Provider\":{},\"Audience\":{}}}},\"DecodeAuthorizationMessage\":{\"input\":{\"type\":\"structure\",\"required\":[\"EncodedMessage\"],\"members\":{\"EncodedMessage\":{}}},\"output\":{\"resultWrapper\":\"DecodeAuthorizationMessageResult\",\"type\":\"structure\",\"members\":{\"DecodedMessage\":{}}}},\"GetAccessKeyInfo\":{\"input\":{\"type\":\"structure\",\"required\":[\"AccessKeyId\"],\"members\":{\"AccessKeyId\":{}}},\"output\":{\"resultWrapper\":\"GetAccessKeyInfoResult\",\"type\":\"structure\",\"members\":{\"Account\":{}}}},\"GetCallerIdentity\":{\"input\":{\"type\":\"structure\",\"members\":{}},\"output\":{\"resultWrapper\":\"GetCallerIdentityResult\",\"type\":\"structure\",\"members\":{\"UserId\":{},\"Account\":{},\"Arn\":{}}}},\"GetFederationToken\":{\"input\":{\"type\":\"structure\",\"required\":[\"Name\"],\"members\":{\"Name\":{},\"Policy\":{},\"PolicyArns\":{\"shape\":\"S4\"},\"DurationSeconds\":{\"type\":\"integer\"},\"Tags\":{\"shape\":\"S8\"}}},\"output\":{\"resultWrapper\":\"GetFederationTokenResult\",\"type\":\"structure\",\"members\":{\"Credentials\":{\"shape\":\"Sh\"},\"FederatedUser\":{\"type\":\"structure\",\"required\":[\"FederatedUserId\",\"Arn\"],\"members\":{\"FederatedUserId\":{},\"Arn\":{}}},\"PackedPolicySize\":{\"type\":\"integer\"}}}},\"GetSessionToken\":{\"input\":{\"type\":\"structure\",\"members\":{\"DurationSeconds\":{\"type\":\"integer\"},\"SerialNumber\":{},\"TokenCode\":{}}},\"output\":{\"resultWrapper\":\"GetSessionTokenResult\",\"type\":\"structure\",\"members\":{\"Credentials\":{\"shape\":\"Sh\"}}}}},\"shapes\":{\"S4\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"members\":{\"arn\":{}}}},\"S8\":{\"type\":\"list\",\"member\":{\"type\":\"structure\",\"required\":[\"Key\",\"Value\"],\"members\":{\"Key\":{},\"Value\":{}}}},\"Sh\":{\"type\":\"structure\",\"required\":[\"AccessKeyId\",\"SecretAccessKey\",\"SessionToken\",\"Expiration\"],\"members\":{\"AccessKeyId\":{},\"SecretAccessKey\":{},\"SessionToken\":{},\"Expiration\":{\"type\":\"timestamp\"}}},\"Sm\":{\"type\":\"structure\",\"required\":[\"AssumedRoleId\",\"Arn\"],\"members\":{\"AssumedRoleId\":{},\"Arn\":{}}}}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/apis/sts-2011-06-15.paginators.json":
  /*!******************************************************************!*\
    !*** ./node_modules/aws-sdk/apis/sts-2011-06-15.paginators.json ***!
    \******************************************************************/

  /*! exports provided: pagination, default */

  /***/
  function node_modulesAwsSdkApisSts20110615PaginatorsJson(module) {
    module.exports = JSON.parse("{\"pagination\":{}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/browser.js":
  /*!*****************************************!*\
    !*** ./node_modules/aws-sdk/browser.js ***!
    \*****************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkBrowserJs(module, exports, __webpack_require__) {
    __webpack_require__(
    /*! ./lib/browser_loader */
    "./node_modules/aws-sdk/lib/browser_loader.js");

    var AWS = __webpack_require__(
    /*! ./lib/core */
    "./node_modules/aws-sdk/lib/core.js");

    if (typeof window !== 'undefined') window.AWS = AWS;
    if (true) module.exports = AWS;
    if (typeof self !== 'undefined') self.AWS = AWS;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/clients/cognitoidentity.js":
  /*!*********************************************************!*\
    !*** ./node_modules/aws-sdk/clients/cognitoidentity.js ***!
    \*********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkClientsCognitoidentityJs(module, exports, __webpack_require__) {
    __webpack_require__(
    /*! ../lib/node_loader */
    "./node_modules/aws-sdk/lib/browser_loader.js");

    var AWS = __webpack_require__(
    /*! ../lib/core */
    "./node_modules/aws-sdk/lib/core.js");

    var Service = AWS.Service;
    var apiLoader = AWS.apiLoader;
    apiLoader.services['cognitoidentity'] = {};
    AWS.CognitoIdentity = Service.defineService('cognitoidentity', ['2014-06-30']);

    __webpack_require__(
    /*! ../lib/services/cognitoidentity */
    "./node_modules/aws-sdk/lib/services/cognitoidentity.js");

    Object.defineProperty(apiLoader.services['cognitoidentity'], '2014-06-30', {
      get: function get() {
        var model = __webpack_require__(
        /*! ../apis/cognito-identity-2014-06-30.min.json */
        "./node_modules/aws-sdk/apis/cognito-identity-2014-06-30.min.json");

        model.paginators = __webpack_require__(
        /*! ../apis/cognito-identity-2014-06-30.paginators.json */
        "./node_modules/aws-sdk/apis/cognito-identity-2014-06-30.paginators.json").pagination;
        return model;
      },
      enumerable: true,
      configurable: true
    });
    module.exports = AWS.CognitoIdentity;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/clients/s3.js":
  /*!********************************************!*\
    !*** ./node_modules/aws-sdk/clients/s3.js ***!
    \********************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkClientsS3Js(module, exports, __webpack_require__) {
    __webpack_require__(
    /*! ../lib/node_loader */
    "./node_modules/aws-sdk/lib/browser_loader.js");

    var AWS = __webpack_require__(
    /*! ../lib/core */
    "./node_modules/aws-sdk/lib/core.js");

    var Service = AWS.Service;
    var apiLoader = AWS.apiLoader;
    apiLoader.services['s3'] = {};
    AWS.S3 = Service.defineService('s3', ['2006-03-01']);

    __webpack_require__(
    /*! ../lib/services/s3 */
    "./node_modules/aws-sdk/lib/services/s3.js");

    Object.defineProperty(apiLoader.services['s3'], '2006-03-01', {
      get: function get() {
        var model = __webpack_require__(
        /*! ../apis/s3-2006-03-01.min.json */
        "./node_modules/aws-sdk/apis/s3-2006-03-01.min.json");

        model.paginators = __webpack_require__(
        /*! ../apis/s3-2006-03-01.paginators.json */
        "./node_modules/aws-sdk/apis/s3-2006-03-01.paginators.json").pagination;
        model.waiters = __webpack_require__(
        /*! ../apis/s3-2006-03-01.waiters2.json */
        "./node_modules/aws-sdk/apis/s3-2006-03-01.waiters2.json").waiters;
        return model;
      },
      enumerable: true,
      configurable: true
    });
    module.exports = AWS.S3;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/clients/sts.js":
  /*!*********************************************!*\
    !*** ./node_modules/aws-sdk/clients/sts.js ***!
    \*********************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkClientsStsJs(module, exports, __webpack_require__) {
    __webpack_require__(
    /*! ../lib/node_loader */
    "./node_modules/aws-sdk/lib/browser_loader.js");

    var AWS = __webpack_require__(
    /*! ../lib/core */
    "./node_modules/aws-sdk/lib/core.js");

    var Service = AWS.Service;
    var apiLoader = AWS.apiLoader;
    apiLoader.services['sts'] = {};
    AWS.STS = Service.defineService('sts', ['2011-06-15']);

    __webpack_require__(
    /*! ../lib/services/sts */
    "./node_modules/aws-sdk/lib/services/sts.js");

    Object.defineProperty(apiLoader.services['sts'], '2011-06-15', {
      get: function get() {
        var model = __webpack_require__(
        /*! ../apis/sts-2011-06-15.min.json */
        "./node_modules/aws-sdk/apis/sts-2011-06-15.min.json");

        model.paginators = __webpack_require__(
        /*! ../apis/sts-2011-06-15.paginators.json */
        "./node_modules/aws-sdk/apis/sts-2011-06-15.paginators.json").pagination;
        return model;
      },
      enumerable: true,
      configurable: true
    });
    module.exports = AWS.STS;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/api_loader.js":
  /*!************************************************!*\
    !*** ./node_modules/aws-sdk/lib/api_loader.js ***!
    \************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibApi_loaderJs(module, exports) {
    function apiLoader(svc, version) {
      if (!apiLoader.services.hasOwnProperty(svc)) {
        throw new Error('InvalidService: Failed to load api for ' + svc);
      }

      return apiLoader.services[svc][version];
    }
    /**
     * @api private
     *
     * This member of AWS.apiLoader is private, but changing it will necessitate a
     * change to ../scripts/services-table-generator.ts
     */


    apiLoader.services = {};
    /**
     * @api private
     */

    module.exports = apiLoader;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/browserCryptoLib.js":
  /*!******************************************************!*\
    !*** ./node_modules/aws-sdk/lib/browserCryptoLib.js ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibBrowserCryptoLibJs(module, exports, __webpack_require__) {
    var Hmac = __webpack_require__(
    /*! ./browserHmac */
    "./node_modules/aws-sdk/lib/browserHmac.js");

    var Md5 = __webpack_require__(
    /*! ./browserMd5 */
    "./node_modules/aws-sdk/lib/browserMd5.js");

    var Sha1 = __webpack_require__(
    /*! ./browserSha1 */
    "./node_modules/aws-sdk/lib/browserSha1.js");

    var Sha256 = __webpack_require__(
    /*! ./browserSha256 */
    "./node_modules/aws-sdk/lib/browserSha256.js");
    /**
     * @api private
     */


    module.exports = exports = {
      createHash: function createHash(alg) {
        alg = alg.toLowerCase();

        if (alg === 'md5') {
          return new Md5();
        } else if (alg === 'sha256') {
          return new Sha256();
        } else if (alg === 'sha1') {
          return new Sha1();
        }

        throw new Error('Hash algorithm ' + alg + ' is not supported in the browser SDK');
      },
      createHmac: function createHmac(alg, key) {
        alg = alg.toLowerCase();

        if (alg === 'md5') {
          return new Hmac(Md5, key);
        } else if (alg === 'sha256') {
          return new Hmac(Sha256, key);
        } else if (alg === 'sha1') {
          return new Hmac(Sha1, key);
        }

        throw new Error('HMAC algorithm ' + alg + ' is not supported in the browser SDK');
      },
      createSign: function createSign() {
        throw new Error('createSign is not implemented in the browser');
      }
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/browserHashUtils.js":
  /*!******************************************************!*\
    !*** ./node_modules/aws-sdk/lib/browserHashUtils.js ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibBrowserHashUtilsJs(module, exports, __webpack_require__) {
    var Buffer = __webpack_require__(
    /*! buffer/ */
    "./node_modules/buffer/index.js").Buffer;
    /**
     * This is a polyfill for the static method `isView` of `ArrayBuffer`, which is
     * e.g. missing in IE 10.
     *
     * @api private
     */


    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'undefined') {
      ArrayBuffer.isView = function (arg) {
        return viewStrings.indexOf(Object.prototype.toString.call(arg)) > -1;
      };
    }
    /**
     * @api private
     */


    var viewStrings = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]', '[object DataView]'];
    /**
     * @api private
     */

    function isEmptyData(data) {
      if (typeof data === 'string') {
        return data.length === 0;
      }

      return data.byteLength === 0;
    }
    /**
     * @api private
     */


    function convertToBuffer(data) {
      if (typeof data === 'string') {
        data = new Buffer(data, 'utf8');
      }

      if (ArrayBuffer.isView(data)) {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
      }

      return new Uint8Array(data);
    }
    /**
     * @api private
     */


    module.exports = exports = {
      isEmptyData: isEmptyData,
      convertToBuffer: convertToBuffer
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/browserHmac.js":
  /*!*************************************************!*\
    !*** ./node_modules/aws-sdk/lib/browserHmac.js ***!
    \*************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibBrowserHmacJs(module, exports, __webpack_require__) {
    var hashUtils = __webpack_require__(
    /*! ./browserHashUtils */
    "./node_modules/aws-sdk/lib/browserHashUtils.js");
    /**
     * @api private
     */


    function Hmac(hashCtor, secret) {
      this.hash = new hashCtor();
      this.outer = new hashCtor();
      var inner = bufferFromSecret(hashCtor, secret);
      var outer = new Uint8Array(hashCtor.BLOCK_SIZE);
      outer.set(inner);

      for (var i = 0; i < hashCtor.BLOCK_SIZE; i++) {
        inner[i] ^= 0x36;
        outer[i] ^= 0x5c;
      }

      this.hash.update(inner);
      this.outer.update(outer); // Zero out the copied key buffer.

      for (var i = 0; i < inner.byteLength; i++) {
        inner[i] = 0;
      }
    }
    /**
     * @api private
     */


    module.exports = exports = Hmac;

    Hmac.prototype.update = function (toHash) {
      if (hashUtils.isEmptyData(toHash) || this.error) {
        return this;
      }

      try {
        this.hash.update(hashUtils.convertToBuffer(toHash));
      } catch (e) {
        this.error = e;
      }

      return this;
    };

    Hmac.prototype.digest = function (encoding) {
      if (!this.outer.finished) {
        this.outer.update(this.hash.digest());
      }

      return this.outer.digest(encoding);
    };

    function bufferFromSecret(hashCtor, secret) {
      var input = hashUtils.convertToBuffer(secret);

      if (input.byteLength > hashCtor.BLOCK_SIZE) {
        var bufferHash = new hashCtor();
        bufferHash.update(input);
        input = bufferHash.digest();
      }

      var buffer = new Uint8Array(hashCtor.BLOCK_SIZE);
      buffer.set(input);
      return buffer;
    }
    /***/

  },

  /***/
  "./node_modules/aws-sdk/lib/browserMd5.js":
  /*!************************************************!*\
    !*** ./node_modules/aws-sdk/lib/browserMd5.js ***!
    \************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibBrowserMd5Js(module, exports, __webpack_require__) {
    var hashUtils = __webpack_require__(
    /*! ./browserHashUtils */
    "./node_modules/aws-sdk/lib/browserHashUtils.js");

    var Buffer = __webpack_require__(
    /*! buffer/ */
    "./node_modules/buffer/index.js").Buffer;

    var BLOCK_SIZE = 64;
    var DIGEST_LENGTH = 16;
    var INIT = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];
    /**
     * @api private
     */

    function Md5() {
      this.state = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];
      this.buffer = new DataView(new ArrayBuffer(BLOCK_SIZE));
      this.bufferLength = 0;
      this.bytesHashed = 0;
      this.finished = false;
    }
    /**
     * @api private
     */


    module.exports = exports = Md5;
    Md5.BLOCK_SIZE = BLOCK_SIZE;

    Md5.prototype.update = function (sourceData) {
      if (hashUtils.isEmptyData(sourceData)) {
        return this;
      } else if (this.finished) {
        throw new Error('Attempted to update an already finished hash.');
      }

      var data = hashUtils.convertToBuffer(sourceData);
      var position = 0;
      var byteLength = data.byteLength;
      this.bytesHashed += byteLength;

      while (byteLength > 0) {
        this.buffer.setUint8(this.bufferLength++, data[position++]);
        byteLength--;

        if (this.bufferLength === BLOCK_SIZE) {
          this.hashBuffer();
          this.bufferLength = 0;
        }
      }

      return this;
    };

    Md5.prototype.digest = function (encoding) {
      if (!this.finished) {
        var _a = this,
            buffer = _a.buffer,
            undecoratedLength = _a.bufferLength,
            bytesHashed = _a.bytesHashed;

        var bitsHashed = bytesHashed * 8;
        buffer.setUint8(this.bufferLength++, 128); // Ensure the final block has enough room for the hashed length

        if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {
          for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {
            buffer.setUint8(i, 0);
          }

          this.hashBuffer();
          this.bufferLength = 0;
        }

        for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {
          buffer.setUint8(i, 0);
        }

        buffer.setUint32(BLOCK_SIZE - 8, bitsHashed >>> 0, true);
        buffer.setUint32(BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);
        this.hashBuffer();
        this.finished = true;
      }

      var out = new DataView(new ArrayBuffer(DIGEST_LENGTH));

      for (var i = 0; i < 4; i++) {
        out.setUint32(i * 4, this.state[i], true);
      }

      var buff = new Buffer(out.buffer, out.byteOffset, out.byteLength);
      return encoding ? buff.toString(encoding) : buff;
    };

    Md5.prototype.hashBuffer = function () {
      var _a = this,
          buffer = _a.buffer,
          state = _a.state;

      var a = state[0],
          b = state[1],
          c = state[2],
          d = state[3];
      a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);
      d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);
      c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);
      b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);
      a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);
      d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);
      c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);
      b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);
      a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);
      d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);
      c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);
      b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);
      a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);
      d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);
      c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);
      b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);
      a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);
      d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);
      c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);
      b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);
      a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);
      d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);
      c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);
      b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);
      a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);
      d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);
      c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);
      b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);
      a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);
      d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);
      c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);
      b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);
      a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);
      d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);
      c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);
      b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);
      a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);
      d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);
      c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);
      b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);
      a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);
      d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);
      c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);
      b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);
      a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);
      d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);
      c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);
      b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);
      a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);
      d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);
      c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);
      b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);
      a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);
      d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);
      c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);
      b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);
      a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);
      d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);
      c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);
      b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);
      a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);
      d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);
      c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);
      b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);
      state[0] = a + state[0] & 0xFFFFFFFF;
      state[1] = b + state[1] & 0xFFFFFFFF;
      state[2] = c + state[2] & 0xFFFFFFFF;
      state[3] = d + state[3] & 0xFFFFFFFF;
    };

    function cmn(q, a, b, x, s, t) {
      a = (a + q & 0xFFFFFFFF) + (x + t & 0xFFFFFFFF) & 0xFFFFFFFF;
      return (a << s | a >>> 32 - s) + b & 0xFFFFFFFF;
    }

    function ff(a, b, c, d, x, s, t) {
      return cmn(b & c | ~b & d, a, b, x, s, t);
    }

    function gg(a, b, c, d, x, s, t) {
      return cmn(b & d | c & ~d, a, b, x, s, t);
    }

    function hh(a, b, c, d, x, s, t) {
      return cmn(b ^ c ^ d, a, b, x, s, t);
    }

    function ii(a, b, c, d, x, s, t) {
      return cmn(c ^ (b | ~d), a, b, x, s, t);
    }
    /***/

  },

  /***/
  "./node_modules/aws-sdk/lib/browserSha1.js":
  /*!*************************************************!*\
    !*** ./node_modules/aws-sdk/lib/browserSha1.js ***!
    \*************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibBrowserSha1Js(module, exports, __webpack_require__) {
    var Buffer = __webpack_require__(
    /*! buffer/ */
    "./node_modules/buffer/index.js").Buffer;

    var hashUtils = __webpack_require__(
    /*! ./browserHashUtils */
    "./node_modules/aws-sdk/lib/browserHashUtils.js");

    var BLOCK_SIZE = 64;
    var DIGEST_LENGTH = 20;
    var KEY = new Uint32Array([0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0]);
    var INIT = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];
    var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;
    /**
     * @api private
     */

    function Sha1() {
      this.h0 = 0x67452301;
      this.h1 = 0xEFCDAB89;
      this.h2 = 0x98BADCFE;
      this.h3 = 0x10325476;
      this.h4 = 0xC3D2E1F0; // The first 64 bytes (16 words) is the data chunk

      this.block = new Uint32Array(80);
      this.offset = 0;
      this.shift = 24;
      this.totalLength = 0;
    }
    /**
     * @api private
     */


    module.exports = exports = Sha1;
    Sha1.BLOCK_SIZE = BLOCK_SIZE;

    Sha1.prototype.update = function (data) {
      if (this.finished) {
        throw new Error('Attempted to update an already finished hash.');
      }

      if (hashUtils.isEmptyData(data)) {
        return this;
      }

      data = hashUtils.convertToBuffer(data);
      var length = data.length;
      this.totalLength += length * 8;

      for (var i = 0; i < length; i++) {
        this.write(data[i]);
      }

      return this;
    };

    Sha1.prototype.write = function write(_byte) {
      this.block[this.offset] |= (_byte & 0xff) << this.shift;

      if (this.shift) {
        this.shift -= 8;
      } else {
        this.offset++;
        this.shift = 24;
      }

      if (this.offset === 16) this.processBlock();
    };

    Sha1.prototype.digest = function (encoding) {
      // Pad
      this.write(0x80);

      if (this.offset > 14 || this.offset === 14 && this.shift < 24) {
        this.processBlock();
      }

      this.offset = 14;
      this.shift = 24; // 64-bit length big-endian

      this.write(0x00); // numbers this big aren't accurate in javascript anyway

      this.write(0x00); // ..So just hard-code to zero.

      this.write(this.totalLength > 0xffffffffff ? this.totalLength / 0x10000000000 : 0x00);
      this.write(this.totalLength > 0xffffffff ? this.totalLength / 0x100000000 : 0x00);

      for (var s = 24; s >= 0; s -= 8) {
        this.write(this.totalLength >> s);
      } // The value in state is little-endian rather than big-endian, so flip
      // each word into a new Uint8Array


      var out = new Buffer(DIGEST_LENGTH);
      var outView = new DataView(out.buffer);
      outView.setUint32(0, this.h0, false);
      outView.setUint32(4, this.h1, false);
      outView.setUint32(8, this.h2, false);
      outView.setUint32(12, this.h3, false);
      outView.setUint32(16, this.h4, false);
      return encoding ? out.toString(encoding) : out;
    };

    Sha1.prototype.processBlock = function processBlock() {
      // Extend the sixteen 32-bit words into eighty 32-bit words:
      for (var i = 16; i < 80; i++) {
        var w = this.block[i - 3] ^ this.block[i - 8] ^ this.block[i - 14] ^ this.block[i - 16];
        this.block[i] = w << 1 | w >>> 31;
      } // Initialize hash value for this chunk:


      var a = this.h0;
      var b = this.h1;
      var c = this.h2;
      var d = this.h3;
      var e = this.h4;
      var f, k; // Main loop:

      for (i = 0; i < 80; i++) {
        if (i < 20) {
          f = d ^ b & (c ^ d);
          k = 0x5A827999;
        } else if (i < 40) {
          f = b ^ c ^ d;
          k = 0x6ED9EBA1;
        } else if (i < 60) {
          f = b & c | d & (b | c);
          k = 0x8F1BBCDC;
        } else {
          f = b ^ c ^ d;
          k = 0xCA62C1D6;
        }

        var temp = (a << 5 | a >>> 27) + f + e + k + (this.block[i] | 0);
        e = d;
        d = c;
        c = b << 30 | b >>> 2;
        b = a;
        a = temp;
      } // Add this chunk's hash to result so far:


      this.h0 = this.h0 + a | 0;
      this.h1 = this.h1 + b | 0;
      this.h2 = this.h2 + c | 0;
      this.h3 = this.h3 + d | 0;
      this.h4 = this.h4 + e | 0; // The block is now reusable.

      this.offset = 0;

      for (i = 0; i < 16; i++) {
        this.block[i] = 0;
      }
    };
    /***/

  },

  /***/
  "./node_modules/aws-sdk/lib/browserSha256.js":
  /*!***************************************************!*\
    !*** ./node_modules/aws-sdk/lib/browserSha256.js ***!
    \***************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibBrowserSha256Js(module, exports, __webpack_require__) {
    var Buffer = __webpack_require__(
    /*! buffer/ */
    "./node_modules/buffer/index.js").Buffer;

    var hashUtils = __webpack_require__(
    /*! ./browserHashUtils */
    "./node_modules/aws-sdk/lib/browserHashUtils.js");

    var BLOCK_SIZE = 64;
    var DIGEST_LENGTH = 32;
    var KEY = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);
    var INIT = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];
    var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;
    /**
     * @private
     */

    function Sha256() {
      this.state = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];
      this.temp = new Int32Array(64);
      this.buffer = new Uint8Array(64);
      this.bufferLength = 0;
      this.bytesHashed = 0;
      /**
       * @private
       */

      this.finished = false;
    }
    /**
     * @api private
     */


    module.exports = exports = Sha256;
    Sha256.BLOCK_SIZE = BLOCK_SIZE;

    Sha256.prototype.update = function (data) {
      if (this.finished) {
        throw new Error('Attempted to update an already finished hash.');
      }

      if (hashUtils.isEmptyData(data)) {
        return this;
      }

      data = hashUtils.convertToBuffer(data);
      var position = 0;
      var byteLength = data.byteLength;
      this.bytesHashed += byteLength;

      if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {
        throw new Error('Cannot hash more than 2^53 - 1 bits');
      }

      while (byteLength > 0) {
        this.buffer[this.bufferLength++] = data[position++];
        byteLength--;

        if (this.bufferLength === BLOCK_SIZE) {
          this.hashBuffer();
          this.bufferLength = 0;
        }
      }

      return this;
    };

    Sha256.prototype.digest = function (encoding) {
      if (!this.finished) {
        var bitsHashed = this.bytesHashed * 8;
        var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);
        var undecoratedLength = this.bufferLength;
        bufferView.setUint8(this.bufferLength++, 0x80); // Ensure the final block has enough room for the hashed length

        if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {
          for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {
            bufferView.setUint8(i, 0);
          }

          this.hashBuffer();
          this.bufferLength = 0;
        }

        for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {
          bufferView.setUint8(i, 0);
        }

        bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);
        bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);
        this.hashBuffer();
        this.finished = true;
      } // The value in state is little-endian rather than big-endian, so flip
      // each word into a new Uint8Array


      var out = new Buffer(DIGEST_LENGTH);

      for (var i = 0; i < 8; i++) {
        out[i * 4] = this.state[i] >>> 24 & 0xff;
        out[i * 4 + 1] = this.state[i] >>> 16 & 0xff;
        out[i * 4 + 2] = this.state[i] >>> 8 & 0xff;
        out[i * 4 + 3] = this.state[i] >>> 0 & 0xff;
      }

      return encoding ? out.toString(encoding) : out;
    };

    Sha256.prototype.hashBuffer = function () {
      var _a = this,
          buffer = _a.buffer,
          state = _a.state;

      var state0 = state[0],
          state1 = state[1],
          state2 = state[2],
          state3 = state[3],
          state4 = state[4],
          state5 = state[5],
          state6 = state[6],
          state7 = state[7];

      for (var i = 0; i < BLOCK_SIZE; i++) {
        if (i < 16) {
          this.temp[i] = (buffer[i * 4] & 0xff) << 24 | (buffer[i * 4 + 1] & 0xff) << 16 | (buffer[i * 4 + 2] & 0xff) << 8 | buffer[i * 4 + 3] & 0xff;
        } else {
          var u = this.temp[i - 2];
          var t1_1 = (u >>> 17 | u << 15) ^ (u >>> 19 | u << 13) ^ u >>> 10;
          u = this.temp[i - 15];
          var t2_1 = (u >>> 7 | u << 25) ^ (u >>> 18 | u << 14) ^ u >>> 3;
          this.temp[i] = (t1_1 + this.temp[i - 7] | 0) + (t2_1 + this.temp[i - 16] | 0);
        }

        var t1 = (((state4 >>> 6 | state4 << 26) ^ (state4 >>> 11 | state4 << 21) ^ (state4 >>> 25 | state4 << 7)) + (state4 & state5 ^ ~state4 & state6) | 0) + (state7 + (KEY[i] + this.temp[i] | 0) | 0) | 0;
        var t2 = ((state0 >>> 2 | state0 << 30) ^ (state0 >>> 13 | state0 << 19) ^ (state0 >>> 22 | state0 << 10)) + (state0 & state1 ^ state0 & state2 ^ state1 & state2) | 0;
        state7 = state6;
        state6 = state5;
        state5 = state4;
        state4 = state3 + t1 | 0;
        state3 = state2;
        state2 = state1;
        state1 = state0;
        state0 = t1 + t2 | 0;
      }

      state[0] += state0;
      state[1] += state1;
      state[2] += state2;
      state[3] += state3;
      state[4] += state4;
      state[5] += state5;
      state[6] += state6;
      state[7] += state7;
    };
    /***/

  },

  /***/
  "./node_modules/aws-sdk/lib/browser_loader.js":
  /*!****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/browser_loader.js ***!
    \****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibBrowser_loaderJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ./util */
    "./node_modules/aws-sdk/lib/util.js"); // browser specific modules


    util.crypto.lib = __webpack_require__(
    /*! ./browserCryptoLib */
    "./node_modules/aws-sdk/lib/browserCryptoLib.js");
    util.Buffer = __webpack_require__(
    /*! buffer/ */
    "./node_modules/buffer/index.js").Buffer;
    util.url = __webpack_require__(
    /*! url/ */
    "./node_modules/aws-sdk/node_modules/url/url.js");
    util.querystring = __webpack_require__(
    /*! querystring/ */
    "./node_modules/querystring/index.js");
    util.realClock = __webpack_require__(
    /*! ./realclock/browserClock */
    "./node_modules/aws-sdk/lib/realclock/browserClock.js");
    util.environment = 'js';
    util.createEventStream = __webpack_require__(
    /*! ./event-stream/buffered-create-event-stream */
    "./node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js").createEventStream;

    util.isBrowser = function () {
      return true;
    };

    util.isNode = function () {
      return false;
    };

    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");
    /**
     * @api private
     */


    module.exports = AWS;

    __webpack_require__(
    /*! ./credentials */
    "./node_modules/aws-sdk/lib/credentials.js");

    __webpack_require__(
    /*! ./credentials/credential_provider_chain */
    "./node_modules/aws-sdk/lib/credentials/credential_provider_chain.js");

    __webpack_require__(
    /*! ./credentials/temporary_credentials */
    "./node_modules/aws-sdk/lib/credentials/temporary_credentials.js");

    __webpack_require__(
    /*! ./credentials/chainable_temporary_credentials */
    "./node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js");

    __webpack_require__(
    /*! ./credentials/web_identity_credentials */
    "./node_modules/aws-sdk/lib/credentials/web_identity_credentials.js");

    __webpack_require__(
    /*! ./credentials/cognito_identity_credentials */
    "./node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js");

    __webpack_require__(
    /*! ./credentials/saml_credentials */
    "./node_modules/aws-sdk/lib/credentials/saml_credentials.js"); // Load the DOMParser XML parser


    AWS.XML.Parser = __webpack_require__(
    /*! ./xml/browser_parser */
    "./node_modules/aws-sdk/lib/xml/browser_parser.js"); // Load the XHR HttpClient

    __webpack_require__(
    /*! ./http/xhr */
    "./node_modules/aws-sdk/lib/http/xhr.js");

    if (typeof process === 'undefined') {
      var process = {
        browser: true
      };
    }
    /***/

  },

  /***/
  "./node_modules/aws-sdk/lib/config.js":
  /*!********************************************!*\
    !*** ./node_modules/aws-sdk/lib/config.js ***!
    \********************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibConfigJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");

    __webpack_require__(
    /*! ./credentials */
    "./node_modules/aws-sdk/lib/credentials.js");

    __webpack_require__(
    /*! ./credentials/credential_provider_chain */
    "./node_modules/aws-sdk/lib/credentials/credential_provider_chain.js");

    var PromisesDependency;
    /**
     * The main configuration class used by all service objects to set
     * the region, credentials, and other options for requests.
     *
     * By default, credentials and region settings are left unconfigured.
     * This should be configured by the application before using any
     * AWS service APIs.
     *
     * In order to set global configuration options, properties should
     * be assigned to the global {AWS.config} object.
     *
     * @see AWS.config
     *
     * @!group General Configuration Options
     *
     * @!attribute credentials
     *   @return [AWS.Credentials] the AWS credentials to sign requests with.
     *
     * @!attribute region
     *   @example Set the global region setting to us-west-2
     *     AWS.config.update({region: 'us-west-2'});
     *   @return [AWS.Credentials] The region to send service requests to.
     *   @see http://docs.amazonwebservices.com/general/latest/gr/rande.html
     *     A list of available endpoints for each AWS service
     *
     * @!attribute maxRetries
     *   @return [Integer] the maximum amount of retries to perform for a
     *     service request. By default this value is calculated by the specific
     *     service object that the request is being made to.
     *
     * @!attribute maxRedirects
     *   @return [Integer] the maximum amount of redirects to follow for a
     *     service request. Defaults to 10.
     *
     * @!attribute paramValidation
     *   @return [Boolean|map] whether input parameters should be validated against
     *     the operation description before sending the request. Defaults to true.
     *     Pass a map to enable any of the following specific validation features:
     *
     *     * **min** [Boolean] &mdash; Validates that a value meets the min
     *       constraint. This is enabled by default when paramValidation is set
     *       to `true`.
     *     * **max** [Boolean] &mdash; Validates that a value meets the max
     *       constraint.
     *     * **pattern** [Boolean] &mdash; Validates that a string value matches a
     *       regular expression.
     *     * **enum** [Boolean] &mdash; Validates that a string value matches one
     *       of the allowable enum values.
     *
     * @!attribute computeChecksums
     *   @return [Boolean] whether to compute checksums for payload bodies when
     *     the service accepts it (currently supported in S3 only).
     *
     * @!attribute convertResponseTypes
     *   @return [Boolean] whether types are converted when parsing response data.
     *     Currently only supported for JSON based services. Turning this off may
     *     improve performance on large response payloads. Defaults to `true`.
     *
     * @!attribute correctClockSkew
     *   @return [Boolean] whether to apply a clock skew correction and retry
     *     requests that fail because of an skewed client clock. Defaults to
     *     `false`.
     *
     * @!attribute sslEnabled
     *   @return [Boolean] whether SSL is enabled for requests
     *
     * @!attribute s3ForcePathStyle
     *   @return [Boolean] whether to force path style URLs for S3 objects
     *
     * @!attribute s3BucketEndpoint
     *   @note Setting this configuration option requires an `endpoint` to be
     *     provided explicitly to the service constructor.
     *   @return [Boolean] whether the provided endpoint addresses an individual
     *     bucket (false if it addresses the root API endpoint).
     *
     * @!attribute s3DisableBodySigning
     *   @return [Boolean] whether to disable S3 body signing when using signature version `v4`.
     *     Body signing can only be disabled when using https. Defaults to `true`.
     *
     * @!attribute s3UsEast1RegionalEndpoint
     *   @return ['legacy'|'regional'] when region is set to 'us-east-1', whether to send s3
     *     request to global endpoints or 'us-east-1' regional endpoints. This config is only
     *     applicable to S3 client;
     *     Defaults to 'legacy'
     * @!attribute s3UseArnRegion
     *   @return [Boolean] whether to override the request region with the region inferred
     *     from requested resource's ARN. Only available for S3 buckets
     *     Defaults to `true`
     *
     * @!attribute useAccelerateEndpoint
     *   @note This configuration option is only compatible with S3 while accessing
     *     dns-compatible buckets.
     *   @return [Boolean] Whether to use the Accelerate endpoint with the S3 service.
     *     Defaults to `false`.
     *
     * @!attribute retryDelayOptions
     *   @example Set the base retry delay for all services to 300 ms
     *     AWS.config.update({retryDelayOptions: {base: 300}});
     *     // Delays with maxRetries = 3: 300, 600, 1200
     *   @example Set a custom backoff function to provide delay values on retries
     *     AWS.config.update({retryDelayOptions: {customBackoff: function(retryCount, err) {
     *       // returns delay in ms
     *     }}});
     *   @return [map] A set of options to configure the retry delay on retryable errors.
     *     Currently supported options are:
     *
     *     * **base** [Integer] &mdash; The base number of milliseconds to use in the
     *       exponential backoff for operation retries. Defaults to 100 ms for all services except
     *       DynamoDB, where it defaults to 50ms.
     *
     *     * **customBackoff ** [function] &mdash; A custom function that accepts a
     *       retry count and error and returns the amount of time to delay in
     *       milliseconds. If the result is a non-zero negative value, no further
     *       retry attempts will be made. The `base` option will be ignored if this
     *       option is supplied.
     *
     * @!attribute httpOptions
     *   @return [map] A set of options to pass to the low-level HTTP request.
     *     Currently supported options are:
     *
     *     * **proxy** [String] &mdash; the URL to proxy requests through
     *     * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform
     *       HTTP requests with. Used for connection pooling. Note that for
     *       SSL connections, a special Agent object is used in order to enable
     *       peer certificate verification. This feature is only supported in the
     *       Node.js environment.
     *     * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after
     *       failing to establish a connection with the server after
     *       `connectTimeout` milliseconds. This timeout has no effect once a socket
     *       connection has been established.
     *     * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout
     *       milliseconds of inactivity on the socket. Defaults to two minutes
     *       (120000)
     *     * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous
     *       HTTP requests. Used in the browser environment only. Set to false to
     *       send requests synchronously. Defaults to true (async on).
     *     * **xhrWithCredentials** [Boolean] &mdash; Sets the "withCredentials"
     *       property of an XMLHttpRequest object. Used in the browser environment
     *       only. Defaults to false.
     * @!attribute logger
     *   @return [#write,#log] an object that responds to .write() (like a stream)
     *     or .log() (like the console object) in order to log information about
     *     requests
     *
     * @!attribute systemClockOffset
     *   @return [Number] an offset value in milliseconds to apply to all signing
     *     times. Use this to compensate for clock skew when your system may be
     *     out of sync with the service time. Note that this configuration option
     *     can only be applied to the global `AWS.config` object and cannot be
     *     overridden in service-specific configuration. Defaults to 0 milliseconds.
     *
     * @!attribute signatureVersion
     *   @return [String] the signature version to sign requests with (overriding
     *     the API configuration). Possible values are: 'v2', 'v3', 'v4'.
     *
     * @!attribute signatureCache
     *   @return [Boolean] whether the signature to sign requests with (overriding
     *     the API configuration) is cached. Only applies to the signature version 'v4'.
     *     Defaults to `true`.
     *
     * @!attribute endpointDiscoveryEnabled
     *   @return [Boolean|undefined] whether to call operations with endpoints
     *     given by service dynamically. Setting this config to `true` will enable
     *     endpoint discovery for all applicable operations. Setting it to `false`
     *     will explicitly disable endpoint discovery even though operations that
     *     require endpoint discovery will presumably fail. Leaving it to
     *     `undefined` means SDK only do endpoint discovery when it's required.
     *     Defaults to `undefined`
     *
     * @!attribute endpointCacheSize
     *   @return [Number] the size of the global cache storing endpoints from endpoint
     *     discovery operations. Once endpoint cache is created, updating this setting
     *     cannot change existing cache size.
     *     Defaults to 1000
     *
     * @!attribute hostPrefixEnabled
     *   @return [Boolean] whether to marshal request parameters to the prefix of
     *     hostname. Defaults to `true`.
     *
     * @!attribute stsRegionalEndpoints
     *   @return ['legacy'|'regional'] whether to send sts request to global endpoints or
     *     regional endpoints.
     *     Defaults to 'legacy'
     */

    AWS.Config = AWS.util.inherit({
      /**
       * @!endgroup
       */

      /**
       * Creates a new configuration object. This is the object that passes
       * option data along to service requests, including credentials, security,
       * region information, and some service specific settings.
       *
       * @example Creating a new configuration object with credentials and region
       *   var config = new AWS.Config({
       *     accessKeyId: 'AKID', secretAccessKey: 'SECRET', region: 'us-west-2'
       *   });
       * @option options accessKeyId [String] your AWS access key ID.
       * @option options secretAccessKey [String] your AWS secret access key.
       * @option options sessionToken [AWS.Credentials] the optional AWS
       *   session token to sign requests with.
       * @option options credentials [AWS.Credentials] the AWS credentials
       *   to sign requests with. You can either specify this object, or
       *   specify the accessKeyId and secretAccessKey options directly.
       * @option options credentialProvider [AWS.CredentialProviderChain] the
       *   provider chain used to resolve credentials if no static `credentials`
       *   property is set.
       * @option options region [String] the region to send service requests to.
       *   See {region} for more information.
       * @option options maxRetries [Integer] the maximum amount of retries to
       *   attempt with a request. See {maxRetries} for more information.
       * @option options maxRedirects [Integer] the maximum amount of redirects to
       *   follow with a request. See {maxRedirects} for more information.
       * @option options sslEnabled [Boolean] whether to enable SSL for
       *   requests.
       * @option options paramValidation [Boolean|map] whether input parameters
       *   should be validated against the operation description before sending
       *   the request. Defaults to true. Pass a map to enable any of the
       *   following specific validation features:
       *
       *   * **min** [Boolean] &mdash; Validates that a value meets the min
       *     constraint. This is enabled by default when paramValidation is set
       *     to `true`.
       *   * **max** [Boolean] &mdash; Validates that a value meets the max
       *     constraint.
       *   * **pattern** [Boolean] &mdash; Validates that a string value matches a
       *     regular expression.
       *   * **enum** [Boolean] &mdash; Validates that a string value matches one
       *     of the allowable enum values.
       * @option options computeChecksums [Boolean] whether to compute checksums
       *   for payload bodies when the service accepts it (currently supported
       *   in S3 only)
       * @option options convertResponseTypes [Boolean] whether types are converted
       *     when parsing response data. Currently only supported for JSON based
       *     services. Turning this off may improve performance on large response
       *     payloads. Defaults to `true`.
       * @option options correctClockSkew [Boolean] whether to apply a clock skew
       *     correction and retry requests that fail because of an skewed client
       *     clock. Defaults to `false`.
       * @option options s3ForcePathStyle [Boolean] whether to force path
       *   style URLs for S3 objects.
       * @option options s3BucketEndpoint [Boolean] whether the provided endpoint
       *   addresses an individual bucket (false if it addresses the root API
       *   endpoint). Note that setting this configuration option requires an
       *   `endpoint` to be provided explicitly to the service constructor.
       * @option options s3DisableBodySigning [Boolean] whether S3 body signing
       *   should be disabled when using signature version `v4`. Body signing
       *   can only be disabled when using https. Defaults to `true`.
       * @option options s3UsEast1RegionalEndpoint ['legacy'|'regional'] when region
       *   is set to 'us-east-1', whether to send s3 request to global endpoints or
       *   'us-east-1' regional endpoints. This config is only applicable to S3 client.
       *   Defaults to `legacy`
       * @option options s3UseArnRegion [Boolean] whether to override the request region
       *   with the region inferred from requested resource's ARN. Only available for S3 buckets
       *   Defaults to `true`
       *
       * @option options retryDelayOptions [map] A set of options to configure
       *   the retry delay on retryable errors. Currently supported options are:
       *
       *   * **base** [Integer] &mdash; The base number of milliseconds to use in the
       *     exponential backoff for operation retries. Defaults to 100 ms for all
       *     services except DynamoDB, where it defaults to 50ms.
       *   * **customBackoff ** [function] &mdash; A custom function that accepts a
       *     retry count and error and returns the amount of time to delay in
       *     milliseconds. If the result is a non-zero negative value, no further
       *     retry attempts will be made. The `base` option will be ignored if this
       *     option is supplied.
       * @option options httpOptions [map] A set of options to pass to the low-level
       *   HTTP request. Currently supported options are:
       *
       *   * **proxy** [String] &mdash; the URL to proxy requests through
       *   * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform
       *     HTTP requests with. Used for connection pooling. Defaults to the global
       *     agent (`http.globalAgent`) for non-SSL connections. Note that for
       *     SSL connections, a special Agent object is used in order to enable
       *     peer certificate verification. This feature is only available in the
       *     Node.js environment.
       *   * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after
       *     failing to establish a connection with the server after
       *     `connectTimeout` milliseconds. This timeout has no effect once a socket
       *     connection has been established.
       *   * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout
       *     milliseconds of inactivity on the socket. Defaults to two minutes
       *     (120000).
       *   * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous
       *     HTTP requests. Used in the browser environment only. Set to false to
       *     send requests synchronously. Defaults to true (async on).
       *   * **xhrWithCredentials** [Boolean] &mdash; Sets the "withCredentials"
       *     property of an XMLHttpRequest object. Used in the browser environment
       *     only. Defaults to false.
       * @option options apiVersion [String, Date] a String in YYYY-MM-DD format
       *   (or a date) that represents the latest possible API version that can be
       *   used in all services (unless overridden by `apiVersions`). Specify
       *   'latest' to use the latest possible version.
       * @option options apiVersions [map<String, String|Date>] a map of service
       *   identifiers (the lowercase service class name) with the API version to
       *   use when instantiating a service. Specify 'latest' for each individual
       *   that can use the latest available version.
       * @option options logger [#write,#log] an object that responds to .write()
       *   (like a stream) or .log() (like the console object) in order to log
       *   information about requests
       * @option options systemClockOffset [Number] an offset value in milliseconds
       *   to apply to all signing times. Use this to compensate for clock skew
       *   when your system may be out of sync with the service time. Note that
       *   this configuration option can only be applied to the global `AWS.config`
       *   object and cannot be overridden in service-specific configuration.
       *   Defaults to 0 milliseconds.
       * @option options signatureVersion [String] the signature version to sign
       *   requests with (overriding the API configuration). Possible values are:
       *   'v2', 'v3', 'v4'.
       * @option options signatureCache [Boolean] whether the signature to sign
       *   requests with (overriding the API configuration) is cached. Only applies
       *   to the signature version 'v4'. Defaults to `true`.
       * @option options dynamoDbCrc32 [Boolean] whether to validate the CRC32
       *   checksum of HTTP response bodies returned by DynamoDB. Default: `true`.
       * @option options useAccelerateEndpoint [Boolean] Whether to use the
       *   S3 Transfer Acceleration endpoint with the S3 service. Default: `false`.
       * @option options clientSideMonitoring [Boolean] whether to collect and
       *   publish this client's performance metrics of all its API requests.
       * @option options endpointDiscoveryEnabled [Boolean|undefined] whether to
       *   call operations with endpoints given by service dynamically. Setting this
       * config to `true` will enable endpoint discovery for all applicable operations.
       *   Setting it to `false` will explicitly disable endpoint discovery even though
       *   operations that require endpoint discovery will presumably fail. Leaving it
       *   to `undefined` means SDK will only do endpoint discovery when it's required.
       *   Defaults to `undefined`
       * @option options endpointCacheSize [Number] the size of the global cache storing
       *   endpoints from endpoint discovery operations. Once endpoint cache is created,
       *   updating this setting cannot change existing cache size.
       *   Defaults to 1000
       * @option options hostPrefixEnabled [Boolean] whether to marshal request
       *   parameters to the prefix of hostname.
       *   Defaults to `true`.
       * @option options stsRegionalEndpoints ['legacy'|'regional'] whether to send sts request
       *   to global endpoints or regional endpoints.
       *   Defaults to 'legacy'.
       */
      constructor: function Config(options) {
        if (options === undefined) options = {};
        options = this.extractCredentials(options);
        AWS.util.each.call(this, this.keys, function (key, value) {
          this.set(key, options[key], value);
        });
      },

      /**
       * @!group Managing Credentials
       */

      /**
       * Loads credentials from the configuration object. This is used internally
       * by the SDK to ensure that refreshable {Credentials} objects are properly
       * refreshed and loaded when sending a request. If you want to ensure that
       * your credentials are loaded prior to a request, you can use this method
       * directly to provide accurate credential data stored in the object.
       *
       * @note If you configure the SDK with static or environment credentials,
       *   the credential data should already be present in {credentials} attribute.
       *   This method is primarily necessary to load credentials from asynchronous
       *   sources, or sources that can refresh credentials periodically.
       * @example Getting your access key
       *   AWS.config.getCredentials(function(err) {
       *     if (err) console.log(err.stack); // credentials not loaded
       *     else console.log("Access Key:", AWS.config.credentials.accessKeyId);
       *   })
       * @callback callback function(err)
       *   Called when the {credentials} have been properly set on the configuration
       *   object.
       *
       *   @param err [Error] if this is set, credentials were not successfully
       *     loaded and this error provides information why.
       * @see credentials
       * @see Credentials
       */
      getCredentials: function getCredentials(callback) {
        var self = this;

        function finish(err) {
          callback(err, err ? null : self.credentials);
        }

        function credError(msg, err) {
          return new AWS.util.error(err || new Error(), {
            code: 'CredentialsError',
            message: msg,
            name: 'CredentialsError'
          });
        }

        function getAsyncCredentials() {
          self.credentials.get(function (err) {
            if (err) {
              var msg = 'Could not load credentials from ' + self.credentials.constructor.name;
              err = credError(msg, err);
            }

            finish(err);
          });
        }

        function getStaticCredentials() {
          var err = null;

          if (!self.credentials.accessKeyId || !self.credentials.secretAccessKey) {
            err = credError('Missing credentials');
          }

          finish(err);
        }

        if (self.credentials) {
          if (typeof self.credentials.get === 'function') {
            getAsyncCredentials();
          } else {
            // static credentials
            getStaticCredentials();
          }
        } else if (self.credentialProvider) {
          self.credentialProvider.resolve(function (err, creds) {
            if (err) {
              err = credError('Could not load credentials from any providers', err);
            }

            self.credentials = creds;
            finish(err);
          });
        } else {
          finish(credError('No credentials to load'));
        }
      },

      /**
       * @!group Loading and Setting Configuration Options
       */

      /**
       * @overload update(options, allowUnknownKeys = false)
       *   Updates the current configuration object with new options.
       *
       *   @example Update maxRetries property of a configuration object
       *     config.update({maxRetries: 10});
       *   @param [Object] options a map of option keys and values.
       *   @param [Boolean] allowUnknownKeys whether unknown keys can be set on
       *     the configuration object. Defaults to `false`.
       *   @see constructor
       */
      update: function update(options, allowUnknownKeys) {
        allowUnknownKeys = allowUnknownKeys || false;
        options = this.extractCredentials(options);
        AWS.util.each.call(this, options, function (key, value) {
          if (allowUnknownKeys || Object.prototype.hasOwnProperty.call(this.keys, key) || AWS.Service.hasService(key)) {
            this.set(key, value);
          }
        });
      },

      /**
       * Loads configuration data from a JSON file into this config object.
       * @note Loading configuration will reset all existing configuration
       *   on the object.
       * @!macro nobrowser
       * @param path [String] the path relative to your process's current
       *    working directory to load configuration from.
       * @return [AWS.Config] the same configuration object
       */
      loadFromPath: function loadFromPath(path) {
        this.clear();
        var options = JSON.parse(AWS.util.readFileSync(path));
        var fileSystemCreds = new AWS.FileSystemCredentials(path);
        var chain = new AWS.CredentialProviderChain();
        chain.providers.unshift(fileSystemCreds);
        chain.resolve(function (err, creds) {
          if (err) throw err;else options.credentials = creds;
        });
        this.constructor(options);
        return this;
      },

      /**
       * Clears configuration data on this object
       *
       * @api private
       */
      clear: function clear() {
        /*jshint forin:false */
        AWS.util.each.call(this, this.keys, function (key) {
          delete this[key];
        }); // reset credential provider

        this.set('credentials', undefined);
        this.set('credentialProvider', undefined);
      },

      /**
       * Sets a property on the configuration object, allowing for a
       * default value
       * @api private
       */
      set: function set(property, value, defaultValue) {
        if (value === undefined) {
          if (defaultValue === undefined) {
            defaultValue = this.keys[property];
          }

          if (typeof defaultValue === 'function') {
            this[property] = defaultValue.call(this);
          } else {
            this[property] = defaultValue;
          }
        } else if (property === 'httpOptions' && this[property]) {
          // deep merge httpOptions
          this[property] = AWS.util.merge(this[property], value);
        } else {
          this[property] = value;
        }
      },

      /**
       * All of the keys with their default values.
       *
       * @constant
       * @api private
       */
      keys: {
        credentials: null,
        credentialProvider: null,
        region: null,
        logger: null,
        apiVersions: {},
        apiVersion: null,
        endpoint: undefined,
        httpOptions: {
          timeout: 120000
        },
        maxRetries: undefined,
        maxRedirects: 10,
        paramValidation: true,
        sslEnabled: true,
        s3ForcePathStyle: false,
        s3BucketEndpoint: false,
        s3DisableBodySigning: true,
        s3UsEast1RegionalEndpoint: 'legacy',
        s3UseArnRegion: undefined,
        computeChecksums: true,
        convertResponseTypes: true,
        correctClockSkew: false,
        customUserAgent: null,
        dynamoDbCrc32: true,
        systemClockOffset: 0,
        signatureVersion: null,
        signatureCache: true,
        retryDelayOptions: {},
        useAccelerateEndpoint: false,
        clientSideMonitoring: false,
        endpointDiscoveryEnabled: undefined,
        endpointCacheSize: 1000,
        hostPrefixEnabled: true,
        stsRegionalEndpoints: 'legacy'
      },

      /**
       * Extracts accessKeyId, secretAccessKey and sessionToken
       * from a configuration hash.
       *
       * @api private
       */
      extractCredentials: function extractCredentials(options) {
        if (options.accessKeyId && options.secretAccessKey) {
          options = AWS.util.copy(options);
          options.credentials = new AWS.Credentials(options);
        }

        return options;
      },

      /**
       * Sets the promise dependency the SDK will use wherever Promises are returned.
       * Passing `null` will force the SDK to use native Promises if they are available.
       * If native Promises are not available, passing `null` will have no effect.
       * @param [Constructor] dep A reference to a Promise constructor
       */
      setPromisesDependency: function setPromisesDependency(dep) {
        PromisesDependency = dep; // if null was passed in, we should try to use native promises

        if (dep === null && typeof Promise === 'function') {
          PromisesDependency = Promise;
        }

        var constructors = [AWS.Request, AWS.Credentials, AWS.CredentialProviderChain];

        if (AWS.S3) {
          constructors.push(AWS.S3);

          if (AWS.S3.ManagedUpload) {
            constructors.push(AWS.S3.ManagedUpload);
          }
        }

        AWS.util.addPromises(constructors, PromisesDependency);
      },

      /**
       * Gets the promise dependency set by `AWS.config.setPromisesDependency`.
       */
      getPromisesDependency: function getPromisesDependency() {
        return PromisesDependency;
      }
    });
    /**
     * @return [AWS.Config] The global configuration object singleton instance
     * @readonly
     * @see AWS.Config
     */

    AWS.config = new AWS.Config();
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/config_regional_endpoint.js":
  /*!**************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/config_regional_endpoint.js ***!
    \**************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibConfig_regional_endpointJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");
    /**
     * @api private
     */


    function validateRegionalEndpointsFlagValue(configValue, errorOptions) {
      if (typeof configValue !== 'string') return undefined;else if (['legacy', 'regional'].indexOf(configValue.toLowerCase()) >= 0) {
        return configValue.toLowerCase();
      } else {
        throw AWS.util.error(new Error(), errorOptions);
      }
    }
    /**
     * Resolve the configuration value for regional endpoint from difference sources: client
     * config, environmental variable, shared config file. Value can be case-insensitive
     * 'legacy' or 'reginal'.
     * @param originalConfig user-supplied config object to resolve
     * @param options a map of config property names from individual configuration source
     *  - env: name of environmental variable that refers to the config
     *  - sharedConfig: name of shared configuration file property that refers to the config
     *  - clientConfig: name of client configuration property that refers to the config
     *
     * @api private
     */


    function resolveRegionalEndpointsFlag(originalConfig, options) {
      originalConfig = originalConfig || {}; //validate config value

      var resolved;

      if (originalConfig[options.clientConfig]) {
        resolved = validateRegionalEndpointsFlagValue(originalConfig[options.clientConfig], {
          code: 'InvalidConfiguration',
          message: 'invalid "' + options.clientConfig + '" configuration. Expect "legacy" ' + ' or "regional". Got "' + originalConfig[options.clientConfig] + '".'
        });
        if (resolved) return resolved;
      }

      if (!AWS.util.isNode()) return resolved; //validate environmental variable

      if (Object.prototype.hasOwnProperty.call(process.env, options.env)) {
        var envFlag = process.env[options.env];
        resolved = validateRegionalEndpointsFlagValue(envFlag, {
          code: 'InvalidEnvironmentalVariable',
          message: 'invalid ' + options.env + ' environmental variable. Expect "legacy" ' + ' or "regional". Got "' + process.env[options.env] + '".'
        });
        if (resolved) return resolved;
      } //validate shared config file


      var profile = {};

      try {
        var profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);
        profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];
      } catch (e) {}

      ;

      if (profile && Object.prototype.hasOwnProperty.call(profile, options.sharedConfig)) {
        var fileFlag = profile[options.sharedConfig];
        resolved = validateRegionalEndpointsFlagValue(fileFlag, {
          code: 'InvalidConfiguration',
          message: 'invalid ' + options.sharedConfig + ' profile config. Expect "legacy" ' + ' or "regional". Got "' + profile[options.sharedConfig] + '".'
        });
        if (resolved) return resolved;
      }

      return resolved;
    }

    module.exports = resolveRegionalEndpointsFlag;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/core.js":
  /*!******************************************!*\
    !*** ./node_modules/aws-sdk/lib/core.js ***!
    \******************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibCoreJs(module, exports, __webpack_require__) {
    /**
     * The main AWS namespace
     */
    var AWS = {
      util: __webpack_require__(
      /*! ./util */
      "./node_modules/aws-sdk/lib/util.js")
    };
    /**
     * @api private
     * @!macro [new] nobrowser
     *   @note This feature is not supported in the browser environment of the SDK.
     */

    var _hidden = {};

    _hidden.toString(); // hack to parse macro

    /**
     * @api private
     */


    module.exports = AWS;
    AWS.util.update(AWS, {
      /**
       * @constant
       */
      VERSION: '2.690.0',

      /**
       * @api private
       */
      Signers: {},

      /**
       * @api private
       */
      Protocol: {
        Json: __webpack_require__(
        /*! ./protocol/json */
        "./node_modules/aws-sdk/lib/protocol/json.js"),
        Query: __webpack_require__(
        /*! ./protocol/query */
        "./node_modules/aws-sdk/lib/protocol/query.js"),
        Rest: __webpack_require__(
        /*! ./protocol/rest */
        "./node_modules/aws-sdk/lib/protocol/rest.js"),
        RestJson: __webpack_require__(
        /*! ./protocol/rest_json */
        "./node_modules/aws-sdk/lib/protocol/rest_json.js"),
        RestXml: __webpack_require__(
        /*! ./protocol/rest_xml */
        "./node_modules/aws-sdk/lib/protocol/rest_xml.js")
      },

      /**
       * @api private
       */
      XML: {
        Builder: __webpack_require__(
        /*! ./xml/builder */
        "./node_modules/aws-sdk/lib/xml/builder.js"),
        Parser: null // conditionally set based on environment

      },

      /**
       * @api private
       */
      JSON: {
        Builder: __webpack_require__(
        /*! ./json/builder */
        "./node_modules/aws-sdk/lib/json/builder.js"),
        Parser: __webpack_require__(
        /*! ./json/parser */
        "./node_modules/aws-sdk/lib/json/parser.js")
      },

      /**
       * @api private
       */
      Model: {
        Api: __webpack_require__(
        /*! ./model/api */
        "./node_modules/aws-sdk/lib/model/api.js"),
        Operation: __webpack_require__(
        /*! ./model/operation */
        "./node_modules/aws-sdk/lib/model/operation.js"),
        Shape: __webpack_require__(
        /*! ./model/shape */
        "./node_modules/aws-sdk/lib/model/shape.js"),
        Paginator: __webpack_require__(
        /*! ./model/paginator */
        "./node_modules/aws-sdk/lib/model/paginator.js"),
        ResourceWaiter: __webpack_require__(
        /*! ./model/resource_waiter */
        "./node_modules/aws-sdk/lib/model/resource_waiter.js")
      },

      /**
       * @api private
       */
      apiLoader: __webpack_require__(
      /*! ./api_loader */
      "./node_modules/aws-sdk/lib/api_loader.js"),

      /**
       * @api private
       */
      EndpointCache: __webpack_require__(
      /*! ../vendor/endpoint-cache */
      "./node_modules/aws-sdk/vendor/endpoint-cache/index.js").EndpointCache
    });

    __webpack_require__(
    /*! ./sequential_executor */
    "./node_modules/aws-sdk/lib/sequential_executor.js");

    __webpack_require__(
    /*! ./service */
    "./node_modules/aws-sdk/lib/service.js");

    __webpack_require__(
    /*! ./config */
    "./node_modules/aws-sdk/lib/config.js");

    __webpack_require__(
    /*! ./http */
    "./node_modules/aws-sdk/lib/http.js");

    __webpack_require__(
    /*! ./event_listeners */
    "./node_modules/aws-sdk/lib/event_listeners.js");

    __webpack_require__(
    /*! ./request */
    "./node_modules/aws-sdk/lib/request.js");

    __webpack_require__(
    /*! ./response */
    "./node_modules/aws-sdk/lib/response.js");

    __webpack_require__(
    /*! ./resource_waiter */
    "./node_modules/aws-sdk/lib/resource_waiter.js");

    __webpack_require__(
    /*! ./signers/request_signer */
    "./node_modules/aws-sdk/lib/signers/request_signer.js");

    __webpack_require__(
    /*! ./param_validator */
    "./node_modules/aws-sdk/lib/param_validator.js");
    /**
     * @readonly
     * @return [AWS.SequentialExecutor] a collection of global event listeners that
     *   are attached to every sent request.
     * @see AWS.Request AWS.Request for a list of events to listen for
     * @example Logging the time taken to send a request
     *   AWS.events.on('send', function startSend(resp) {
     *     resp.startTime = new Date().getTime();
     *   }).on('complete', function calculateTime(resp) {
     *     var time = (new Date().getTime() - resp.startTime) / 1000;
     *     console.log('Request took ' + time + ' seconds');
     *   });
     *
     *   new AWS.S3().listBuckets(); // prints 'Request took 0.285 seconds'
     */


    AWS.events = new AWS.SequentialExecutor(); //create endpoint cache lazily

    AWS.util.memoizedProperty(AWS, 'endpointCache', function () {
      return new AWS.EndpointCache(AWS.config.endpointCacheSize);
    }, true);
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/credentials.js":
  /*!*************************************************!*\
    !*** ./node_modules/aws-sdk/lib/credentials.js ***!
    \*************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibCredentialsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");
    /**
     * Represents your AWS security credentials, specifically the
     * {accessKeyId}, {secretAccessKey}, and optional {sessionToken}.
     * Creating a `Credentials` object allows you to pass around your
     * security information to configuration and service objects.
     *
     * Note that this class typically does not need to be constructed manually,
     * as the {AWS.Config} and {AWS.Service} classes both accept simple
     * options hashes with the three keys. These structures will be converted
     * into Credentials objects automatically.
     *
     * ## Expiring and Refreshing Credentials
     *
     * Occasionally credentials can expire in the middle of a long-running
     * application. In this case, the SDK will automatically attempt to
     * refresh the credentials from the storage location if the Credentials
     * class implements the {refresh} method.
     *
     * If you are implementing a credential storage location, you
     * will want to create a subclass of the `Credentials` class and
     * override the {refresh} method. This method allows credentials to be
     * retrieved from the backing store, be it a file system, database, or
     * some network storage. The method should reset the credential attributes
     * on the object.
     *
     * @!attribute expired
     *   @return [Boolean] whether the credentials have been expired and
     *     require a refresh. Used in conjunction with {expireTime}.
     * @!attribute expireTime
     *   @return [Date] a time when credentials should be considered expired. Used
     *     in conjunction with {expired}.
     * @!attribute accessKeyId
     *   @return [String] the AWS access key ID
     * @!attribute secretAccessKey
     *   @return [String] the AWS secret access key
     * @!attribute sessionToken
     *   @return [String] an optional AWS session token
     */


    AWS.Credentials = AWS.util.inherit({
      /**
       * A credentials object can be created using positional arguments or an options
       * hash.
       *
       * @overload AWS.Credentials(accessKeyId, secretAccessKey, sessionToken=null)
       *   Creates a Credentials object with a given set of credential information
       *   as positional arguments.
       *   @param accessKeyId [String] the AWS access key ID
       *   @param secretAccessKey [String] the AWS secret access key
       *   @param sessionToken [String] the optional AWS session token
       *   @example Create a credentials object with AWS credentials
       *     var creds = new AWS.Credentials('akid', 'secret', 'session');
       * @overload AWS.Credentials(options)
       *   Creates a Credentials object with a given set of credential information
       *   as an options hash.
       *   @option options accessKeyId [String] the AWS access key ID
       *   @option options secretAccessKey [String] the AWS secret access key
       *   @option options sessionToken [String] the optional AWS session token
       *   @example Create a credentials object with AWS credentials
       *     var creds = new AWS.Credentials({
       *       accessKeyId: 'akid', secretAccessKey: 'secret', sessionToken: 'session'
       *     });
       */
      constructor: function Credentials() {
        // hide secretAccessKey from being displayed with util.inspect
        AWS.util.hideProperties(this, ['secretAccessKey']);
        this.expired = false;
        this.expireTime = null;
        this.refreshCallbacks = [];

        if (arguments.length === 1 && typeof arguments[0] === 'object') {
          var creds = arguments[0].credentials || arguments[0];
          this.accessKeyId = creds.accessKeyId;
          this.secretAccessKey = creds.secretAccessKey;
          this.sessionToken = creds.sessionToken;
        } else {
          this.accessKeyId = arguments[0];
          this.secretAccessKey = arguments[1];
          this.sessionToken = arguments[2];
        }
      },

      /**
       * @return [Integer] the number of seconds before {expireTime} during which
       *   the credentials will be considered expired.
       */
      expiryWindow: 15,

      /**
       * @return [Boolean] whether the credentials object should call {refresh}
       * @note Subclasses should override this method to provide custom refresh
       *   logic.
       */
      needsRefresh: function needsRefresh() {
        var currentTime = AWS.util.date.getDate().getTime();
        var adjustedTime = new Date(currentTime + this.expiryWindow * 1000);

        if (this.expireTime && adjustedTime > this.expireTime) {
          return true;
        } else {
          return this.expired || !this.accessKeyId || !this.secretAccessKey;
        }
      },

      /**
       * Gets the existing credentials, refreshing them if they are not yet loaded
       * or have expired. Users should call this method before using {refresh},
       * as this will not attempt to reload credentials when they are already
       * loaded into the object.
       *
       * @callback callback function(err)
       *   When this callback is called with no error, it means either credentials
       *   do not need to be refreshed or refreshed credentials information has
       *   been loaded into the object (as the `accessKeyId`, `secretAccessKey`,
       *   and `sessionToken` properties).
       *   @param err [Error] if an error occurred, this value will be filled
       */
      get: function get(callback) {
        var self = this;

        if (this.needsRefresh()) {
          this.refresh(function (err) {
            if (!err) self.expired = false; // reset expired flag

            if (callback) callback(err);
          });
        } else if (callback) {
          callback();
        }
      },

      /**
       * @!method  getPromise()
       *   Returns a 'thenable' promise.
       *   Gets the existing credentials, refreshing them if they are not yet loaded
       *   or have expired. Users should call this method before using {refresh},
       *   as this will not attempt to reload credentials when they are already
       *   loaded into the object.
       *
       *   Two callbacks can be provided to the `then` method on the returned promise.
       *   The first callback will be called if the promise is fulfilled, and the second
       *   callback will be called if the promise is rejected.
       *   @callback fulfilledCallback function()
       *     Called if the promise is fulfilled. When this callback is called, it
       *     means either credentials do not need to be refreshed or refreshed
       *     credentials information has been loaded into the object (as the
       *     `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).
       *   @callback rejectedCallback function(err)
       *     Called if the promise is rejected.
       *     @param err [Error] if an error occurred, this value will be filled
       *   @return [Promise] A promise that represents the state of the `get` call.
       *   @example Calling the `getPromise` method.
       *     var promise = credProvider.getPromise();
       *     promise.then(function() { ... }, function(err) { ... });
       */

      /**
       * @!method  refreshPromise()
       *   Returns a 'thenable' promise.
       *   Refreshes the credentials. Users should call {get} before attempting
       *   to forcibly refresh credentials.
       *
       *   Two callbacks can be provided to the `then` method on the returned promise.
       *   The first callback will be called if the promise is fulfilled, and the second
       *   callback will be called if the promise is rejected.
       *   @callback fulfilledCallback function()
       *     Called if the promise is fulfilled. When this callback is called, it
       *     means refreshed credentials information has been loaded into the object
       *     (as the `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).
       *   @callback rejectedCallback function(err)
       *     Called if the promise is rejected.
       *     @param err [Error] if an error occurred, this value will be filled
       *   @return [Promise] A promise that represents the state of the `refresh` call.
       *   @example Calling the `refreshPromise` method.
       *     var promise = credProvider.refreshPromise();
       *     promise.then(function() { ... }, function(err) { ... });
       */

      /**
       * Refreshes the credentials. Users should call {get} before attempting
       * to forcibly refresh credentials.
       *
       * @callback callback function(err)
       *   When this callback is called with no error, it means refreshed
       *   credentials information has been loaded into the object (as the
       *   `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).
       *   @param err [Error] if an error occurred, this value will be filled
       * @note Subclasses should override this class to reset the
       *   {accessKeyId}, {secretAccessKey} and optional {sessionToken}
       *   on the credentials object and then call the callback with
       *   any error information.
       * @see get
       */
      refresh: function refresh(callback) {
        this.expired = false;
        callback();
      },

      /**
       * @api private
       * @param callback
       */
      coalesceRefresh: function coalesceRefresh(callback, sync) {
        var self = this;

        if (self.refreshCallbacks.push(callback) === 1) {
          self.load(function onLoad(err) {
            AWS.util.arrayEach(self.refreshCallbacks, function (callback) {
              if (sync) {
                callback(err);
              } else {
                // callback could throw, so defer to ensure all callbacks are notified
                AWS.util.defer(function () {
                  callback(err);
                });
              }
            });
            self.refreshCallbacks.length = 0;
          });
        }
      },

      /**
       * @api private
       * @param callback
       */
      load: function load(callback) {
        callback();
      }
    });
    /**
     * @api private
     */

    AWS.Credentials.addPromisesToClass = function addPromisesToClass(PromiseDependency) {
      this.prototype.getPromise = AWS.util.promisifyMethod('get', PromiseDependency);
      this.prototype.refreshPromise = AWS.util.promisifyMethod('refresh', PromiseDependency);
    };
    /**
     * @api private
     */


    AWS.Credentials.deletePromisesFromClass = function deletePromisesFromClass() {
      delete this.prototype.getPromise;
      delete this.prototype.refreshPromise;
    };

    AWS.util.addPromises(AWS.Credentials);
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js":
  /*!*********************************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js ***!
    \*********************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibCredentialsChainable_temporary_credentialsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var STS = __webpack_require__(
    /*! ../../clients/sts */
    "./node_modules/aws-sdk/clients/sts.js");
    /**
     * Represents temporary credentials retrieved from {AWS.STS}. Without any
     * extra parameters, credentials will be fetched from the
     * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the
     * {AWS.STS.assumeRole} operation will be used to fetch credentials for the
     * role instead.
     *
     * AWS.ChainableTemporaryCredentials differs from AWS.TemporaryCredentials in
     * the way masterCredentials and refreshes are handled.
     * AWS.ChainableTemporaryCredentials refreshes expired credentials using the
     * masterCredentials passed by the user to support chaining of STS credentials.
     * However, AWS.TemporaryCredentials recursively collapses the masterCredentials
     * during instantiation, precluding the ability to refresh credentials which
     * require intermediate, temporary credentials.
     *
     * For example, if the application should use RoleA, which must be assumed from
     * RoleB, and the environment provides credentials which can assume RoleB, then
     * AWS.ChainableTemporaryCredentials must be used to support refreshing the
     * temporary credentials for RoleA:
     *
     * ```javascript
     * var roleACreds = new AWS.ChainableTemporaryCredentials({
     *   params: {RoleArn: 'RoleA'},
     *   masterCredentials: new AWS.ChainableTemporaryCredentials({
     *     params: {RoleArn: 'RoleB'},
     *     masterCredentials: new AWS.EnvironmentCredentials('AWS')
     *   })
     * });
     * ```
     *
     * If AWS.TemporaryCredentials had been used in the previous example,
     * `roleACreds` would fail to refresh because `roleACreds` would
     * use the environment credentials for the AssumeRole request.
     *
     * Another difference is that AWS.ChainableTemporaryCredentials creates the STS
     * service instance during instantiation while AWS.TemporaryCredentials creates
     * the STS service instance during the first refresh. Creating the service
     * instance during instantiation effectively captures the master credentials
     * from the global config, so that subsequent changes to the global config do
     * not affect the master credentials used to refresh the temporary credentials.
     *
     * This allows an instance of AWS.ChainableTemporaryCredentials to be assigned
     * to AWS.config.credentials:
     *
     * ```javascript
     * var envCreds = new AWS.EnvironmentCredentials('AWS');
     * AWS.config.credentials = envCreds;
     * // masterCredentials will be envCreds
     * AWS.config.credentials = new AWS.ChainableTemporaryCredentials({
     *   params: {RoleArn: '...'}
     * });
     * ```
     *
     * Similarly, to use the CredentialProviderChain's default providers as the
     * master credentials, simply create a new instance of
     * AWS.ChainableTemporaryCredentials:
     *
     * ```javascript
     * AWS.config.credentials = new ChainableTemporaryCredentials({
     *   params: {RoleArn: '...'}
     * });
     * ```
     *
     * @!attribute service
     *   @return [AWS.STS] the STS service instance used to
     *     get and refresh temporary credentials from AWS STS.
     * @note (see constructor)
     */


    AWS.ChainableTemporaryCredentials = AWS.util.inherit(AWS.Credentials, {
      /**
       * Creates a new temporary credentials object.
       *
       * @param options [map] a set of options
       * @option options params [map] ({}) a map of options that are passed to the
       *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.
       *   If a `RoleArn` parameter is passed in, credentials will be based on the
       *   IAM role. If a `SerialNumber` parameter is passed in, {tokenCodeFn} must
       *   also be passed in or an error will be thrown.
       * @option options masterCredentials [AWS.Credentials] the master credentials
       *   used to get and refresh temporary credentials from AWS STS. By default,
       *   AWS.config.credentials or AWS.config.credentialProvider will be used.
       * @option options tokenCodeFn [Function] (null) Function to provide
       *   `TokenCode`, if `SerialNumber` is provided for profile in {params}. Function
       *   is called with value of `SerialNumber` and `callback`, and should provide
       *   the `TokenCode` or an error to the callback in the format
       *   `callback(err, token)`.
       * @example Creating a new credentials object for generic temporary credentials
       *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials();
       * @example Creating a new credentials object for an IAM role
       *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials({
       *     params: {
       *       RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials'
       *     }
       *   });
       * @see AWS.STS.assumeRole
       * @see AWS.STS.getSessionToken
       */
      constructor: function ChainableTemporaryCredentials(options) {
        AWS.Credentials.call(this);
        options = options || {};
        this.errorCode = 'ChainableTemporaryCredentialsProviderFailure';
        this.expired = true;
        this.tokenCodeFn = null;
        var params = AWS.util.copy(options.params) || {};

        if (params.RoleArn) {
          params.RoleSessionName = params.RoleSessionName || 'temporary-credentials';
        }

        if (params.SerialNumber) {
          if (!options.tokenCodeFn || typeof options.tokenCodeFn !== 'function') {
            throw new AWS.util.error(new Error('tokenCodeFn must be a function when params.SerialNumber is given'), {
              code: this.errorCode
            });
          } else {
            this.tokenCodeFn = options.tokenCodeFn;
          }
        }

        var config = AWS.util.merge({
          params: params,
          credentials: options.masterCredentials || AWS.config.credentials
        }, options.stsConfig || {});
        this.service = new STS(config);
      },

      /**
       * Refreshes credentials using {AWS.STS.assumeRole} or
       * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed
       * to the credentials {constructor}.
       *
       * @callback callback function(err)
       *   Called when the STS service responds (or fails). When
       *   this callback is called with no error, it means that the credentials
       *   information has been loaded into the object (as the `accessKeyId`,
       *   `secretAccessKey`, and `sessionToken` properties).
       *   @param err [Error] if an error occurred, this value will be filled
       * @see AWS.Credentials.get
       */
      refresh: function refresh(callback) {
        this.coalesceRefresh(callback || AWS.util.fn.callback);
      },

      /**
       * @api private
       * @param callback
       */
      load: function load(callback) {
        var self = this;
        var operation = self.service.config.params.RoleArn ? 'assumeRole' : 'getSessionToken';
        this.getTokenCode(function (err, tokenCode) {
          var params = {};

          if (err) {
            callback(err);
            return;
          }

          if (tokenCode) {
            params.TokenCode = tokenCode;
          }

          self.service[operation](params, function (err, data) {
            if (!err) {
              self.service.credentialsFrom(data, self);
            }

            callback(err);
          });
        });
      },

      /**
       * @api private
       */
      getTokenCode: function getTokenCode(callback) {
        var self = this;

        if (this.tokenCodeFn) {
          this.tokenCodeFn(this.service.config.params.SerialNumber, function (err, token) {
            if (err) {
              var message = err;

              if (err instanceof Error) {
                message = err.message;
              }

              callback(AWS.util.error(new Error('Error fetching MFA token: ' + message), {
                code: self.errorCode
              }));
              return;
            }

            callback(null, token);
          });
        } else {
          callback(null);
        }
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js":
  /*!******************************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js ***!
    \******************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibCredentialsCognito_identity_credentialsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var CognitoIdentity = __webpack_require__(
    /*! ../../clients/cognitoidentity */
    "./node_modules/aws-sdk/clients/cognitoidentity.js");

    var STS = __webpack_require__(
    /*! ../../clients/sts */
    "./node_modules/aws-sdk/clients/sts.js");
    /**
     * Represents credentials retrieved from STS Web Identity Federation using
     * the Amazon Cognito Identity service.
     *
     * By default this provider gets credentials using the
     * {AWS.CognitoIdentity.getCredentialsForIdentity} service operation, which
     * requires either an `IdentityId` or an `IdentityPoolId` (Amazon Cognito
     * Identity Pool ID), which is used to call {AWS.CognitoIdentity.getId} to
     * obtain an `IdentityId`. If the identity or identity pool is not configured in
     * the Amazon Cognito Console to use IAM roles with the appropriate permissions,
     * then additionally a `RoleArn` is required containing the ARN of the IAM trust
     * policy for the Amazon Cognito role that the user will log into. If a `RoleArn`
     * is provided, then this provider gets credentials using the
     * {AWS.STS.assumeRoleWithWebIdentity} service operation, after first getting an
     * Open ID token from {AWS.CognitoIdentity.getOpenIdToken}.
     *
     * In addition, if this credential provider is used to provide authenticated
     * login, the `Logins` map may be set to the tokens provided by the respective
     * identity providers. See {constructor} for an example on creating a credentials
     * object with proper property values.
     *
     * ## Refreshing Credentials from Identity Service
     *
     * In addition to AWS credentials expiring after a given amount of time, the
     * login token from the identity provider will also expire. Once this token
     * expires, it will not be usable to refresh AWS credentials, and another
     * token will be needed. The SDK does not manage refreshing of the token value,
     * but this can be done through a "refresh token" supported by most identity
     * providers. Consult the documentation for the identity provider for refreshing
     * tokens. Once the refreshed token is acquired, you should make sure to update
     * this new token in the credentials object's {params} property. The following
     * code will update the WebIdentityToken, assuming you have retrieved an updated
     * token from the identity provider:
     *
     * ```javascript
     * AWS.config.credentials.params.Logins['graph.facebook.com'] = updatedToken;
     * ```
     *
     * Future calls to `credentials.refresh()` will now use the new token.
     *
     * @!attribute params
     *   @return [map] the map of params passed to
     *     {AWS.CognitoIdentity.getId},
     *     {AWS.CognitoIdentity.getOpenIdToken}, and
     *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the
     *     `params.WebIdentityToken` property.
     * @!attribute data
     *   @return [map] the raw data response from the call to
     *     {AWS.CognitoIdentity.getCredentialsForIdentity}, or
     *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get
     *     access to other properties from the response.
     * @!attribute identityId
     *   @return [String] the Cognito ID returned by the last call to
     *     {AWS.CognitoIdentity.getOpenIdToken}. This ID represents the actual
     *     final resolved identity ID from Amazon Cognito.
     */


    AWS.CognitoIdentityCredentials = AWS.util.inherit(AWS.Credentials, {
      /**
       * @api private
       */
      localStorageKey: {
        id: 'aws.cognito.identity-id.',
        providers: 'aws.cognito.identity-providers.'
      },

      /**
       * Creates a new credentials object.
       * @example Creating a new credentials object
       *   AWS.config.credentials = new AWS.CognitoIdentityCredentials({
       *
       *     // either IdentityPoolId or IdentityId is required
       *     // See the IdentityPoolId param for AWS.CognitoIdentity.getID (linked below)
       *     // See the IdentityId param for AWS.CognitoIdentity.getCredentialsForIdentity
       *     // or AWS.CognitoIdentity.getOpenIdToken (linked below)
       *     IdentityPoolId: 'us-east-1:1699ebc0-7900-4099-b910-2df94f52a030',
       *     IdentityId: 'us-east-1:128d0a74-c82f-4553-916d-90053e4a8b0f'
       *
       *     // optional, only necessary when the identity pool is not configured
       *     // to use IAM roles in the Amazon Cognito Console
       *     // See the RoleArn param for AWS.STS.assumeRoleWithWebIdentity (linked below)
       *     RoleArn: 'arn:aws:iam::1234567890:role/MYAPP-CognitoIdentity',
       *
       *     // optional tokens, used for authenticated login
       *     // See the Logins param for AWS.CognitoIdentity.getID (linked below)
       *     Logins: {
       *       'graph.facebook.com': 'FBTOKEN',
       *       'www.amazon.com': 'AMAZONTOKEN',
       *       'accounts.google.com': 'GOOGLETOKEN',
       *       'api.twitter.com': 'TWITTERTOKEN',
       *       'www.digits.com': 'DIGITSTOKEN'
       *     },
       *
       *     // optional name, defaults to web-identity
       *     // See the RoleSessionName param for AWS.STS.assumeRoleWithWebIdentity (linked below)
       *     RoleSessionName: 'web',
       *
       *     // optional, only necessary when application runs in a browser
       *     // and multiple users are signed in at once, used for caching
       *     LoginId: 'example@gmail.com'
       *
       *   }, {
       *      // optionally provide configuration to apply to the underlying service clients
       *      // if configuration is not provided, then configuration will be pulled from AWS.config
       *
       *      // region should match the region your identity pool is located in
       *      region: 'us-east-1',
       *
       *      // specify timeout options
       *      httpOptions: {
       *        timeout: 100
       *      }
       *   });
       * @see AWS.CognitoIdentity.getId
       * @see AWS.CognitoIdentity.getCredentialsForIdentity
       * @see AWS.STS.assumeRoleWithWebIdentity
       * @see AWS.CognitoIdentity.getOpenIdToken
       * @see AWS.Config
       * @note If a region is not provided in the global AWS.config, or
       *   specified in the `clientConfig` to the CognitoIdentityCredentials
       *   constructor, you may encounter a 'Missing credentials in config' error
       *   when calling making a service call.
       */
      constructor: function CognitoIdentityCredentials(params, clientConfig) {
        AWS.Credentials.call(this);
        this.expired = true;
        this.params = params;
        this.data = null;
        this._identityId = null;
        this._clientConfig = AWS.util.copy(clientConfig || {});
        this.loadCachedId();
        var self = this;
        Object.defineProperty(this, 'identityId', {
          get: function get() {
            self.loadCachedId();
            return self._identityId || self.params.IdentityId;
          },
          set: function set(identityId) {
            self._identityId = identityId;
          }
        });
      },

      /**
       * Refreshes credentials using {AWS.CognitoIdentity.getCredentialsForIdentity},
       * or {AWS.STS.assumeRoleWithWebIdentity}.
       *
       * @callback callback function(err)
       *   Called when the STS service responds (or fails). When
       *   this callback is called with no error, it means that the credentials
       *   information has been loaded into the object (as the `accessKeyId`,
       *   `secretAccessKey`, and `sessionToken` properties).
       *   @param err [Error] if an error occurred, this value will be filled
       * @see AWS.Credentials.get
       */
      refresh: function refresh(callback) {
        this.coalesceRefresh(callback || AWS.util.fn.callback);
      },

      /**
       * @api private
       * @param callback
       */
      load: function load(callback) {
        var self = this;
        self.createClients();
        self.data = null;
        self._identityId = null;
        self.getId(function (err) {
          if (!err) {
            if (!self.params.RoleArn) {
              self.getCredentialsForIdentity(callback);
            } else {
              self.getCredentialsFromSTS(callback);
            }
          } else {
            self.clearIdOnNotAuthorized(err);
            callback(err);
          }
        });
      },

      /**
       * Clears the cached Cognito ID associated with the currently configured
       * identity pool ID. Use this to manually invalidate your cache if
       * the identity pool ID was deleted.
       */
      clearCachedId: function clearCache() {
        this._identityId = null;
        delete this.params.IdentityId;
        var poolId = this.params.IdentityPoolId;
        var loginId = this.params.LoginId || '';
        delete this.storage[this.localStorageKey.id + poolId + loginId];
        delete this.storage[this.localStorageKey.providers + poolId + loginId];
      },

      /**
       * @api private
       */
      clearIdOnNotAuthorized: function clearIdOnNotAuthorized(err) {
        var self = this;

        if (err.code == 'NotAuthorizedException') {
          self.clearCachedId();
        }
      },

      /**
       * Retrieves a Cognito ID, loading from cache if it was already retrieved
       * on this device.
       *
       * @callback callback function(err, identityId)
       *   @param err [Error, null] an error object if the call failed or null if
       *     it succeeded.
       *   @param identityId [String, null] if successful, the callback will return
       *     the Cognito ID.
       * @note If not loaded explicitly, the Cognito ID is loaded and stored in
       *   localStorage in the browser environment of a device.
       * @api private
       */
      getId: function getId(callback) {
        var self = this;

        if (typeof self.params.IdentityId === 'string') {
          return callback(null, self.params.IdentityId);
        }

        self.cognito.getId(function (err, data) {
          if (!err && data.IdentityId) {
            self.params.IdentityId = data.IdentityId;
            callback(null, data.IdentityId);
          } else {
            callback(err);
          }
        });
      },

      /**
       * @api private
       */
      loadCredentials: function loadCredentials(data, credentials) {
        if (!data || !credentials) return;
        credentials.expired = false;
        credentials.accessKeyId = data.Credentials.AccessKeyId;
        credentials.secretAccessKey = data.Credentials.SecretKey;
        credentials.sessionToken = data.Credentials.SessionToken;
        credentials.expireTime = data.Credentials.Expiration;
      },

      /**
       * @api private
       */
      getCredentialsForIdentity: function getCredentialsForIdentity(callback) {
        var self = this;
        self.cognito.getCredentialsForIdentity(function (err, data) {
          if (!err) {
            self.cacheId(data);
            self.data = data;
            self.loadCredentials(self.data, self);
          } else {
            self.clearIdOnNotAuthorized(err);
          }

          callback(err);
        });
      },

      /**
       * @api private
       */
      getCredentialsFromSTS: function getCredentialsFromSTS(callback) {
        var self = this;
        self.cognito.getOpenIdToken(function (err, data) {
          if (!err) {
            self.cacheId(data);
            self.params.WebIdentityToken = data.Token;
            self.webIdentityCredentials.refresh(function (webErr) {
              if (!webErr) {
                self.data = self.webIdentityCredentials.data;
                self.sts.credentialsFrom(self.data, self);
              }

              callback(webErr);
            });
          } else {
            self.clearIdOnNotAuthorized(err);
            callback(err);
          }
        });
      },

      /**
       * @api private
       */
      loadCachedId: function loadCachedId() {
        var self = this; // in the browser we source default IdentityId from localStorage

        if (AWS.util.isBrowser() && !self.params.IdentityId) {
          var id = self.getStorage('id');

          if (id && self.params.Logins) {
            var actualProviders = Object.keys(self.params.Logins);
            var cachedProviders = (self.getStorage('providers') || '').split(','); // only load ID if at least one provider used this ID before

            var intersect = cachedProviders.filter(function (n) {
              return actualProviders.indexOf(n) !== -1;
            });

            if (intersect.length !== 0) {
              self.params.IdentityId = id;
            }
          } else if (id) {
            self.params.IdentityId = id;
          }
        }
      },

      /**
       * @api private
       */
      createClients: function createClients() {
        var clientConfig = this._clientConfig;
        this.webIdentityCredentials = this.webIdentityCredentials || new AWS.WebIdentityCredentials(this.params, clientConfig);

        if (!this.cognito) {
          var cognitoConfig = AWS.util.merge({}, clientConfig);
          cognitoConfig.params = this.params;
          this.cognito = new CognitoIdentity(cognitoConfig);
        }

        this.sts = this.sts || new STS(clientConfig);
      },

      /**
       * @api private
       */
      cacheId: function cacheId(data) {
        this._identityId = data.IdentityId;
        this.params.IdentityId = this._identityId; // cache this IdentityId in browser localStorage if possible

        if (AWS.util.isBrowser()) {
          this.setStorage('id', data.IdentityId);

          if (this.params.Logins) {
            this.setStorage('providers', Object.keys(this.params.Logins).join(','));
          }
        }
      },

      /**
       * @api private
       */
      getStorage: function getStorage(key) {
        return this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')];
      },

      /**
       * @api private
       */
      setStorage: function setStorage(key, val) {
        try {
          this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')] = val;
        } catch (_) {}
      },

      /**
       * @api private
       */
      storage: function () {
        try {
          var storage = AWS.util.isBrowser() && window.localStorage !== null && typeof window.localStorage === 'object' ? window.localStorage : {}; // Test set/remove which would throw an error in Safari's private browsing

          storage['aws.test-storage'] = 'foobar';
          delete storage['aws.test-storage'];
          return storage;
        } catch (_) {
          return {};
        }
      }()
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/credentials/credential_provider_chain.js":
  /*!***************************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/credentials/credential_provider_chain.js ***!
    \***************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibCredentialsCredential_provider_chainJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");
    /**
     * Creates a credential provider chain that searches for AWS credentials
     * in a list of credential providers specified by the {providers} property.
     *
     * By default, the chain will use the {defaultProviders} to resolve credentials.
     * These providers will look in the environment using the
     * {AWS.EnvironmentCredentials} class with the 'AWS' and 'AMAZON' prefixes.
     *
     * ## Setting Providers
     *
     * Each provider in the {providers} list should be a function that returns
     * a {AWS.Credentials} object, or a hardcoded credentials object. The function
     * form allows for delayed execution of the credential construction.
     *
     * ## Resolving Credentials from a Chain
     *
     * Call {resolve} to return the first valid credential object that can be
     * loaded by the provider chain.
     *
     * For example, to resolve a chain with a custom provider that checks a file
     * on disk after the set of {defaultProviders}:
     *
     * ```javascript
     * var diskProvider = new AWS.FileSystemCredentials('./creds.json');
     * var chain = new AWS.CredentialProviderChain();
     * chain.providers.push(diskProvider);
     * chain.resolve();
     * ```
     *
     * The above code will return the `diskProvider` object if the
     * file contains credentials and the `defaultProviders` do not contain
     * any credential settings.
     *
     * @!attribute providers
     *   @return [Array<AWS.Credentials, Function>]
     *     a list of credentials objects or functions that return credentials
     *     objects. If the provider is a function, the function will be
     *     executed lazily when the provider needs to be checked for valid
     *     credentials. By default, this object will be set to the
     *     {defaultProviders}.
     *   @see defaultProviders
     */


    AWS.CredentialProviderChain = AWS.util.inherit(AWS.Credentials, {
      /**
       * Creates a new CredentialProviderChain with a default set of providers
       * specified by {defaultProviders}.
       */
      constructor: function CredentialProviderChain(providers) {
        if (providers) {
          this.providers = providers;
        } else {
          this.providers = AWS.CredentialProviderChain.defaultProviders.slice(0);
        }

        this.resolveCallbacks = [];
      },

      /**
       * @!method  resolvePromise()
       *   Returns a 'thenable' promise.
       *   Resolves the provider chain by searching for the first set of
       *   credentials in {providers}.
       *
       *   Two callbacks can be provided to the `then` method on the returned promise.
       *   The first callback will be called if the promise is fulfilled, and the second
       *   callback will be called if the promise is rejected.
       *   @callback fulfilledCallback function(credentials)
       *     Called if the promise is fulfilled and the provider resolves the chain
       *     to a credentials object
       *     @param credentials [AWS.Credentials] the credentials object resolved
       *       by the provider chain.
       *   @callback rejectedCallback function(error)
       *     Called if the promise is rejected.
       *     @param err [Error] the error object returned if no credentials are found.
       *   @return [Promise] A promise that represents the state of the `resolve` method call.
       *   @example Calling the `resolvePromise` method.
       *     var promise = chain.resolvePromise();
       *     promise.then(function(credentials) { ... }, function(err) { ... });
       */

      /**
       * Resolves the provider chain by searching for the first set of
       * credentials in {providers}.
       *
       * @callback callback function(err, credentials)
       *   Called when the provider resolves the chain to a credentials object
       *   or null if no credentials can be found.
       *
       *   @param err [Error] the error object returned if no credentials are
       *     found.
       *   @param credentials [AWS.Credentials] the credentials object resolved
       *     by the provider chain.
       * @return [AWS.CredentialProviderChain] the provider, for chaining.
       */
      resolve: function resolve(callback) {
        var self = this;

        if (self.providers.length === 0) {
          callback(new Error('No providers'));
          return self;
        }

        if (self.resolveCallbacks.push(callback) === 1) {
          var resolveNext = function resolveNext(err, creds) {
            if (!err && creds || index === providers.length) {
              AWS.util.arrayEach(self.resolveCallbacks, function (callback) {
                callback(err, creds);
              });
              self.resolveCallbacks.length = 0;
              return;
            }

            var provider = providers[index++];

            if (typeof provider === 'function') {
              creds = provider.call();
            } else {
              creds = provider;
            }

            if (creds.get) {
              creds.get(function (getErr) {
                resolveNext(getErr, getErr ? null : creds);
              });
            } else {
              resolveNext(null, creds);
            }
          };

          var index = 0;
          var providers = self.providers.slice(0);
          resolveNext();
        }

        return self;
      }
    });
    /**
     * The default set of providers used by a vanilla CredentialProviderChain.
     *
     * In the browser:
     *
     * ```javascript
     * AWS.CredentialProviderChain.defaultProviders = []
     * ```
     *
     * In Node.js:
     *
     * ```javascript
     * AWS.CredentialProviderChain.defaultProviders = [
     *   function () { return new AWS.EnvironmentCredentials('AWS'); },
     *   function () { return new AWS.EnvironmentCredentials('AMAZON'); },
     *   function () { return new AWS.SharedIniFileCredentials(); },
     *   function () { return new AWS.ECSCredentials(); },
     *   function () { return new AWS.ProcessCredentials(); },
     *   function () { return new AWS.TokenFileWebIdentityCredentials(); },
     *   function () { return new AWS.EC2MetadataCredentials() }
     * ]
     * ```
     */

    AWS.CredentialProviderChain.defaultProviders = [];
    /**
     * @api private
     */

    AWS.CredentialProviderChain.addPromisesToClass = function addPromisesToClass(PromiseDependency) {
      this.prototype.resolvePromise = AWS.util.promisifyMethod('resolve', PromiseDependency);
    };
    /**
     * @api private
     */


    AWS.CredentialProviderChain.deletePromisesFromClass = function deletePromisesFromClass() {
      delete this.prototype.resolvePromise;
    };

    AWS.util.addPromises(AWS.CredentialProviderChain);
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/credentials/saml_credentials.js":
  /*!******************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/credentials/saml_credentials.js ***!
    \******************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibCredentialsSaml_credentialsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var STS = __webpack_require__(
    /*! ../../clients/sts */
    "./node_modules/aws-sdk/clients/sts.js");
    /**
     * Represents credentials retrieved from STS SAML support.
     *
     * By default this provider gets credentials using the
     * {AWS.STS.assumeRoleWithSAML} service operation. This operation
     * requires a `RoleArn` containing the ARN of the IAM trust policy for the
     * application for which credentials will be given, as well as a `PrincipalArn`
     * representing the ARN for the SAML identity provider. In addition, the
     * `SAMLAssertion` must be set to the token provided by the identity
     * provider. See {constructor} for an example on creating a credentials
     * object with proper `RoleArn`, `PrincipalArn`, and `SAMLAssertion` values.
     *
     * ## Refreshing Credentials from Identity Service
     *
     * In addition to AWS credentials expiring after a given amount of time, the
     * login token from the identity provider will also expire. Once this token
     * expires, it will not be usable to refresh AWS credentials, and another
     * token will be needed. The SDK does not manage refreshing of the token value,
     * but this can be done through a "refresh token" supported by most identity
     * providers. Consult the documentation for the identity provider for refreshing
     * tokens. Once the refreshed token is acquired, you should make sure to update
     * this new token in the credentials object's {params} property. The following
     * code will update the SAMLAssertion, assuming you have retrieved an updated
     * token from the identity provider:
     *
     * ```javascript
     * AWS.config.credentials.params.SAMLAssertion = updatedToken;
     * ```
     *
     * Future calls to `credentials.refresh()` will now use the new token.
     *
     * @!attribute params
     *   @return [map] the map of params passed to
     *     {AWS.STS.assumeRoleWithSAML}. To update the token, set the
     *     `params.SAMLAssertion` property.
     */


    AWS.SAMLCredentials = AWS.util.inherit(AWS.Credentials, {
      /**
       * Creates a new credentials object.
       * @param (see AWS.STS.assumeRoleWithSAML)
       * @example Creating a new credentials object
       *   AWS.config.credentials = new AWS.SAMLCredentials({
       *     RoleArn: 'arn:aws:iam::1234567890:role/SAMLRole',
       *     PrincipalArn: 'arn:aws:iam::1234567890:role/SAMLPrincipal',
       *     SAMLAssertion: 'base64-token', // base64-encoded token from IdP
       *   });
       * @see AWS.STS.assumeRoleWithSAML
       */
      constructor: function SAMLCredentials(params) {
        AWS.Credentials.call(this);
        this.expired = true;
        this.params = params;
      },

      /**
       * Refreshes credentials using {AWS.STS.assumeRoleWithSAML}
       *
       * @callback callback function(err)
       *   Called when the STS service responds (or fails). When
       *   this callback is called with no error, it means that the credentials
       *   information has been loaded into the object (as the `accessKeyId`,
       *   `secretAccessKey`, and `sessionToken` properties).
       *   @param err [Error] if an error occurred, this value will be filled
       * @see get
       */
      refresh: function refresh(callback) {
        this.coalesceRefresh(callback || AWS.util.fn.callback);
      },

      /**
       * @api private
       */
      load: function load(callback) {
        var self = this;
        self.createClients();
        self.service.assumeRoleWithSAML(function (err, data) {
          if (!err) {
            self.service.credentialsFrom(data, self);
          }

          callback(err);
        });
      },

      /**
       * @api private
       */
      createClients: function createClients() {
        this.service = this.service || new STS({
          params: this.params
        });
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/credentials/temporary_credentials.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/credentials/temporary_credentials.js ***!
    \***********************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibCredentialsTemporary_credentialsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var STS = __webpack_require__(
    /*! ../../clients/sts */
    "./node_modules/aws-sdk/clients/sts.js");
    /**
     * Represents temporary credentials retrieved from {AWS.STS}. Without any
     * extra parameters, credentials will be fetched from the
     * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the
     * {AWS.STS.assumeRole} operation will be used to fetch credentials for the
     * role instead.
     *
     * @note AWS.TemporaryCredentials is deprecated, but remains available for
     *   backwards compatibility. {AWS.ChainableTemporaryCredentials} is the
     *   preferred class for temporary credentials.
     *
     * To setup temporary credentials, configure a set of master credentials
     * using the standard credentials providers (environment, EC2 instance metadata,
     * or from the filesystem), then set the global credentials to a new
     * temporary credentials object:
     *
     * ```javascript
     * // Note that environment credentials are loaded by default,
     * // the following line is shown for clarity:
     * AWS.config.credentials = new AWS.EnvironmentCredentials('AWS');
     *
     * // Now set temporary credentials seeded from the master credentials
     * AWS.config.credentials = new AWS.TemporaryCredentials();
     *
     * // subsequent requests will now use temporary credentials from AWS STS.
     * new AWS.S3().listBucket(function(err, data) { ... });
     * ```
     *
     * @!attribute masterCredentials
     *   @return [AWS.Credentials] the master (non-temporary) credentials used to
     *     get and refresh temporary credentials from AWS STS.
     * @note (see constructor)
     */


    AWS.TemporaryCredentials = AWS.util.inherit(AWS.Credentials, {
      /**
       * Creates a new temporary credentials object.
       *
       * @note In order to create temporary credentials, you first need to have
       *   "master" credentials configured in {AWS.Config.credentials}. These
       *   master credentials are necessary to retrieve the temporary credentials,
       *   as well as refresh the credentials when they expire.
       * @param params [map] a map of options that are passed to the
       *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.
       *   If a `RoleArn` parameter is passed in, credentials will be based on the
       *   IAM role.
       * @param masterCredentials [AWS.Credentials] the master (non-temporary) credentials
       *  used to get and refresh temporary credentials from AWS STS.
       * @example Creating a new credentials object for generic temporary credentials
       *   AWS.config.credentials = new AWS.TemporaryCredentials();
       * @example Creating a new credentials object for an IAM role
       *   AWS.config.credentials = new AWS.TemporaryCredentials({
       *     RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials',
       *   });
       * @see AWS.STS.assumeRole
       * @see AWS.STS.getSessionToken
       */
      constructor: function TemporaryCredentials(params, masterCredentials) {
        AWS.Credentials.call(this);
        this.loadMasterCredentials(masterCredentials);
        this.expired = true;
        this.params = params || {};

        if (this.params.RoleArn) {
          this.params.RoleSessionName = this.params.RoleSessionName || 'temporary-credentials';
        }
      },

      /**
       * Refreshes credentials using {AWS.STS.assumeRole} or
       * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed
       * to the credentials {constructor}.
       *
       * @callback callback function(err)
       *   Called when the STS service responds (or fails). When
       *   this callback is called with no error, it means that the credentials
       *   information has been loaded into the object (as the `accessKeyId`,
       *   `secretAccessKey`, and `sessionToken` properties).
       *   @param err [Error] if an error occurred, this value will be filled
       * @see get
       */
      refresh: function refresh(callback) {
        this.coalesceRefresh(callback || AWS.util.fn.callback);
      },

      /**
       * @api private
       */
      load: function load(callback) {
        var self = this;
        self.createClients();
        self.masterCredentials.get(function () {
          self.service.config.credentials = self.masterCredentials;
          var operation = self.params.RoleArn ? self.service.assumeRole : self.service.getSessionToken;
          operation.call(self.service, function (err, data) {
            if (!err) {
              self.service.credentialsFrom(data, self);
            }

            callback(err);
          });
        });
      },

      /**
       * @api private
       */
      loadMasterCredentials: function loadMasterCredentials(masterCredentials) {
        this.masterCredentials = masterCredentials || AWS.config.credentials;

        while (this.masterCredentials.masterCredentials) {
          this.masterCredentials = this.masterCredentials.masterCredentials;
        }

        if (typeof this.masterCredentials.get !== 'function') {
          this.masterCredentials = new AWS.Credentials(this.masterCredentials);
        }
      },

      /**
       * @api private
       */
      createClients: function createClients() {
        this.service = this.service || new STS({
          params: this.params
        });
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/credentials/web_identity_credentials.js":
  /*!**************************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/credentials/web_identity_credentials.js ***!
    \**************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibCredentialsWeb_identity_credentialsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var STS = __webpack_require__(
    /*! ../../clients/sts */
    "./node_modules/aws-sdk/clients/sts.js");
    /**
     * Represents credentials retrieved from STS Web Identity Federation support.
     *
     * By default this provider gets credentials using the
     * {AWS.STS.assumeRoleWithWebIdentity} service operation. This operation
     * requires a `RoleArn` containing the ARN of the IAM trust policy for the
     * application for which credentials will be given. In addition, the
     * `WebIdentityToken` must be set to the token provided by the identity
     * provider. See {constructor} for an example on creating a credentials
     * object with proper `RoleArn` and `WebIdentityToken` values.
     *
     * ## Refreshing Credentials from Identity Service
     *
     * In addition to AWS credentials expiring after a given amount of time, the
     * login token from the identity provider will also expire. Once this token
     * expires, it will not be usable to refresh AWS credentials, and another
     * token will be needed. The SDK does not manage refreshing of the token value,
     * but this can be done through a "refresh token" supported by most identity
     * providers. Consult the documentation for the identity provider for refreshing
     * tokens. Once the refreshed token is acquired, you should make sure to update
     * this new token in the credentials object's {params} property. The following
     * code will update the WebIdentityToken, assuming you have retrieved an updated
     * token from the identity provider:
     *
     * ```javascript
     * AWS.config.credentials.params.WebIdentityToken = updatedToken;
     * ```
     *
     * Future calls to `credentials.refresh()` will now use the new token.
     *
     * @!attribute params
     *   @return [map] the map of params passed to
     *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the
     *     `params.WebIdentityToken` property.
     * @!attribute data
     *   @return [map] the raw data response from the call to
     *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get
     *     access to other properties from the response.
     */


    AWS.WebIdentityCredentials = AWS.util.inherit(AWS.Credentials, {
      /**
       * Creates a new credentials object.
       * @param (see AWS.STS.assumeRoleWithWebIdentity)
       * @example Creating a new credentials object
       *   AWS.config.credentials = new AWS.WebIdentityCredentials({
       *     RoleArn: 'arn:aws:iam::1234567890:role/WebIdentity',
       *     WebIdentityToken: 'ABCDEFGHIJKLMNOP', // token from identity service
       *     RoleSessionName: 'web' // optional name, defaults to web-identity
       *   }, {
       *     // optionally provide configuration to apply to the underlying AWS.STS service client
       *     // if configuration is not provided, then configuration will be pulled from AWS.config
       *
       *     // specify timeout options
       *     httpOptions: {
       *       timeout: 100
       *     }
       *   });
       * @see AWS.STS.assumeRoleWithWebIdentity
       * @see AWS.Config
       */
      constructor: function WebIdentityCredentials(params, clientConfig) {
        AWS.Credentials.call(this);
        this.expired = true;
        this.params = params;
        this.params.RoleSessionName = this.params.RoleSessionName || 'web-identity';
        this.data = null;
        this._clientConfig = AWS.util.copy(clientConfig || {});
      },

      /**
       * Refreshes credentials using {AWS.STS.assumeRoleWithWebIdentity}
       *
       * @callback callback function(err)
       *   Called when the STS service responds (or fails). When
       *   this callback is called with no error, it means that the credentials
       *   information has been loaded into the object (as the `accessKeyId`,
       *   `secretAccessKey`, and `sessionToken` properties).
       *   @param err [Error] if an error occurred, this value will be filled
       * @see get
       */
      refresh: function refresh(callback) {
        this.coalesceRefresh(callback || AWS.util.fn.callback);
      },

      /**
       * @api private
       */
      load: function load(callback) {
        var self = this;
        self.createClients();
        self.service.assumeRoleWithWebIdentity(function (err, data) {
          self.data = null;

          if (!err) {
            self.data = data;
            self.service.credentialsFrom(data, self);
          }

          callback(err);
        });
      },

      /**
       * @api private
       */
      createClients: function createClients() {
        if (!this.service) {
          var stsConfig = AWS.util.merge({}, this._clientConfig);
          stsConfig.params = this.params;
          this.service = new STS(stsConfig);
        }
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/discover_endpoint.js":
  /*!*******************************************************!*\
    !*** ./node_modules/aws-sdk/lib/discover_endpoint.js ***!
    \*******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibDiscover_endpointJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");

    var util = __webpack_require__(
    /*! ./util */
    "./node_modules/aws-sdk/lib/util.js");

    var endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];
    /**
     * Generate key (except resources and operation part) to index the endpoints in the cache
     * If input shape has endpointdiscoveryid trait then use
     *   accessKey + operation + resources + region + service as cache key
     * If input shape doesn't have endpointdiscoveryid trait then use
     *   accessKey + region + service as cache key
     * @return [map<String,String>] object with keys to index endpoints.
     * @api private
     */

    function getCacheKey(request) {
      var service = request.service;
      var api = service.api || {};
      var operations = api.operations;
      var identifiers = {};

      if (service.config.region) {
        identifiers.region = service.config.region;
      }

      if (api.serviceId) {
        identifiers.serviceId = api.serviceId;
      }

      if (service.config.credentials.accessKeyId) {
        identifiers.accessKeyId = service.config.credentials.accessKeyId;
      }

      return identifiers;
    }
    /**
     * Recursive helper for marshallCustomIdentifiers().
     * Looks for required string input members that have 'endpointdiscoveryid' trait.
     * @api private
     */


    function marshallCustomIdentifiersHelper(result, params, shape) {
      if (!shape || params === undefined || params === null) return;

      if (shape.type === 'structure' && shape.required && shape.required.length > 0) {
        util.arrayEach(shape.required, function (name) {
          var memberShape = shape.members[name];

          if (memberShape.endpointDiscoveryId === true) {
            var locationName = memberShape.isLocationName ? memberShape.name : name;
            result[locationName] = String(params[name]);
          } else {
            marshallCustomIdentifiersHelper(result, params[name], memberShape);
          }
        });
      }
    }
    /**
     * Get custom identifiers for cache key.
     * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.
     * @param [object] request object
     * @param [object] input shape of the given operation's api
     * @api private
     */


    function marshallCustomIdentifiers(request, shape) {
      var identifiers = {};
      marshallCustomIdentifiersHelper(identifiers, request.params, shape);
      return identifiers;
    }
    /**
     * Call endpoint discovery operation when it's optional.
     * When endpoint is available in cache then use the cached endpoints. If endpoints
     * are unavailable then use regional endpoints and call endpoint discovery operation
     * asynchronously. This is turned off by default.
     * @param [object] request object
     * @api private
     */


    function optionalDiscoverEndpoint(request) {
      var service = request.service;
      var api = service.api;
      var operationModel = api.operations ? api.operations[request.operation] : undefined;
      var inputShape = operationModel ? operationModel.input : undefined;
      var identifiers = marshallCustomIdentifiers(request, inputShape);
      var cacheKey = getCacheKey(request);

      if (Object.keys(identifiers).length > 0) {
        cacheKey = util.update(cacheKey, identifiers);
        if (operationModel) cacheKey.operation = operationModel.name;
      }

      var endpoints = AWS.endpointCache.get(cacheKey);

      if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {
        //endpoint operation is being made but response not yet received
        //or endpoint operation just failed in 1 minute
        return;
      } else if (endpoints && endpoints.length > 0) {
        //found endpoint record from cache
        request.httpRequest.updateEndpoint(endpoints[0].Address);
      } else {
        //endpoint record not in cache or outdated. make discovery operation
        var endpointRequest = service.makeRequest(api.endpointOperation, {
          Operation: operationModel.name,
          Identifiers: identifiers
        });
        addApiVersionHeader(endpointRequest);
        endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);
        endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK); //put in a placeholder for endpoints already requested, prevent
        //too much in-flight calls

        AWS.endpointCache.put(cacheKey, [{
          Address: '',
          CachePeriodInMinutes: 1
        }]);
        endpointRequest.send(function (err, data) {
          if (data && data.Endpoints) {
            AWS.endpointCache.put(cacheKey, data.Endpoints);
          } else if (err) {
            AWS.endpointCache.put(cacheKey, [{
              Address: '',
              CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute

            }]);
          }
        });
      }
    }

    var requestQueue = {};
    /**
     * Call endpoint discovery operation when it's required.
     * When endpoint is available in cache then use cached ones. If endpoints are
     * unavailable then SDK should call endpoint operation then use returned new
     * endpoint for the api call. SDK will automatically attempt to do endpoint
     * discovery. This is turned off by default
     * @param [object] request object
     * @api private
     */

    function requiredDiscoverEndpoint(request, done) {
      var service = request.service;
      var api = service.api;
      var operationModel = api.operations ? api.operations[request.operation] : undefined;
      var inputShape = operationModel ? operationModel.input : undefined;
      var identifiers = marshallCustomIdentifiers(request, inputShape);
      var cacheKey = getCacheKey(request);

      if (Object.keys(identifiers).length > 0) {
        cacheKey = util.update(cacheKey, identifiers);
        if (operationModel) cacheKey.operation = operationModel.name;
      }

      var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);
      var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys

      if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {
        //endpoint operation is being made but response not yet received
        //push request object to a pending queue
        if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];
        requestQueue[cacheKeyStr].push({
          request: request,
          callback: done
        });
        return;
      } else if (endpoints && endpoints.length > 0) {
        request.httpRequest.updateEndpoint(endpoints[0].Address);
        done();
      } else {
        var endpointRequest = service.makeRequest(api.endpointOperation, {
          Operation: operationModel.name,
          Identifiers: identifiers
        });
        endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);
        addApiVersionHeader(endpointRequest); //put in a placeholder for endpoints already requested, prevent
        //too much in-flight calls

        AWS.endpointCache.put(cacheKeyStr, [{
          Address: '',
          CachePeriodInMinutes: 60 //long-live cache

        }]);
        endpointRequest.send(function (err, data) {
          if (err) {
            request.response.error = util.error(err, {
              retryable: false
            });
            AWS.endpointCache.remove(cacheKey); //fail all the pending requests in batch

            if (requestQueue[cacheKeyStr]) {
              var pendingRequests = requestQueue[cacheKeyStr];
              util.arrayEach(pendingRequests, function (requestContext) {
                requestContext.request.response.error = util.error(err, {
                  retryable: false
                });
                requestContext.callback();
              });
              delete requestQueue[cacheKeyStr];
            }
          } else if (data) {
            AWS.endpointCache.put(cacheKeyStr, data.Endpoints);
            request.httpRequest.updateEndpoint(data.Endpoints[0].Address); //update the endpoint for all the pending requests in batch

            if (requestQueue[cacheKeyStr]) {
              var pendingRequests = requestQueue[cacheKeyStr];
              util.arrayEach(pendingRequests, function (requestContext) {
                requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);
                requestContext.callback();
              });
              delete requestQueue[cacheKeyStr];
            }
          }

          done();
        });
      }
    }
    /**
     * add api version header to endpoint operation
     * @api private
     */


    function addApiVersionHeader(endpointRequest) {
      var api = endpointRequest.service.api;
      var apiVersion = api.apiVersion;

      if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {
        endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;
      }
    }
    /**
     * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid
     * endpoint from cache.
     * @api private
     */


    function invalidateCachedEndpoints(response) {
      var error = response.error;
      var httpResponse = response.httpResponse;

      if (error && (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)) {
        var request = response.request;
        var operations = request.service.api.operations || {};
        var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;
        var identifiers = marshallCustomIdentifiers(request, inputShape);
        var cacheKey = getCacheKey(request);

        if (Object.keys(identifiers).length > 0) {
          cacheKey = util.update(cacheKey, identifiers);
          if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;
        }

        AWS.endpointCache.remove(cacheKey);
      }
    }
    /**
     * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.
     * @param [object] client Service client object.
     * @api private
     */


    function hasCustomEndpoint(client) {
      //if set endpoint is set for specific client, enable endpoint discovery will raise an error.
      if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {
        throw util.error(new Error(), {
          code: 'ConfigurationException',
          message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'
        });
      }

      ;
      var svcConfig = AWS.config[client.serviceIdentifier] || {};
      return Boolean(AWS.config.endpoint || svcConfig.endpoint || client._originalConfig && client._originalConfig.endpoint);
    }
    /**
     * @api private
     */


    function isFalsy(value) {
      return ['false', '0'].indexOf(value) >= 0;
    }
    /**
     * If endpoint discovery should perform for this request when no operation requires endpoint
     * discovery for the given service.
     * SDK performs config resolution in order like below:
     * 1. If set in client configuration.
     * 2. If set in env AWS_ENABLE_ENDPOINT_DISCOVERY.
     * 3. If set in shared ini config file with key 'endpoint_discovery_enabled'.
     * @param [object] request request object.
     * @returns [boolean|undefined] if endpoint discovery config is not set in any source, this
     *  function returns undefined
     * @api private
     */


    function resolveEndpointDiscoveryConfig(request) {
      var service = request.service || {};

      if (service.config.endpointDiscoveryEnabled !== undefined) {
        return service.config.endpointDiscoveryEnabled;
      } //shared ini file is only available in Node
      //not to check env in browser


      if (util.isBrowser()) return undefined; // If any of recognized endpoint discovery config env is set

      for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {
        var env = endpointDiscoveryEnabledEnvs[i];

        if (Object.prototype.hasOwnProperty.call(process.env, env)) {
          if (process.env[env] === '' || process.env[env] === undefined) {
            throw util.error(new Error(), {
              code: 'ConfigurationException',
              message: 'environmental variable ' + env + ' cannot be set to nothing'
            });
          }

          return !isFalsy(process.env[env]);
        }
      }

      var configFile = {};

      try {
        configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({
          isConfig: true,
          filename: process.env[AWS.util.sharedConfigFileEnv]
        }) : {};
      } catch (e) {}

      var sharedFileConfig = configFile[process.env.AWS_PROFILE || AWS.util.defaultProfile] || {};

      if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {
        if (sharedFileConfig.endpoint_discovery_enabled === undefined) {
          throw util.error(new Error(), {
            code: 'ConfigurationException',
            message: 'config file entry \'endpoint_discovery_enabled\' cannot be set to nothing'
          });
        }

        return !isFalsy(sharedFileConfig.endpoint_discovery_enabled);
      }

      return undefined;
    }
    /**
     * attach endpoint discovery logic to request object
     * @param [object] request
     * @api private
     */


    function discoverEndpoint(request, done) {
      var service = request.service || {};
      if (hasCustomEndpoint(service) || request.isPresigned()) return done();
      var operations = service.api.operations || {};
      var operationModel = operations[request.operation];
      var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';
      var isEnabled = resolveEndpointDiscoveryConfig(request);
      var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery;

      if (isEnabled || hasRequiredEndpointDiscovery) {
        // Once a customer enables endpoint discovery, the SDK should start appending
        // the string endpoint-discovery to the user-agent on all requests.
        request.httpRequest.appendToUserAgent('endpoint-discovery');
      }

      switch (isEndpointDiscoveryRequired) {
        case 'OPTIONAL':
          if (isEnabled || hasRequiredEndpointDiscovery) {
            // For a given service; if at least one operation requires endpoint discovery then the SDK must enable endpoint discovery
            // by default for all operations of that service, including operations where endpoint discovery is optional.
            optionalDiscoverEndpoint(request);
            request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);
          }

          done();
          break;

        case 'REQUIRED':
          if (isEnabled === false) {
            // For a given operation; if endpoint discovery is required and it has been disabled on the SDK client,
            // then the SDK must return a clear and actionable exception.
            request.response.error = util.error(new Error(), {
              code: 'ConfigurationException',
              message: 'Endpoint Discovery is disabled but ' + service.api.className + '.' + request.operation + '() requires it. Please check your configurations.'
            });
            done();
            break;
          }

          request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);
          requiredDiscoverEndpoint(request, done);
          break;

        case 'NULL':
        default:
          done();
          break;
      }
    }

    module.exports = {
      discoverEndpoint: discoverEndpoint,
      requiredDiscoverEndpoint: requiredDiscoverEndpoint,
      optionalDiscoverEndpoint: optionalDiscoverEndpoint,
      marshallCustomIdentifiers: marshallCustomIdentifiers,
      getCacheKey: getCacheKey,
      invalidateCachedEndpoint: invalidateCachedEndpoints
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js":
  /*!*******************************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js ***!
    \*******************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibEventStreamBufferedCreateEventStreamJs(module, exports, __webpack_require__) {
    var eventMessageChunker = __webpack_require__(
    /*! ../event-stream/event-message-chunker */
    "./node_modules/aws-sdk/lib/event-stream/event-message-chunker.js").eventMessageChunker;

    var parseEvent = __webpack_require__(
    /*! ./parse-event */
    "./node_modules/aws-sdk/lib/event-stream/parse-event.js").parseEvent;

    function createEventStream(body, parser, model) {
      var eventMessages = eventMessageChunker(body);
      var events = [];

      for (var i = 0; i < eventMessages.length; i++) {
        events.push(parseEvent(parser, eventMessages[i], model));
      }

      return events;
    }
    /**
     * @api private
     */


    module.exports = {
      createEventStream: createEventStream
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/event-stream/event-message-chunker.js":
  /*!************************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/event-stream/event-message-chunker.js ***!
    \************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibEventStreamEventMessageChunkerJs(module, exports) {
    /**
     * Takes in a buffer of event messages and splits them into individual messages.
     * @param {Buffer} buffer
     * @api private
     */
    function eventMessageChunker(buffer) {
      /** @type Buffer[] */
      var messages = [];
      var offset = 0;

      while (offset < buffer.length) {
        var totalLength = buffer.readInt32BE(offset); // create new buffer for individual message (shares memory with original)

        var message = buffer.slice(offset, totalLength + offset); // increment offset to it starts at the next message

        offset += totalLength;
        messages.push(message);
      }

      return messages;
    }
    /**
     * @api private
     */


    module.exports = {
      eventMessageChunker: eventMessageChunker
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/event-stream/int64.js":
  /*!********************************************************!*\
    !*** ./node_modules/aws-sdk/lib/event-stream/int64.js ***!
    \********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibEventStreamInt64Js(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js").util;

    var toBuffer = util.buffer.toBuffer;
    /**
     * A lossless representation of a signed, 64-bit integer. Instances of this
     * class may be used in arithmetic expressions as if they were numeric
     * primitives, but the binary representation will be preserved unchanged as the
     * `bytes` property of the object. The bytes should be encoded as big-endian,
     * two's complement integers.
     * @param {Buffer} bytes
     *
     * @api private
     */

    function Int64(bytes) {
      if (bytes.length !== 8) {
        throw new Error('Int64 buffers must be exactly 8 bytes');
      }

      if (!util.Buffer.isBuffer(bytes)) bytes = toBuffer(bytes);
      this.bytes = bytes;
    }
    /**
     * @param {number} number
     * @returns {Int64}
     *
     * @api private
     */


    Int64.fromNumber = function (number) {
      if (number > 9223372036854775807 || number < -9223372036854775808) {
        throw new Error(number + ' is too large (or, if negative, too small) to represent as an Int64');
      }

      var bytes = new Uint8Array(8);

      for (var i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {
        bytes[i] = remaining;
      }

      if (number < 0) {
        negate(bytes);
      }

      return new Int64(bytes);
    };
    /**
     * @returns {number}
     *
     * @api private
     */


    Int64.prototype.valueOf = function () {
      var bytes = this.bytes.slice(0);
      var negative = bytes[0] & 128;

      if (negative) {
        negate(bytes);
      }

      return parseInt(bytes.toString('hex'), 16) * (negative ? -1 : 1);
    };

    Int64.prototype.toString = function () {
      return String(this.valueOf());
    };
    /**
     * @param {Buffer} bytes
     *
     * @api private
     */


    function negate(bytes) {
      for (var i = 0; i < 8; i++) {
        bytes[i] ^= 0xFF;
      }

      for (var i = 7; i > -1; i--) {
        bytes[i]++;

        if (bytes[i] !== 0) {
          break;
        }
      }
    }
    /**
     * @api private
     */


    module.exports = {
      Int64: Int64
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/event-stream/parse-event.js":
  /*!**************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/event-stream/parse-event.js ***!
    \**************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibEventStreamParseEventJs(module, exports, __webpack_require__) {
    var parseMessage = __webpack_require__(
    /*! ./parse-message */
    "./node_modules/aws-sdk/lib/event-stream/parse-message.js").parseMessage;
    /**
     *
     * @param {*} parser
     * @param {Buffer} message
     * @param {*} shape
     * @api private
     */


    function parseEvent(parser, message, shape) {
      var parsedMessage = parseMessage(message); // check if message is an event or error

      var messageType = parsedMessage.headers[':message-type'];

      if (messageType) {
        if (messageType.value === 'error') {
          throw parseError(parsedMessage);
        } else if (messageType.value !== 'event') {
          // not sure how to parse non-events/non-errors, ignore for now
          return;
        }
      } // determine event type


      var eventType = parsedMessage.headers[':event-type']; // check that the event type is modeled

      var eventModel = shape.members[eventType.value];

      if (!eventModel) {
        return;
      }

      var result = {}; // check if an event payload exists

      var eventPayloadMemberName = eventModel.eventPayloadMemberName;

      if (eventPayloadMemberName) {
        var payloadShape = eventModel.members[eventPayloadMemberName]; // if the shape is binary, return the byte array

        if (payloadShape.type === 'binary') {
          result[eventPayloadMemberName] = parsedMessage.body;
        } else {
          result[eventPayloadMemberName] = parser.parse(parsedMessage.body.toString(), payloadShape);
        }
      } // read event headers


      var eventHeaderNames = eventModel.eventHeaderMemberNames;

      for (var i = 0; i < eventHeaderNames.length; i++) {
        var name = eventHeaderNames[i];

        if (parsedMessage.headers[name]) {
          // parse the header!
          result[name] = eventModel.members[name].toType(parsedMessage.headers[name].value);
        }
      }

      var output = {};
      output[eventType.value] = result;
      return output;
    }

    function parseError(message) {
      var errorCode = message.headers[':error-code'];
      var errorMessage = message.headers[':error-message'];
      var error = new Error(errorMessage.value || errorMessage);
      error.code = error.name = errorCode.value || errorCode;
      return error;
    }
    /**
     * @api private
     */


    module.exports = {
      parseEvent: parseEvent
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/event-stream/parse-message.js":
  /*!****************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/event-stream/parse-message.js ***!
    \****************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibEventStreamParseMessageJs(module, exports, __webpack_require__) {
    var Int64 = __webpack_require__(
    /*! ./int64 */
    "./node_modules/aws-sdk/lib/event-stream/int64.js").Int64;

    var splitMessage = __webpack_require__(
    /*! ./split-message */
    "./node_modules/aws-sdk/lib/event-stream/split-message.js").splitMessage;

    var BOOLEAN_TAG = 'boolean';
    var BYTE_TAG = 'byte';
    var SHORT_TAG = 'short';
    var INT_TAG = 'integer';
    var LONG_TAG = 'long';
    var BINARY_TAG = 'binary';
    var STRING_TAG = 'string';
    var TIMESTAMP_TAG = 'timestamp';
    var UUID_TAG = 'uuid';
    /**
     * @api private
     *
     * @param {Buffer} headers
     */

    function parseHeaders(headers) {
      var out = {};
      var position = 0;

      while (position < headers.length) {
        var nameLength = headers.readUInt8(position++);
        var name = headers.slice(position, position + nameLength).toString();
        position += nameLength;

        switch (headers.readUInt8(position++)) {
          case 0
          /* boolTrue */
          :
            out[name] = {
              type: BOOLEAN_TAG,
              value: true
            };
            break;

          case 1
          /* boolFalse */
          :
            out[name] = {
              type: BOOLEAN_TAG,
              value: false
            };
            break;

          case 2
          /* byte */
          :
            out[name] = {
              type: BYTE_TAG,
              value: headers.readInt8(position++)
            };
            break;

          case 3
          /* short */
          :
            out[name] = {
              type: SHORT_TAG,
              value: headers.readInt16BE(position)
            };
            position += 2;
            break;

          case 4
          /* integer */
          :
            out[name] = {
              type: INT_TAG,
              value: headers.readInt32BE(position)
            };
            position += 4;
            break;

          case 5
          /* long */
          :
            out[name] = {
              type: LONG_TAG,
              value: new Int64(headers.slice(position, position + 8))
            };
            position += 8;
            break;

          case 6
          /* byteArray */
          :
            var binaryLength = headers.readUInt16BE(position);
            position += 2;
            out[name] = {
              type: BINARY_TAG,
              value: headers.slice(position, position + binaryLength)
            };
            position += binaryLength;
            break;

          case 7
          /* string */
          :
            var stringLength = headers.readUInt16BE(position);
            position += 2;
            out[name] = {
              type: STRING_TAG,
              value: headers.slice(position, position + stringLength).toString()
            };
            position += stringLength;
            break;

          case 8
          /* timestamp */
          :
            out[name] = {
              type: TIMESTAMP_TAG,
              value: new Date(new Int64(headers.slice(position, position + 8)).valueOf())
            };
            position += 8;
            break;

          case 9
          /* uuid */
          :
            var uuidChars = headers.slice(position, position + 16).toString('hex');
            position += 16;
            out[name] = {
              type: UUID_TAG,
              value: uuidChars.substr(0, 8) + '-' + uuidChars.substr(8, 4) + '-' + uuidChars.substr(12, 4) + '-' + uuidChars.substr(16, 4) + '-' + uuidChars.substr(20)
            };
            break;

          default:
            throw new Error('Unrecognized header type tag');
        }
      }

      return out;
    }

    function parseMessage(message) {
      var parsed = splitMessage(message);
      return {
        headers: parseHeaders(parsed.headers),
        body: parsed.body
      };
    }
    /**
     * @api private
     */


    module.exports = {
      parseMessage: parseMessage
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/event-stream/split-message.js":
  /*!****************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/event-stream/split-message.js ***!
    \****************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibEventStreamSplitMessageJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js").util;

    var toBuffer = util.buffer.toBuffer; // All prelude components are unsigned, 32-bit integers

    var PRELUDE_MEMBER_LENGTH = 4; // The prelude consists of two components

    var PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2; // Checksums are always CRC32 hashes.

    var CHECKSUM_LENGTH = 4; // Messages must include a full prelude, a prelude checksum, and a message checksum

    var MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;
    /**
     * @api private
     *
     * @param {Buffer} message
     */

    function splitMessage(message) {
      if (!util.Buffer.isBuffer(message)) message = toBuffer(message);

      if (message.length < MINIMUM_MESSAGE_LENGTH) {
        throw new Error('Provided message too short to accommodate event stream message overhead');
      }

      if (message.length !== message.readUInt32BE(0)) {
        throw new Error('Reported message length does not match received message length');
      }

      var expectedPreludeChecksum = message.readUInt32BE(PRELUDE_LENGTH);

      if (expectedPreludeChecksum !== util.crypto.crc32(message.slice(0, PRELUDE_LENGTH))) {
        throw new Error('The prelude checksum specified in the message (' + expectedPreludeChecksum + ') does not match the calculated CRC32 checksum.');
      }

      var expectedMessageChecksum = message.readUInt32BE(message.length - CHECKSUM_LENGTH);

      if (expectedMessageChecksum !== util.crypto.crc32(message.slice(0, message.length - CHECKSUM_LENGTH))) {
        throw new Error('The message checksum did not match the expected value of ' + expectedMessageChecksum);
      }

      var headersStart = PRELUDE_LENGTH + CHECKSUM_LENGTH;
      var headersEnd = headersStart + message.readUInt32BE(PRELUDE_MEMBER_LENGTH);
      return {
        headers: message.slice(headersStart, headersEnd),
        body: message.slice(headersEnd, message.length - CHECKSUM_LENGTH)
      };
    }
    /**
     * @api private
     */


    module.exports = {
      splitMessage: splitMessage
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/event_listeners.js":
  /*!*****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/event_listeners.js ***!
    \*****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibEvent_listenersJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");

    var SequentialExecutor = __webpack_require__(
    /*! ./sequential_executor */
    "./node_modules/aws-sdk/lib/sequential_executor.js");

    var DISCOVER_ENDPOINT = __webpack_require__(
    /*! ./discover_endpoint */
    "./node_modules/aws-sdk/lib/discover_endpoint.js").discoverEndpoint;
    /**
     * The namespace used to register global event listeners for request building
     * and sending.
     */


    AWS.EventListeners = {
      /**
       * @!attribute VALIDATE_CREDENTIALS
       *   A request listener that validates whether the request is being
       *   sent with credentials.
       *   Handles the {AWS.Request~validate 'validate' Request event}
       *   @example Sending a request without validating credentials
       *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;
       *     request.removeListener('validate', listener);
       *   @readonly
       *   @return [Function]
       * @!attribute VALIDATE_REGION
       *   A request listener that validates whether the region is set
       *   for a request.
       *   Handles the {AWS.Request~validate 'validate' Request event}
       *   @example Sending a request without validating region configuration
       *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;
       *     request.removeListener('validate', listener);
       *   @readonly
       *   @return [Function]
       * @!attribute VALIDATE_PARAMETERS
       *   A request listener that validates input parameters in a request.
       *   Handles the {AWS.Request~validate 'validate' Request event}
       *   @example Sending a request without validating parameters
       *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;
       *     request.removeListener('validate', listener);
       *   @example Disable parameter validation globally
       *     AWS.EventListeners.Core.removeListener('validate',
       *       AWS.EventListeners.Core.VALIDATE_REGION);
       *   @readonly
       *   @return [Function]
       * @!attribute SEND
       *   A request listener that initiates the HTTP connection for a
       *   request being sent. Handles the {AWS.Request~send 'send' Request event}
       *   @example Replacing the HTTP handler
       *     var listener = AWS.EventListeners.Core.SEND;
       *     request.removeListener('send', listener);
       *     request.on('send', function(response) {
       *       customHandler.send(response);
       *     });
       *   @return [Function]
       *   @readonly
       * @!attribute HTTP_DATA
       *   A request listener that reads data from the HTTP connection in order
       *   to build the response data.
       *   Handles the {AWS.Request~httpData 'httpData' Request event}.
       *   Remove this handler if you are overriding the 'httpData' event and
       *   do not want extra data processing and buffering overhead.
       *   @example Disabling default data processing
       *     var listener = AWS.EventListeners.Core.HTTP_DATA;
       *     request.removeListener('httpData', listener);
       *   @return [Function]
       *   @readonly
       */
      Core: {}
      /* doc hack */

    };
    /**
     * @api private
     */

    function getOperationAuthtype(req) {
      if (!req.service.api.operations) {
        return '';
      }

      var operation = req.service.api.operations[req.operation];
      return operation ? operation.authtype : '';
    }

    AWS.EventListeners = {
      Core: new SequentialExecutor().addNamedListeners(function (add, addAsync) {
        addAsync('VALIDATE_CREDENTIALS', 'validate', function VALIDATE_CREDENTIALS(req, done) {
          if (!req.service.api.signatureVersion && !req.service.config.signatureVersion) return done(); // none

          req.service.config.getCredentials(function (err) {
            if (err) {
              req.response.error = AWS.util.error(err, {
                code: 'CredentialsError',
                message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1'
              });
            }

            done();
          });
        });
        add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {
          if (!req.service.config.region && !req.service.isGlobalEndpoint) {
            req.response.error = AWS.util.error(new Error(), {
              code: 'ConfigError',
              message: 'Missing region in config'
            });
          }
        });
        add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {
          if (!req.service.api.operations) {
            return;
          }

          var operation = req.service.api.operations[req.operation];

          if (!operation) {
            return;
          }

          var idempotentMembers = operation.idempotentMembers;

          if (!idempotentMembers.length) {
            return;
          } // creates a copy of params so user's param object isn't mutated


          var params = AWS.util.copy(req.params);

          for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {
            if (!params[idempotentMembers[i]]) {
              // add the member
              params[idempotentMembers[i]] = AWS.util.uuid.v4();
            }
          }

          req.params = params;
        });
        add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {
          if (!req.service.api.operations) {
            return;
          }

          var rules = req.service.api.operations[req.operation].input;
          var validation = req.service.config.paramValidation;
          new AWS.ParamValidator(validation).validate(rules, req.params);
        });
        addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {
          req.haltHandlersOnError();

          if (!req.service.api.operations) {
            return;
          }

          var operation = req.service.api.operations[req.operation];
          var authtype = operation ? operation.authtype : '';
          if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion) return done(); // none

          if (req.service.getSignerClass(req) === AWS.Signers.V4) {
            var body = req.httpRequest.body || '';

            if (authtype.indexOf('unsigned-body') >= 0) {
              req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';
              return done();
            }

            AWS.util.computeSha256(body, function (err, sha) {
              if (err) {
                done(err);
              } else {
                req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;
                done();
              }
            });
          } else {
            done();
          }
        });
        add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {
          var authtype = getOperationAuthtype(req);
          var payloadMember = AWS.util.getRequestPayloadShape(req);

          if (req.httpRequest.headers['Content-Length'] === undefined) {
            try {
              var length = AWS.util.string.byteLength(req.httpRequest.body);
              req.httpRequest.headers['Content-Length'] = length;
            } catch (err) {
              if (payloadMember && payloadMember.isStreaming) {
                if (payloadMember.requiresLength) {
                  //streaming payload requires length(s3, glacier)
                  throw err;
                } else if (authtype.indexOf('unsigned-body') >= 0) {
                  //unbounded streaming payload(lex, mediastore)
                  req.httpRequest.headers['Transfer-Encoding'] = 'chunked';
                  return;
                } else {
                  throw err;
                }
              }

              throw err;
            }
          }
        });
        add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {
          req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;
        });
        add('RESTART', 'restart', function RESTART() {
          var err = this.response.error;
          if (!err || !err.retryable) return;
          this.httpRequest = new AWS.HttpRequest(this.service.endpoint, this.service.region);

          if (this.response.retryCount < this.service.config.maxRetries) {
            this.response.retryCount++;
          } else {
            this.response.error = null;
          }
        });
        var addToHead = true;
        addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);
        addAsync('SIGN', 'sign', function SIGN(req, done) {
          var service = req.service;
          var operations = req.service.api.operations || {};
          var operation = operations[req.operation];
          var authtype = operation ? operation.authtype : '';
          if (!service.api.signatureVersion && !authtype && !service.config.signatureVersion) return done(); // none

          service.config.getCredentials(function (err, credentials) {
            if (err) {
              req.response.error = err;
              return done();
            }

            try {
              var date = service.getSkewCorrectedDate();
              var SignerClass = service.getSignerClass(req);
              var signer = new SignerClass(req.httpRequest, service.api.signingName || service.api.endpointPrefix, {
                signatureCache: service.config.signatureCache,
                operation: operation,
                signatureVersion: service.api.signatureVersion
              });
              signer.setServiceClientId(service._clientId); // clear old authorization headers

              delete req.httpRequest.headers['Authorization'];
              delete req.httpRequest.headers['Date'];
              delete req.httpRequest.headers['X-Amz-Date']; // add new authorization

              signer.addAuthorization(credentials, date);
              req.signedAt = date;
            } catch (e) {
              req.response.error = e;
            }

            done();
          });
        });
        add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {
          if (this.service.successfulResponse(resp, this)) {
            resp.data = {};
            resp.error = null;
          } else {
            resp.data = null;
            resp.error = AWS.util.error(new Error(), {
              code: 'UnknownError',
              message: 'An unknown error occurred.'
            });
          }
        });
        addAsync('SEND', 'send', function SEND(resp, done) {
          resp.httpResponse._abortCallback = done;
          resp.error = null;
          resp.data = null;

          function callback(httpResp) {
            resp.httpResponse.stream = httpResp;
            var stream = resp.request.httpRequest.stream;
            var service = resp.request.service;
            var api = service.api;
            var operationName = resp.request.operation;
            var operation = api.operations[operationName] || {};
            httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {
              resp.request.emit('httpHeaders', [statusCode, headers, resp, statusMessage]);

              if (!resp.httpResponse.streaming) {
                if (AWS.HttpClient.streamsApiVersion === 2) {
                  // streams2 API check
                  // if we detect event streams, we're going to have to
                  // return the stream immediately
                  if (operation.hasEventOutput && service.successfulResponse(resp)) {
                    // skip reading the IncomingStream
                    resp.request.emit('httpDone');
                    done();
                    return;
                  }

                  httpResp.on('readable', function onReadable() {
                    var data = httpResp.read();

                    if (data !== null) {
                      resp.request.emit('httpData', [data, resp]);
                    }
                  });
                } else {
                  // legacy streams API
                  httpResp.on('data', function onData(data) {
                    resp.request.emit('httpData', [data, resp]);
                  });
                }
              }
            });
            httpResp.on('end', function onEnd() {
              if (!stream || !stream.didCallback) {
                if (AWS.HttpClient.streamsApiVersion === 2 && operation.hasEventOutput && service.successfulResponse(resp)) {
                  // don't concatenate response chunks when streaming event stream data when response is successful
                  return;
                }

                resp.request.emit('httpDone');
                done();
              }
            });
          }

          function progress(httpResp) {
            httpResp.on('sendProgress', function onSendProgress(value) {
              resp.request.emit('httpUploadProgress', [value, resp]);
            });
            httpResp.on('receiveProgress', function onReceiveProgress(value) {
              resp.request.emit('httpDownloadProgress', [value, resp]);
            });
          }

          function error(err) {
            if (err.code !== 'RequestAbortedError') {
              var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';
              err = AWS.util.error(err, {
                code: errCode,
                region: resp.request.httpRequest.region,
                hostname: resp.request.httpRequest.endpoint.hostname,
                retryable: true
              });
            }

            resp.error = err;
            resp.request.emit('httpError', [resp.error, resp], function () {
              done();
            });
          }

          function executeSend() {
            var http = AWS.HttpClient.getInstance();
            var httpOptions = resp.request.service.config.httpOptions || {};

            try {
              var stream = http.handleRequest(resp.request.httpRequest, httpOptions, callback, error);
              progress(stream);
            } catch (err) {
              error(err);
            }
          }

          var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;

          if (timeDiff >= 60 * 10) {
            // if we signed 10min ago, re-sign
            this.emit('sign', [this], function (err) {
              if (err) done(err);else executeSend();
            });
          } else {
            executeSend();
          }
        });
        add('HTTP_HEADERS', 'httpHeaders', function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {
          resp.httpResponse.statusCode = statusCode;
          resp.httpResponse.statusMessage = statusMessage;
          resp.httpResponse.headers = headers;
          resp.httpResponse.body = AWS.util.buffer.toBuffer('');
          resp.httpResponse.buffers = [];
          resp.httpResponse.numBytes = 0;
          var dateHeader = headers.date || headers.Date;
          var service = resp.request.service;

          if (dateHeader) {
            var serverTime = Date.parse(dateHeader);

            if (service.config.correctClockSkew && service.isClockSkewed(serverTime)) {
              service.applyClockOffset(serverTime);
            }
          }
        });
        add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {
          if (chunk) {
            if (AWS.util.isNode()) {
              resp.httpResponse.numBytes += chunk.length;
              var total = resp.httpResponse.headers['content-length'];
              var progress = {
                loaded: resp.httpResponse.numBytes,
                total: total
              };
              resp.request.emit('httpDownloadProgress', [progress, resp]);
            }

            resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));
          }
        });
        add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {
          // convert buffers array into single buffer
          if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {
            var body = AWS.util.buffer.concat(resp.httpResponse.buffers);
            resp.httpResponse.body = body;
          }

          delete resp.httpResponse.numBytes;
          delete resp.httpResponse.buffers;
        });
        add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {
          if (resp.httpResponse.statusCode) {
            resp.error.statusCode = resp.httpResponse.statusCode;

            if (resp.error.retryable === undefined) {
              resp.error.retryable = this.service.retryableError(resp.error, this);
            }
          }
        });
        add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {
          if (!resp.error) return;

          switch (resp.error.code) {
            case 'RequestExpired': // EC2 only

            case 'ExpiredTokenException':
            case 'ExpiredToken':
              resp.error.retryable = true;
              resp.request.service.config.credentials.expired = true;
          }
        });
        add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {
          var err = resp.error;
          if (!err) return;

          if (typeof err.code === 'string' && typeof err.message === 'string') {
            if (err.code.match(/Signature/) && err.message.match(/expired/)) {
              resp.error.retryable = true;
            }
          }
        });
        add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {
          if (!resp.error) return;

          if (this.service.clockSkewError(resp.error) && this.service.config.correctClockSkew) {
            resp.error.retryable = true;
          }
        });
        add('REDIRECT', 'retry', function REDIRECT(resp) {
          if (resp.error && resp.error.statusCode >= 300 && resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {
            this.httpRequest.endpoint = new AWS.Endpoint(resp.httpResponse.headers['location']);
            this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;
            resp.error.redirect = true;
            resp.error.retryable = true;
          }
        });
        add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {
          if (resp.error) {
            if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {
              resp.error.retryDelay = 0;
            } else if (resp.retryCount < resp.maxRetries) {
              resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;
            }
          }
        });
        addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {
          var delay,
              willRetry = false;

          if (resp.error) {
            delay = resp.error.retryDelay || 0;

            if (resp.error.retryable && resp.retryCount < resp.maxRetries) {
              resp.retryCount++;
              willRetry = true;
            } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {
              resp.redirectCount++;
              willRetry = true;
            }
          } // delay < 0 is a signal from customBackoff to skip retries


          if (willRetry && delay >= 0) {
            resp.error = null;
            setTimeout(done, delay);
          } else {
            done();
          }
        });
      }),
      CorePost: new SequentialExecutor().addNamedListeners(function (add) {
        add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);
        add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);
        add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {
          if (err.code === 'NetworkingError' && err.errno === 'ENOTFOUND') {
            var message = 'Inaccessible host: `' + err.hostname + '\'. This service may not be available in the `' + err.region + '\' region.';
            this.response.error = AWS.util.error(new Error(message), {
              code: 'UnknownEndpoint',
              region: err.region,
              hostname: err.hostname,
              retryable: true,
              originalError: err
            });
          }
        });
      }),
      Logger: new SequentialExecutor().addNamedListeners(function (add) {
        add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {
          var req = resp.request;
          var logger = req.service.config.logger;
          if (!logger) return;

          function filterSensitiveLog(inputShape, shape) {
            if (!shape) {
              return shape;
            }

            switch (inputShape.type) {
              case 'structure':
                var struct = {};
                AWS.util.each(shape, function (subShapeName, subShape) {
                  if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {
                    struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);
                  } else {
                    struct[subShapeName] = subShape;
                  }
                });
                return struct;

              case 'list':
                var list = [];
                AWS.util.arrayEach(shape, function (subShape, index) {
                  list.push(filterSensitiveLog(inputShape.member, subShape));
                });
                return list;

              case 'map':
                var map = {};
                AWS.util.each(shape, function (key, value) {
                  map[key] = filterSensitiveLog(inputShape.value, value);
                });
                return map;

              default:
                if (inputShape.isSensitive) {
                  return '***SensitiveInformation***';
                } else {
                  return shape;
                }

            }
          }

          function buildMessage() {
            var time = resp.request.service.getSkewCorrectedDate().getTime();
            var delta = (time - req.startTime.getTime()) / 1000;
            var ansi = logger.isTTY ? true : false;
            var status = resp.httpResponse.statusCode;
            var censoredParams = req.params;

            if (req.service.api.operations && req.service.api.operations[req.operation] && req.service.api.operations[req.operation].input) {
              var inputShape = req.service.api.operations[req.operation].input;
              censoredParams = filterSensitiveLog(inputShape, req.params);
            }

            var params = __webpack_require__(
            /*! util */
            "./node_modules/util/util.js").inspect(censoredParams, true, null);

            var message = '';
            if (ansi) message += '\x1B[33m';
            message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;
            message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';
            if (ansi) message += '\x1B[0;1m';
            message += ' ' + AWS.util.string.lowerFirst(req.operation);
            message += '(' + params + ')';
            if (ansi) message += '\x1B[0m';
            return message;
          }

          var line = buildMessage();

          if (typeof logger.log === 'function') {
            logger.log(line);
          } else if (typeof logger.write === 'function') {
            logger.write(line + '\n');
          }
        });
      }),
      Json: new SequentialExecutor().addNamedListeners(function (add) {
        var svc = __webpack_require__(
        /*! ./protocol/json */
        "./node_modules/aws-sdk/lib/protocol/json.js");

        add('BUILD', 'build', svc.buildRequest);
        add('EXTRACT_DATA', 'extractData', svc.extractData);
        add('EXTRACT_ERROR', 'extractError', svc.extractError);
      }),
      Rest: new SequentialExecutor().addNamedListeners(function (add) {
        var svc = __webpack_require__(
        /*! ./protocol/rest */
        "./node_modules/aws-sdk/lib/protocol/rest.js");

        add('BUILD', 'build', svc.buildRequest);
        add('EXTRACT_DATA', 'extractData', svc.extractData);
        add('EXTRACT_ERROR', 'extractError', svc.extractError);
      }),
      RestJson: new SequentialExecutor().addNamedListeners(function (add) {
        var svc = __webpack_require__(
        /*! ./protocol/rest_json */
        "./node_modules/aws-sdk/lib/protocol/rest_json.js");

        add('BUILD', 'build', svc.buildRequest);
        add('EXTRACT_DATA', 'extractData', svc.extractData);
        add('EXTRACT_ERROR', 'extractError', svc.extractError);
      }),
      RestXml: new SequentialExecutor().addNamedListeners(function (add) {
        var svc = __webpack_require__(
        /*! ./protocol/rest_xml */
        "./node_modules/aws-sdk/lib/protocol/rest_xml.js");

        add('BUILD', 'build', svc.buildRequest);
        add('EXTRACT_DATA', 'extractData', svc.extractData);
        add('EXTRACT_ERROR', 'extractError', svc.extractError);
      }),
      Query: new SequentialExecutor().addNamedListeners(function (add) {
        var svc = __webpack_require__(
        /*! ./protocol/query */
        "./node_modules/aws-sdk/lib/protocol/query.js");

        add('BUILD', 'build', svc.buildRequest);
        add('EXTRACT_DATA', 'extractData', svc.extractData);
        add('EXTRACT_ERROR', 'extractError', svc.extractError);
      })
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/http.js":
  /*!******************************************!*\
    !*** ./node_modules/aws-sdk/lib/http.js ***!
    \******************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibHttpJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;
    /**
     * The endpoint that a service will talk to, for example,
     * `'https://ec2.ap-southeast-1.amazonaws.com'`. If
     * you need to override an endpoint for a service, you can
     * set the endpoint on a service by passing the endpoint
     * object with the `endpoint` option key:
     *
     * ```javascript
     * var ep = new AWS.Endpoint('awsproxy.example.com');
     * var s3 = new AWS.S3({endpoint: ep});
     * s3.service.endpoint.hostname == 'awsproxy.example.com'
     * ```
     *
     * Note that if you do not specify a protocol, the protocol will
     * be selected based on your current {AWS.config} configuration.
     *
     * @!attribute protocol
     *   @return [String] the protocol (http or https) of the endpoint
     *     URL
     * @!attribute hostname
     *   @return [String] the host portion of the endpoint, e.g.,
     *     example.com
     * @!attribute host
     *   @return [String] the host portion of the endpoint including
     *     the port, e.g., example.com:80
     * @!attribute port
     *   @return [Integer] the port of the endpoint
     * @!attribute href
     *   @return [String] the full URL of the endpoint
     */

    AWS.Endpoint = inherit({
      /**
       * @overload Endpoint(endpoint)
       *   Constructs a new endpoint given an endpoint URL. If the
       *   URL omits a protocol (http or https), the default protocol
       *   set in the global {AWS.config} will be used.
       *   @param endpoint [String] the URL to construct an endpoint from
       */
      constructor: function Endpoint(endpoint, config) {
        AWS.util.hideProperties(this, ['slashes', 'auth', 'hash', 'search', 'query']);

        if (typeof endpoint === 'undefined' || endpoint === null) {
          throw new Error('Invalid endpoint: ' + endpoint);
        } else if (typeof endpoint !== 'string') {
          return AWS.util.copy(endpoint);
        }

        if (!endpoint.match(/^http/)) {
          var useSSL = config && config.sslEnabled !== undefined ? config.sslEnabled : AWS.config.sslEnabled;
          endpoint = (useSSL ? 'https' : 'http') + '://' + endpoint;
        }

        AWS.util.update(this, AWS.util.urlParse(endpoint)); // Ensure the port property is set as an integer

        if (this.port) {
          this.port = parseInt(this.port, 10);
        } else {
          this.port = this.protocol === 'https:' ? 443 : 80;
        }
      }
    });
    /**
     * The low level HTTP request object, encapsulating all HTTP header
     * and body data sent by a service request.
     *
     * @!attribute method
     *   @return [String] the HTTP method of the request
     * @!attribute path
     *   @return [String] the path portion of the URI, e.g.,
     *     "/list/?start=5&num=10"
     * @!attribute headers
     *   @return [map<String,String>]
     *     a map of header keys and their respective values
     * @!attribute body
     *   @return [String] the request body payload
     * @!attribute endpoint
     *   @return [AWS.Endpoint] the endpoint for the request
     * @!attribute region
     *   @api private
     *   @return [String] the region, for signing purposes only.
     */

    AWS.HttpRequest = inherit({
      /**
       * @api private
       */
      constructor: function HttpRequest(endpoint, region) {
        endpoint = new AWS.Endpoint(endpoint);
        this.method = 'POST';
        this.path = endpoint.path || '/';
        this.headers = {};
        this.body = '';
        this.endpoint = endpoint;
        this.region = region;
        this._userAgent = '';
        this.setUserAgent();
      },

      /**
       * @api private
       */
      setUserAgent: function setUserAgent() {
        this._userAgent = this.headers[this.getUserAgentHeaderName()] = AWS.util.userAgent();
      },
      getUserAgentHeaderName: function getUserAgentHeaderName() {
        var prefix = AWS.util.isBrowser() ? 'X-Amz-' : '';
        return prefix + 'User-Agent';
      },

      /**
       * @api private
       */
      appendToUserAgent: function appendToUserAgent(agentPartial) {
        if (typeof agentPartial === 'string' && agentPartial) {
          this._userAgent += ' ' + agentPartial;
        }

        this.headers[this.getUserAgentHeaderName()] = this._userAgent;
      },

      /**
       * @api private
       */
      getUserAgent: function getUserAgent() {
        return this._userAgent;
      },

      /**
       * @return [String] the part of the {path} excluding the
       *   query string
       */
      pathname: function pathname() {
        return this.path.split('?', 1)[0];
      },

      /**
       * @return [String] the query string portion of the {path}
       */
      search: function search() {
        var query = this.path.split('?', 2)[1];

        if (query) {
          query = AWS.util.queryStringParse(query);
          return AWS.util.queryParamsToString(query);
        }

        return '';
      },

      /**
       * @api private
       * update httpRequest endpoint with endpoint string
       */
      updateEndpoint: function updateEndpoint(endpointStr) {
        var newEndpoint = new AWS.Endpoint(endpointStr);
        this.endpoint = newEndpoint;
        this.path = newEndpoint.path || '/';

        if (this.headers['Host']) {
          this.headers['Host'] = newEndpoint.host;
        }
      }
    });
    /**
     * The low level HTTP response object, encapsulating all HTTP header
     * and body data returned from the request.
     *
     * @!attribute statusCode
     *   @return [Integer] the HTTP status code of the response (e.g., 200, 404)
     * @!attribute headers
     *   @return [map<String,String>]
     *      a map of response header keys and their respective values
     * @!attribute body
     *   @return [String] the response body payload
     * @!attribute [r] streaming
     *   @return [Boolean] whether this response is being streamed at a low-level.
     *     Defaults to `false` (buffered reads). Do not modify this manually, use
     *     {createUnbufferedStream} to convert the stream to unbuffered mode
     *     instead.
     */

    AWS.HttpResponse = inherit({
      /**
       * @api private
       */
      constructor: function HttpResponse() {
        this.statusCode = undefined;
        this.headers = {};
        this.body = undefined;
        this.streaming = false;
        this.stream = null;
      },

      /**
       * Disables buffering on the HTTP response and returns the stream for reading.
       * @return [Stream, XMLHttpRequest, null] the underlying stream object.
       *   Use this object to directly read data off of the stream.
       * @note This object is only available after the {AWS.Request~httpHeaders}
       *   event has fired. This method must be called prior to
       *   {AWS.Request~httpData}.
       * @example Taking control of a stream
       *   request.on('httpHeaders', function(statusCode, headers) {
       *     if (statusCode < 300) {
       *       if (headers.etag === 'xyz') {
       *         // pipe the stream, disabling buffering
       *         var stream = this.response.httpResponse.createUnbufferedStream();
       *         stream.pipe(process.stdout);
       *       } else { // abort this request and set a better error message
       *         this.abort();
       *         this.response.error = new Error('Invalid ETag');
       *       }
       *     }
       *   }).send(console.log);
       */
      createUnbufferedStream: function createUnbufferedStream() {
        this.streaming = true;
        return this.stream;
      }
    });
    AWS.HttpClient = inherit({});
    /**
     * @api private
     */

    AWS.HttpClient.getInstance = function getInstance() {
      if (this.singleton === undefined) {
        this.singleton = new this();
      }

      return this.singleton;
    };
    /***/

  },

  /***/
  "./node_modules/aws-sdk/lib/http/xhr.js":
  /*!**********************************************!*\
    !*** ./node_modules/aws-sdk/lib/http/xhr.js ***!
    \**********************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibHttpXhrJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var EventEmitter = __webpack_require__(
    /*! events */
    "./node_modules/aws-sdk/node_modules/events/events.js").EventEmitter;

    __webpack_require__(
    /*! ../http */
    "./node_modules/aws-sdk/lib/http.js");
    /**
     * @api private
     */


    AWS.XHRClient = AWS.util.inherit({
      handleRequest: function handleRequest(httpRequest, httpOptions, callback, errCallback) {
        var self = this;
        var endpoint = httpRequest.endpoint;
        var emitter = new EventEmitter();
        var href = endpoint.protocol + '//' + endpoint.hostname;

        if (endpoint.port !== 80 && endpoint.port !== 443) {
          href += ':' + endpoint.port;
        }

        href += httpRequest.path;
        var xhr = new XMLHttpRequest(),
            headersEmitted = false;
        httpRequest.stream = xhr;
        xhr.addEventListener('readystatechange', function () {
          try {
            if (xhr.status === 0) return; // 0 code is invalid
          } catch (e) {
            return;
          }

          if (this.readyState >= this.HEADERS_RECEIVED && !headersEmitted) {
            emitter.statusCode = xhr.status;
            emitter.headers = self.parseHeaders(xhr.getAllResponseHeaders());
            emitter.emit('headers', emitter.statusCode, emitter.headers, xhr.statusText);
            headersEmitted = true;
          }

          if (this.readyState === this.DONE) {
            self.finishRequest(xhr, emitter);
          }
        }, false);
        xhr.upload.addEventListener('progress', function (evt) {
          emitter.emit('sendProgress', evt);
        });
        xhr.addEventListener('progress', function (evt) {
          emitter.emit('receiveProgress', evt);
        }, false);
        xhr.addEventListener('timeout', function () {
          errCallback(AWS.util.error(new Error('Timeout'), {
            code: 'TimeoutError'
          }));
        }, false);
        xhr.addEventListener('error', function () {
          errCallback(AWS.util.error(new Error('Network Failure'), {
            code: 'NetworkingError'
          }));
        }, false);
        xhr.addEventListener('abort', function () {
          errCallback(AWS.util.error(new Error('Request aborted'), {
            code: 'RequestAbortedError'
          }));
        }, false);
        callback(emitter);
        xhr.open(httpRequest.method, href, httpOptions.xhrAsync !== false);
        AWS.util.each(httpRequest.headers, function (key, value) {
          if (key !== 'Content-Length' && key !== 'User-Agent' && key !== 'Host') {
            xhr.setRequestHeader(key, value);
          }
        });

        if (httpOptions.timeout && httpOptions.xhrAsync !== false) {
          xhr.timeout = httpOptions.timeout;
        }

        if (httpOptions.xhrWithCredentials) {
          xhr.withCredentials = true;
        }

        try {
          xhr.responseType = 'arraybuffer';
        } catch (e) {}

        try {
          if (httpRequest.body) {
            xhr.send(httpRequest.body);
          } else {
            xhr.send();
          }
        } catch (err) {
          if (httpRequest.body && typeof httpRequest.body.buffer === 'object') {
            xhr.send(httpRequest.body.buffer); // send ArrayBuffer directly
          } else {
            throw err;
          }
        }

        return emitter;
      },
      parseHeaders: function parseHeaders(rawHeaders) {
        var headers = {};
        AWS.util.arrayEach(rawHeaders.split(/\r?\n/), function (line) {
          var key = line.split(':', 1)[0];
          var value = line.substring(key.length + 2);
          if (key.length > 0) headers[key.toLowerCase()] = value;
        });
        return headers;
      },
      finishRequest: function finishRequest(xhr, emitter) {
        var buffer;

        if (xhr.responseType === 'arraybuffer' && xhr.response) {
          var ab = xhr.response;
          buffer = new AWS.util.Buffer(ab.byteLength);
          var view = new Uint8Array(ab);

          for (var i = 0; i < buffer.length; ++i) {
            buffer[i] = view[i];
          }
        }

        try {
          if (!buffer && typeof xhr.responseText === 'string') {
            buffer = new AWS.util.Buffer(xhr.responseText);
          }
        } catch (e) {}

        if (buffer) emitter.emit('data', buffer);
        emitter.emit('end');
      }
    });
    /**
     * @api private
     */

    AWS.HttpClient.prototype = AWS.XHRClient.prototype;
    /**
     * @api private
     */

    AWS.HttpClient.streamsApiVersion = 1;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/json/builder.js":
  /*!**************************************************!*\
    !*** ./node_modules/aws-sdk/lib/json/builder.js ***!
    \**************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibJsonBuilderJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    function JsonBuilder() {}

    JsonBuilder.prototype.build = function (value, shape) {
      return JSON.stringify(translate(value, shape));
    };

    function translate(value, shape) {
      if (!shape || value === undefined || value === null) return undefined;

      switch (shape.type) {
        case 'structure':
          return translateStructure(value, shape);

        case 'map':
          return translateMap(value, shape);

        case 'list':
          return translateList(value, shape);

        default:
          return translateScalar(value, shape);
      }
    }

    function translateStructure(structure, shape) {
      var struct = {};
      util.each(structure, function (name, value) {
        var memberShape = shape.members[name];

        if (memberShape) {
          if (memberShape.location !== 'body') return;
          var locationName = memberShape.isLocationName ? memberShape.name : name;
          var result = translate(value, memberShape);
          if (result !== undefined) struct[locationName] = result;
        }
      });
      return struct;
    }

    function translateList(list, shape) {
      var out = [];
      util.arrayEach(list, function (value) {
        var result = translate(value, shape.member);
        if (result !== undefined) out.push(result);
      });
      return out;
    }

    function translateMap(map, shape) {
      var out = {};
      util.each(map, function (key, value) {
        var result = translate(value, shape.value);
        if (result !== undefined) out[key] = result;
      });
      return out;
    }

    function translateScalar(value, shape) {
      return shape.toWireFormat(value);
    }
    /**
     * @api private
     */


    module.exports = JsonBuilder;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/json/parser.js":
  /*!*************************************************!*\
    !*** ./node_modules/aws-sdk/lib/json/parser.js ***!
    \*************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibJsonParserJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    function JsonParser() {}

    JsonParser.prototype.parse = function (value, shape) {
      return translate(JSON.parse(value), shape);
    };

    function translate(value, shape) {
      if (!shape || value === undefined) return undefined;

      switch (shape.type) {
        case 'structure':
          return translateStructure(value, shape);

        case 'map':
          return translateMap(value, shape);

        case 'list':
          return translateList(value, shape);

        default:
          return translateScalar(value, shape);
      }
    }

    function translateStructure(structure, shape) {
      if (structure == null) return undefined;
      var struct = {};
      var shapeMembers = shape.members;
      util.each(shapeMembers, function (name, memberShape) {
        var locationName = memberShape.isLocationName ? memberShape.name : name;

        if (Object.prototype.hasOwnProperty.call(structure, locationName)) {
          var value = structure[locationName];
          var result = translate(value, memberShape);
          if (result !== undefined) struct[name] = result;
        }
      });
      return struct;
    }

    function translateList(list, shape) {
      if (list == null) return undefined;
      var out = [];
      util.arrayEach(list, function (value) {
        var result = translate(value, shape.member);
        if (result === undefined) out.push(null);else out.push(result);
      });
      return out;
    }

    function translateMap(map, shape) {
      if (map == null) return undefined;
      var out = {};
      util.each(map, function (key, value) {
        var result = translate(value, shape.value);
        if (result === undefined) out[key] = null;else out[key] = result;
      });
      return out;
    }

    function translateScalar(value, shape) {
      return shape.toType(value);
    }
    /**
     * @api private
     */


    module.exports = JsonParser;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/model/api.js":
  /*!***********************************************!*\
    !*** ./node_modules/aws-sdk/lib/model/api.js ***!
    \***********************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibModelApiJs(module, exports, __webpack_require__) {
    var Collection = __webpack_require__(
    /*! ./collection */
    "./node_modules/aws-sdk/lib/model/collection.js");

    var Operation = __webpack_require__(
    /*! ./operation */
    "./node_modules/aws-sdk/lib/model/operation.js");

    var Shape = __webpack_require__(
    /*! ./shape */
    "./node_modules/aws-sdk/lib/model/shape.js");

    var Paginator = __webpack_require__(
    /*! ./paginator */
    "./node_modules/aws-sdk/lib/model/paginator.js");

    var ResourceWaiter = __webpack_require__(
    /*! ./resource_waiter */
    "./node_modules/aws-sdk/lib/model/resource_waiter.js");

    var metadata = __webpack_require__(
    /*! ../../apis/metadata.json */
    "./node_modules/aws-sdk/apis/metadata.json");

    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var property = util.property;
    var memoizedProperty = util.memoizedProperty;

    function Api(api, options) {
      var self = this;
      api = api || {};
      options = options || {};
      options.api = this;
      api.metadata = api.metadata || {};
      var serviceIdentifier = options.serviceIdentifier;
      delete options.serviceIdentifier;
      property(this, 'isApi', true, false);
      property(this, 'apiVersion', api.metadata.apiVersion);
      property(this, 'endpointPrefix', api.metadata.endpointPrefix);
      property(this, 'signingName', api.metadata.signingName);
      property(this, 'globalEndpoint', api.metadata.globalEndpoint);
      property(this, 'signatureVersion', api.metadata.signatureVersion);
      property(this, 'jsonVersion', api.metadata.jsonVersion);
      property(this, 'targetPrefix', api.metadata.targetPrefix);
      property(this, 'protocol', api.metadata.protocol);
      property(this, 'timestampFormat', api.metadata.timestampFormat);
      property(this, 'xmlNamespaceUri', api.metadata.xmlNamespace);
      property(this, 'abbreviation', api.metadata.serviceAbbreviation);
      property(this, 'fullName', api.metadata.serviceFullName);
      property(this, 'serviceId', api.metadata.serviceId);

      if (serviceIdentifier && metadata[serviceIdentifier]) {
        property(this, 'xmlNoDefaultLists', metadata[serviceIdentifier].xmlNoDefaultLists, false);
      }

      memoizedProperty(this, 'className', function () {
        var name = api.metadata.serviceAbbreviation || api.metadata.serviceFullName;
        if (!name) return null;
        name = name.replace(/^Amazon|AWS\s*|\(.*|\s+|\W+/g, '');
        if (name === 'ElasticLoadBalancing') name = 'ELB';
        return name;
      });

      function addEndpointOperation(name, operation) {
        if (operation.endpointoperation === true) {
          property(self, 'endpointOperation', util.string.lowerFirst(name));
        }

        if (operation.endpointdiscovery && !self.hasRequiredEndpointDiscovery) {
          property(self, 'hasRequiredEndpointDiscovery', operation.endpointdiscovery.required === true);
        }
      }

      property(this, 'operations', new Collection(api.operations, options, function (name, operation) {
        return new Operation(name, operation, options);
      }, util.string.lowerFirst, addEndpointOperation));
      property(this, 'shapes', new Collection(api.shapes, options, function (name, shape) {
        return Shape.create(shape, options);
      }));
      property(this, 'paginators', new Collection(api.paginators, options, function (name, paginator) {
        return new Paginator(name, paginator, options);
      }));
      property(this, 'waiters', new Collection(api.waiters, options, function (name, waiter) {
        return new ResourceWaiter(name, waiter, options);
      }, util.string.lowerFirst));

      if (options.documentation) {
        property(this, 'documentation', api.documentation);
        property(this, 'documentationUrl', api.documentationUrl);
      }
    }
    /**
     * @api private
     */


    module.exports = Api;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/model/collection.js":
  /*!******************************************************!*\
    !*** ./node_modules/aws-sdk/lib/model/collection.js ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibModelCollectionJs(module, exports, __webpack_require__) {
    var memoizedProperty = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js").memoizedProperty;

    function memoize(name, value, factory, nameTr) {
      memoizedProperty(this, nameTr(name), function () {
        return factory(name, value);
      });
    }

    function Collection(iterable, options, factory, nameTr, callback) {
      nameTr = nameTr || String;
      var self = this;

      for (var id in iterable) {
        if (Object.prototype.hasOwnProperty.call(iterable, id)) {
          memoize.call(self, id, iterable[id], factory, nameTr);
          if (callback) callback(id, iterable[id]);
        }
      }
    }
    /**
     * @api private
     */


    module.exports = Collection;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/model/operation.js":
  /*!*****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/model/operation.js ***!
    \*****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibModelOperationJs(module, exports, __webpack_require__) {
    var Shape = __webpack_require__(
    /*! ./shape */
    "./node_modules/aws-sdk/lib/model/shape.js");

    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var property = util.property;
    var memoizedProperty = util.memoizedProperty;

    function Operation(name, operation, options) {
      var self = this;
      options = options || {};
      property(this, 'name', operation.name || name);
      property(this, 'api', options.api, false);
      operation.http = operation.http || {};
      property(this, 'endpoint', operation.endpoint);
      property(this, 'httpMethod', operation.http.method || 'POST');
      property(this, 'httpPath', operation.http.requestUri || '/');
      property(this, 'authtype', operation.authtype || '');
      property(this, 'endpointDiscoveryRequired', operation.endpointdiscovery ? operation.endpointdiscovery.required ? 'REQUIRED' : 'OPTIONAL' : 'NULL');
      memoizedProperty(this, 'input', function () {
        if (!operation.input) {
          return new Shape.create({
            type: 'structure'
          }, options);
        }

        return Shape.create(operation.input, options);
      });
      memoizedProperty(this, 'output', function () {
        if (!operation.output) {
          return new Shape.create({
            type: 'structure'
          }, options);
        }

        return Shape.create(operation.output, options);
      });
      memoizedProperty(this, 'errors', function () {
        var list = [];
        if (!operation.errors) return null;

        for (var i = 0; i < operation.errors.length; i++) {
          list.push(Shape.create(operation.errors[i], options));
        }

        return list;
      });
      memoizedProperty(this, 'paginator', function () {
        return options.api.paginators[name];
      });

      if (options.documentation) {
        property(this, 'documentation', operation.documentation);
        property(this, 'documentationUrl', operation.documentationUrl);
      } // idempotentMembers only tracks top-level input shapes


      memoizedProperty(this, 'idempotentMembers', function () {
        var idempotentMembers = [];
        var input = self.input;
        var members = input.members;

        if (!input.members) {
          return idempotentMembers;
        }

        for (var name in members) {
          if (!members.hasOwnProperty(name)) {
            continue;
          }

          if (members[name].isIdempotent === true) {
            idempotentMembers.push(name);
          }
        }

        return idempotentMembers;
      });
      memoizedProperty(this, 'hasEventOutput', function () {
        var output = self.output;
        return hasEventStream(output);
      });
    }

    function hasEventStream(topLevelShape) {
      var members = topLevelShape.members;
      var payload = topLevelShape.payload;

      if (!topLevelShape.members) {
        return false;
      }

      if (payload) {
        var payloadMember = members[payload];
        return payloadMember.isEventStream;
      } // check if any member is an event stream


      for (var name in members) {
        if (!members.hasOwnProperty(name)) {
          if (members[name].isEventStream === true) {
            return true;
          }
        }
      }

      return false;
    }
    /**
     * @api private
     */


    module.exports = Operation;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/model/paginator.js":
  /*!*****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/model/paginator.js ***!
    \*****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibModelPaginatorJs(module, exports, __webpack_require__) {
    var property = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js").property;

    function Paginator(name, paginator) {
      property(this, 'inputToken', paginator.input_token);
      property(this, 'limitKey', paginator.limit_key);
      property(this, 'moreResults', paginator.more_results);
      property(this, 'outputToken', paginator.output_token);
      property(this, 'resultKey', paginator.result_key);
    }
    /**
     * @api private
     */


    module.exports = Paginator;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/model/resource_waiter.js":
  /*!***********************************************************!*\
    !*** ./node_modules/aws-sdk/lib/model/resource_waiter.js ***!
    \***********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibModelResource_waiterJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var property = util.property;

    function ResourceWaiter(name, waiter, options) {
      options = options || {};
      property(this, 'name', name);
      property(this, 'api', options.api, false);

      if (waiter.operation) {
        property(this, 'operation', util.string.lowerFirst(waiter.operation));
      }

      var self = this;
      var keys = ['type', 'description', 'delay', 'maxAttempts', 'acceptors'];
      keys.forEach(function (key) {
        var value = waiter[key];

        if (value) {
          property(self, key, value);
        }
      });
    }
    /**
     * @api private
     */


    module.exports = ResourceWaiter;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/model/shape.js":
  /*!*************************************************!*\
    !*** ./node_modules/aws-sdk/lib/model/shape.js ***!
    \*************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibModelShapeJs(module, exports, __webpack_require__) {
    var Collection = __webpack_require__(
    /*! ./collection */
    "./node_modules/aws-sdk/lib/model/collection.js");

    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    function property(obj, name, value) {
      if (value !== null && value !== undefined) {
        util.property.apply(this, arguments);
      }
    }

    function memoizedProperty(obj, name) {
      if (!obj.constructor.prototype[name]) {
        util.memoizedProperty.apply(this, arguments);
      }
    }

    function Shape(shape, options, memberName) {
      options = options || {};
      property(this, 'shape', shape.shape);
      property(this, 'api', options.api, false);
      property(this, 'type', shape.type);
      property(this, 'enum', shape["enum"]);
      property(this, 'min', shape.min);
      property(this, 'max', shape.max);
      property(this, 'pattern', shape.pattern);
      property(this, 'location', shape.location || this.location || 'body');
      property(this, 'name', this.name || shape.xmlName || shape.queryName || shape.locationName || memberName);
      property(this, 'isStreaming', shape.streaming || this.isStreaming || false);
      property(this, 'requiresLength', shape.requiresLength, false);
      property(this, 'isComposite', shape.isComposite || false);
      property(this, 'isShape', true, false);
      property(this, 'isQueryName', Boolean(shape.queryName), false);
      property(this, 'isLocationName', Boolean(shape.locationName), false);
      property(this, 'isIdempotent', shape.idempotencyToken === true);
      property(this, 'isJsonValue', shape.jsonvalue === true);
      property(this, 'isSensitive', shape.sensitive === true || shape.prototype && shape.prototype.sensitive === true);
      property(this, 'isEventStream', Boolean(shape.eventstream), false);
      property(this, 'isEvent', Boolean(shape.event), false);
      property(this, 'isEventPayload', Boolean(shape.eventpayload), false);
      property(this, 'isEventHeader', Boolean(shape.eventheader), false);
      property(this, 'isTimestampFormatSet', Boolean(shape.timestampFormat) || shape.prototype && shape.prototype.isTimestampFormatSet === true, false);
      property(this, 'endpointDiscoveryId', Boolean(shape.endpointdiscoveryid), false);
      property(this, 'hostLabel', Boolean(shape.hostLabel), false);

      if (options.documentation) {
        property(this, 'documentation', shape.documentation);
        property(this, 'documentationUrl', shape.documentationUrl);
      }

      if (shape.xmlAttribute) {
        property(this, 'isXmlAttribute', shape.xmlAttribute || false);
      } // type conversion and parsing


      property(this, 'defaultValue', null);

      this.toWireFormat = function (value) {
        if (value === null || value === undefined) return '';
        return value;
      };

      this.toType = function (value) {
        return value;
      };
    }
    /**
     * @api private
     */


    Shape.normalizedTypes = {
      character: 'string',
      "double": 'float',
      "long": 'integer',
      "short": 'integer',
      biginteger: 'integer',
      bigdecimal: 'float',
      blob: 'binary'
    };
    /**
     * @api private
     */

    Shape.types = {
      'structure': StructureShape,
      'list': ListShape,
      'map': MapShape,
      'boolean': BooleanShape,
      'timestamp': TimestampShape,
      'float': FloatShape,
      'integer': IntegerShape,
      'string': StringShape,
      'base64': Base64Shape,
      'binary': BinaryShape
    };

    Shape.resolve = function resolve(shape, options) {
      if (shape.shape) {
        var refShape = options.api.shapes[shape.shape];

        if (!refShape) {
          throw new Error('Cannot find shape reference: ' + shape.shape);
        }

        return refShape;
      } else {
        return null;
      }
    };

    Shape.create = function create(shape, options, memberName) {
      if (shape.isShape) return shape;
      var refShape = Shape.resolve(shape, options);

      if (refShape) {
        var filteredKeys = Object.keys(shape);

        if (!options.documentation) {
          filteredKeys = filteredKeys.filter(function (name) {
            return !name.match(/documentation/);
          });
        } // create an inline shape with extra members


        var InlineShape = function InlineShape() {
          refShape.constructor.call(this, shape, options, memberName);
        };

        InlineShape.prototype = refShape;
        return new InlineShape();
      } else {
        // set type if not set
        if (!shape.type) {
          if (shape.members) shape.type = 'structure';else if (shape.member) shape.type = 'list';else if (shape.key) shape.type = 'map';else shape.type = 'string';
        } // normalize types


        var origType = shape.type;

        if (Shape.normalizedTypes[shape.type]) {
          shape.type = Shape.normalizedTypes[shape.type];
        }

        if (Shape.types[shape.type]) {
          return new Shape.types[shape.type](shape, options, memberName);
        } else {
          throw new Error('Unrecognized shape type: ' + origType);
        }
      }
    };

    function CompositeShape(shape) {
      Shape.apply(this, arguments);
      property(this, 'isComposite', true);

      if (shape.flattened) {
        property(this, 'flattened', shape.flattened || false);
      }
    }

    function StructureShape(shape, options) {
      var self = this;
      var requiredMap = null,
          firstInit = !this.isShape;
      CompositeShape.apply(this, arguments);

      if (firstInit) {
        property(this, 'defaultValue', function () {
          return {};
        });
        property(this, 'members', {});
        property(this, 'memberNames', []);
        property(this, 'required', []);
        property(this, 'isRequired', function () {
          return false;
        });
      }

      if (shape.members) {
        property(this, 'members', new Collection(shape.members, options, function (name, member) {
          return Shape.create(member, options, name);
        }));
        memoizedProperty(this, 'memberNames', function () {
          return shape.xmlOrder || Object.keys(shape.members);
        });

        if (shape.event) {
          memoizedProperty(this, 'eventPayloadMemberName', function () {
            var members = self.members;
            var memberNames = self.memberNames; // iterate over members to find ones that are event payloads

            for (var i = 0, iLen = memberNames.length; i < iLen; i++) {
              if (members[memberNames[i]].isEventPayload) {
                return memberNames[i];
              }
            }
          });
          memoizedProperty(this, 'eventHeaderMemberNames', function () {
            var members = self.members;
            var memberNames = self.memberNames;
            var eventHeaderMemberNames = []; // iterate over members to find ones that are event headers

            for (var i = 0, iLen = memberNames.length; i < iLen; i++) {
              if (members[memberNames[i]].isEventHeader) {
                eventHeaderMemberNames.push(memberNames[i]);
              }
            }

            return eventHeaderMemberNames;
          });
        }
      }

      if (shape.required) {
        property(this, 'required', shape.required);
        property(this, 'isRequired', function (name) {
          if (!requiredMap) {
            requiredMap = {};

            for (var i = 0; i < shape.required.length; i++) {
              requiredMap[shape.required[i]] = true;
            }
          }

          return requiredMap[name];
        }, false, true);
      }

      property(this, 'resultWrapper', shape.resultWrapper || null);

      if (shape.payload) {
        property(this, 'payload', shape.payload);
      }

      if (typeof shape.xmlNamespace === 'string') {
        property(this, 'xmlNamespaceUri', shape.xmlNamespace);
      } else if (typeof shape.xmlNamespace === 'object') {
        property(this, 'xmlNamespacePrefix', shape.xmlNamespace.prefix);
        property(this, 'xmlNamespaceUri', shape.xmlNamespace.uri);
      }
    }

    function ListShape(shape, options) {
      var self = this,
          firstInit = !this.isShape;
      CompositeShape.apply(this, arguments);

      if (firstInit) {
        property(this, 'defaultValue', function () {
          return [];
        });
      }

      if (shape.member) {
        memoizedProperty(this, 'member', function () {
          return Shape.create(shape.member, options);
        });
      }

      if (this.flattened) {
        var oldName = this.name;
        memoizedProperty(this, 'name', function () {
          return self.member.name || oldName;
        });
      }
    }

    function MapShape(shape, options) {
      var firstInit = !this.isShape;
      CompositeShape.apply(this, arguments);

      if (firstInit) {
        property(this, 'defaultValue', function () {
          return {};
        });
        property(this, 'key', Shape.create({
          type: 'string'
        }, options));
        property(this, 'value', Shape.create({
          type: 'string'
        }, options));
      }

      if (shape.key) {
        memoizedProperty(this, 'key', function () {
          return Shape.create(shape.key, options);
        });
      }

      if (shape.value) {
        memoizedProperty(this, 'value', function () {
          return Shape.create(shape.value, options);
        });
      }
    }

    function TimestampShape(shape) {
      var self = this;
      Shape.apply(this, arguments);

      if (shape.timestampFormat) {
        property(this, 'timestampFormat', shape.timestampFormat);
      } else if (self.isTimestampFormatSet && this.timestampFormat) {
        property(this, 'timestampFormat', this.timestampFormat);
      } else if (this.location === 'header') {
        property(this, 'timestampFormat', 'rfc822');
      } else if (this.location === 'querystring') {
        property(this, 'timestampFormat', 'iso8601');
      } else if (this.api) {
        switch (this.api.protocol) {
          case 'json':
          case 'rest-json':
            property(this, 'timestampFormat', 'unixTimestamp');
            break;

          case 'rest-xml':
          case 'query':
          case 'ec2':
            property(this, 'timestampFormat', 'iso8601');
            break;
        }
      }

      this.toType = function (value) {
        if (value === null || value === undefined) return null;
        if (typeof value.toUTCString === 'function') return value;
        return typeof value === 'string' || typeof value === 'number' ? util.date.parseTimestamp(value) : null;
      };

      this.toWireFormat = function (value) {
        return util.date.format(value, self.timestampFormat);
      };
    }

    function StringShape() {
      Shape.apply(this, arguments);
      var nullLessProtocols = ['rest-xml', 'query', 'ec2'];

      this.toType = function (value) {
        value = this.api && nullLessProtocols.indexOf(this.api.protocol) > -1 ? value || '' : value;

        if (this.isJsonValue) {
          return JSON.parse(value);
        }

        return value && typeof value.toString === 'function' ? value.toString() : value;
      };

      this.toWireFormat = function (value) {
        return this.isJsonValue ? JSON.stringify(value) : value;
      };
    }

    function FloatShape() {
      Shape.apply(this, arguments);

      this.toType = function (value) {
        if (value === null || value === undefined) return null;
        return parseFloat(value);
      };

      this.toWireFormat = this.toType;
    }

    function IntegerShape() {
      Shape.apply(this, arguments);

      this.toType = function (value) {
        if (value === null || value === undefined) return null;
        return parseInt(value, 10);
      };

      this.toWireFormat = this.toType;
    }

    function BinaryShape() {
      Shape.apply(this, arguments);

      this.toType = function (value) {
        var buf = util.base64.decode(value);

        if (this.isSensitive && util.isNode() && typeof util.Buffer.alloc === 'function') {
          /* Node.js can create a Buffer that is not isolated.
           * i.e. buf.byteLength !== buf.buffer.byteLength
           * This means that the sensitive data is accessible to anyone with access to buf.buffer.
           * If this is the node shared Buffer, then other code within this process _could_ find this secret.
           * Copy sensitive data to an isolated Buffer and zero the sensitive data.
           * While this is safe to do here, copying this code somewhere else may produce unexpected results.
           */
          var secureBuf = util.Buffer.alloc(buf.length, buf);
          buf.fill(0);
          buf = secureBuf;
        }

        return buf;
      };

      this.toWireFormat = util.base64.encode;
    }

    function Base64Shape() {
      BinaryShape.apply(this, arguments);
    }

    function BooleanShape() {
      Shape.apply(this, arguments);

      this.toType = function (value) {
        if (typeof value === 'boolean') return value;
        if (value === null || value === undefined) return null;
        return value === 'true';
      };
    }
    /**
     * @api private
     */


    Shape.shapes = {
      StructureShape: StructureShape,
      ListShape: ListShape,
      MapShape: MapShape,
      StringShape: StringShape,
      BooleanShape: BooleanShape,
      Base64Shape: Base64Shape
    };
    /**
     * @api private
     */

    module.exports = Shape;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/param_validator.js":
  /*!*****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/param_validator.js ***!
    \*****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibParam_validatorJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");
    /**
     * @api private
     */


    AWS.ParamValidator = AWS.util.inherit({
      /**
       * Create a new validator object.
       *
       * @param validation [Boolean|map] whether input parameters should be
       *     validated against the operation description before sending the
       *     request. Pass a map to enable any of the following specific
       *     validation features:
       *
       *     * **min** [Boolean] &mdash; Validates that a value meets the min
       *       constraint. This is enabled by default when paramValidation is set
       *       to `true`.
       *     * **max** [Boolean] &mdash; Validates that a value meets the max
       *       constraint.
       *     * **pattern** [Boolean] &mdash; Validates that a string value matches a
       *       regular expression.
       *     * **enum** [Boolean] &mdash; Validates that a string value matches one
       *       of the allowable enum values.
       */
      constructor: function ParamValidator(validation) {
        if (validation === true || validation === undefined) {
          validation = {
            'min': true
          };
        }

        this.validation = validation;
      },
      validate: function validate(shape, params, context) {
        this.errors = [];
        this.validateMember(shape, params || {}, context || 'params');

        if (this.errors.length > 1) {
          var msg = this.errors.join('\n* ');
          msg = 'There were ' + this.errors.length + ' validation errors:\n* ' + msg;
          throw AWS.util.error(new Error(msg), {
            code: 'MultipleValidationErrors',
            errors: this.errors
          });
        } else if (this.errors.length === 1) {
          throw this.errors[0];
        } else {
          return true;
        }
      },
      fail: function fail(code, message) {
        this.errors.push(AWS.util.error(new Error(message), {
          code: code
        }));
      },
      validateStructure: function validateStructure(shape, params, context) {
        this.validateType(params, context, ['object'], 'structure');
        var paramName;

        for (var i = 0; shape.required && i < shape.required.length; i++) {
          paramName = shape.required[i];
          var value = params[paramName];

          if (value === undefined || value === null) {
            this.fail('MissingRequiredParameter', 'Missing required key \'' + paramName + '\' in ' + context);
          }
        } // validate hash members


        for (paramName in params) {
          if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;
          var paramValue = params[paramName],
              memberShape = shape.members[paramName];

          if (memberShape !== undefined) {
            var memberContext = [context, paramName].join('.');
            this.validateMember(memberShape, paramValue, memberContext);
          } else {
            this.fail('UnexpectedParameter', 'Unexpected key \'' + paramName + '\' found in ' + context);
          }
        }

        return true;
      },
      validateMember: function validateMember(shape, param, context) {
        switch (shape.type) {
          case 'structure':
            return this.validateStructure(shape, param, context);

          case 'list':
            return this.validateList(shape, param, context);

          case 'map':
            return this.validateMap(shape, param, context);

          default:
            return this.validateScalar(shape, param, context);
        }
      },
      validateList: function validateList(shape, params, context) {
        if (this.validateType(params, context, [Array])) {
          this.validateRange(shape, params.length, context, 'list member count'); // validate array members

          for (var i = 0; i < params.length; i++) {
            this.validateMember(shape.member, params[i], context + '[' + i + ']');
          }
        }
      },
      validateMap: function validateMap(shape, params, context) {
        if (this.validateType(params, context, ['object'], 'map')) {
          // Build up a count of map members to validate range traits.
          var mapCount = 0;

          for (var param in params) {
            if (!Object.prototype.hasOwnProperty.call(params, param)) continue; // Validate any map key trait constraints

            this.validateMember(shape.key, param, context + '[key=\'' + param + '\']');
            this.validateMember(shape.value, params[param], context + '[\'' + param + '\']');
            mapCount++;
          }

          this.validateRange(shape, mapCount, context, 'map member count');
        }
      },
      validateScalar: function validateScalar(shape, value, context) {
        switch (shape.type) {
          case null:
          case undefined:
          case 'string':
            return this.validateString(shape, value, context);

          case 'base64':
          case 'binary':
            return this.validatePayload(value, context);

          case 'integer':
          case 'float':
            return this.validateNumber(shape, value, context);

          case 'boolean':
            return this.validateType(value, context, ['boolean']);

          case 'timestamp':
            return this.validateType(value, context, [Date, /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?Z$/, 'number'], 'Date object, ISO-8601 string, or a UNIX timestamp');

          default:
            return this.fail('UnkownType', 'Unhandled type ' + shape.type + ' for ' + context);
        }
      },
      validateString: function validateString(shape, value, context) {
        var validTypes = ['string'];

        if (shape.isJsonValue) {
          validTypes = validTypes.concat(['number', 'object', 'boolean']);
        }

        if (value !== null && this.validateType(value, context, validTypes)) {
          this.validateEnum(shape, value, context);
          this.validateRange(shape, value.length, context, 'string length');
          this.validatePattern(shape, value, context);
          this.validateUri(shape, value, context);
        }
      },
      validateUri: function validateUri(shape, value, context) {
        if (shape['location'] === 'uri') {
          if (value.length === 0) {
            this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,' + ' but found "' + value + '" for ' + context);
          }
        }
      },
      validatePattern: function validatePattern(shape, value, context) {
        if (this.validation['pattern'] && shape['pattern'] !== undefined) {
          if (!new RegExp(shape['pattern']).test(value)) {
            this.fail('PatternMatchError', 'Provided value "' + value + '" ' + 'does not match regex pattern /' + shape['pattern'] + '/ for ' + context);
          }
        }
      },
      validateRange: function validateRange(shape, value, context, descriptor) {
        if (this.validation['min']) {
          if (shape['min'] !== undefined && value < shape['min']) {
            this.fail('MinRangeError', 'Expected ' + descriptor + ' >= ' + shape['min'] + ', but found ' + value + ' for ' + context);
          }
        }

        if (this.validation['max']) {
          if (shape['max'] !== undefined && value > shape['max']) {
            this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= ' + shape['max'] + ', but found ' + value + ' for ' + context);
          }
        }
      },
      validateEnum: function validateRange(shape, value, context) {
        if (this.validation['enum'] && shape['enum'] !== undefined) {
          // Fail if the string value is not present in the enum list
          if (shape['enum'].indexOf(value) === -1) {
            this.fail('EnumError', 'Found string value of ' + value + ', but ' + 'expected ' + shape['enum'].join('|') + ' for ' + context);
          }
        }
      },
      validateType: function validateType(value, context, acceptedTypes, type) {
        // We will not log an error for null or undefined, but we will return
        // false so that callers know that the expected type was not strictly met.
        if (value === null || value === undefined) return false;
        var foundInvalidType = false;

        for (var i = 0; i < acceptedTypes.length; i++) {
          if (typeof acceptedTypes[i] === 'string') {
            if (typeof value === acceptedTypes[i]) return true;
          } else if (acceptedTypes[i] instanceof RegExp) {
            if ((value || '').toString().match(acceptedTypes[i])) return true;
          } else {
            if (value instanceof acceptedTypes[i]) return true;
            if (AWS.util.isType(value, acceptedTypes[i])) return true;
            if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();
            acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);
          }

          foundInvalidType = true;
        }

        var acceptedType = type;

        if (!acceptedType) {
          acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');
        }

        var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';
        this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' + vowel + ' ' + acceptedType);
        return false;
      },
      validateNumber: function validateNumber(shape, value, context) {
        if (value === null || value === undefined) return;

        if (typeof value === 'string') {
          var castedValue = parseFloat(value);
          if (castedValue.toString() === value) value = castedValue;
        }

        if (this.validateType(value, context, ['number'])) {
          this.validateRange(shape, value, context, 'numeric value');
        }
      },
      validatePayload: function validatePayload(value, context) {
        if (value === null || value === undefined) return;
        if (typeof value === 'string') return;
        if (value && typeof value.byteLength === 'number') return; // typed arrays

        if (AWS.util.isNode()) {
          // special check for buffer/stream in Node.js
          var Stream = AWS.util.stream.Stream;
          if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;
        } else {
          if (typeof Blob !== void 0 && value instanceof Blob) return;
        }

        var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];

        if (value) {
          for (var i = 0; i < types.length; i++) {
            if (AWS.util.isType(value, types[i])) return;
            if (AWS.util.typeName(value.constructor) === types[i]) return;
          }
        }

        this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' + 'string, Buffer, Stream, Blob, or typed array object');
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/protocol/helpers.js":
  /*!******************************************************!*\
    !*** ./node_modules/aws-sdk/lib/protocol/helpers.js ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibProtocolHelpersJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");
    /**
     * Prepend prefix defined by API model to endpoint that's already
     * constructed. This feature does not apply to operations using
     * endpoint discovery and can be disabled.
     * @api private
     */


    function populateHostPrefix(request) {
      var enabled = request.service.config.hostPrefixEnabled;
      if (!enabled) return request;
      var operationModel = request.service.api.operations[request.operation]; //don't marshal host prefix when operation has endpoint discovery traits

      if (hasEndpointDiscover(request)) return request;

      if (operationModel.endpoint && operationModel.endpoint.hostPrefix) {
        var hostPrefixNotation = operationModel.endpoint.hostPrefix;
        var hostPrefix = expandHostPrefix(hostPrefixNotation, request.params, operationModel.input);
        prependEndpointPrefix(request.httpRequest.endpoint, hostPrefix);
        validateHostname(request.httpRequest.endpoint.hostname);
      }

      return request;
    }
    /**
     * @api private
     */


    function hasEndpointDiscover(request) {
      var api = request.service.api;
      var operationModel = api.operations[request.operation];
      var isEndpointOperation = api.endpointOperation && api.endpointOperation === util.string.lowerFirst(operationModel.name);
      return operationModel.endpointDiscoveryRequired !== 'NULL' || isEndpointOperation === true;
    }
    /**
     * @api private
     */


    function expandHostPrefix(hostPrefixNotation, params, shape) {
      util.each(shape.members, function (name, member) {
        if (member.hostLabel === true) {
          if (typeof params[name] !== 'string' || params[name] === '') {
            throw util.error(new Error(), {
              message: 'Parameter ' + name + ' should be a non-empty string.',
              code: 'InvalidParameter'
            });
          }

          var regex = new RegExp('\\{' + name + '\\}', 'g');
          hostPrefixNotation = hostPrefixNotation.replace(regex, params[name]);
        }
      });
      return hostPrefixNotation;
    }
    /**
     * @api private
     */


    function prependEndpointPrefix(endpoint, prefix) {
      if (endpoint.host) {
        endpoint.host = prefix + endpoint.host;
      }

      if (endpoint.hostname) {
        endpoint.hostname = prefix + endpoint.hostname;
      }
    }
    /**
     * @api private
     */


    function validateHostname(hostname) {
      var labels = hostname.split('.'); //Reference: https://tools.ietf.org/html/rfc1123#section-2

      var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9]$/;
      util.arrayEach(labels, function (label) {
        if (!label.length || label.length < 1 || label.length > 63) {
          throw util.error(new Error(), {
            code: 'ValidationError',
            message: 'Hostname label length should be between 1 to 63 characters, inclusive.'
          });
        }

        if (!hostPattern.test(label)) {
          throw AWS.util.error(new Error(), {
            code: 'ValidationError',
            message: label + ' is not hostname compatible.'
          });
        }
      });
    }

    module.exports = {
      populateHostPrefix: populateHostPrefix
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/protocol/json.js":
  /*!***************************************************!*\
    !*** ./node_modules/aws-sdk/lib/protocol/json.js ***!
    \***************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibProtocolJsonJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var JsonBuilder = __webpack_require__(
    /*! ../json/builder */
    "./node_modules/aws-sdk/lib/json/builder.js");

    var JsonParser = __webpack_require__(
    /*! ../json/parser */
    "./node_modules/aws-sdk/lib/json/parser.js");

    var populateHostPrefix = __webpack_require__(
    /*! ./helpers */
    "./node_modules/aws-sdk/lib/protocol/helpers.js").populateHostPrefix;

    function buildRequest(req) {
      var httpRequest = req.httpRequest;
      var api = req.service.api;
      var target = api.targetPrefix + '.' + api.operations[req.operation].name;
      var version = api.jsonVersion || '1.0';
      var input = api.operations[req.operation].input;
      var builder = new JsonBuilder();
      if (version === 1) version = '1.0';
      httpRequest.body = builder.build(req.params || {}, input);
      httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;
      httpRequest.headers['X-Amz-Target'] = target;
      populateHostPrefix(req);
    }

    function extractError(resp) {
      var error = {};
      var httpResponse = resp.httpResponse;
      error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';

      if (typeof error.code === 'string') {
        error.code = error.code.split(':')[0];
      }

      if (httpResponse.body.length > 0) {
        try {
          var e = JSON.parse(httpResponse.body.toString());

          if (e.__type || e.code) {
            error.code = (e.__type || e.code).split('#').pop();
          }

          if (error.code === 'RequestEntityTooLarge') {
            error.message = 'Request body must be less than 1 MB';
          } else {
            error.message = e.message || e.Message || null;
          }
        } catch (e) {
          error.statusCode = httpResponse.statusCode;
          error.message = httpResponse.statusMessage;
        }
      } else {
        error.statusCode = httpResponse.statusCode;
        error.message = httpResponse.statusCode.toString();
      }

      resp.error = util.error(new Error(), error);
    }

    function extractData(resp) {
      var body = resp.httpResponse.body.toString() || '{}';

      if (resp.request.service.config.convertResponseTypes === false) {
        resp.data = JSON.parse(body);
      } else {
        var operation = resp.request.service.api.operations[resp.request.operation];
        var shape = operation.output || {};
        var parser = new JsonParser();
        resp.data = parser.parse(body, shape);
      }
    }
    /**
     * @api private
     */


    module.exports = {
      buildRequest: buildRequest,
      extractError: extractError,
      extractData: extractData
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/protocol/query.js":
  /*!****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/protocol/query.js ***!
    \****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibProtocolQueryJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var QueryParamSerializer = __webpack_require__(
    /*! ../query/query_param_serializer */
    "./node_modules/aws-sdk/lib/query/query_param_serializer.js");

    var Shape = __webpack_require__(
    /*! ../model/shape */
    "./node_modules/aws-sdk/lib/model/shape.js");

    var populateHostPrefix = __webpack_require__(
    /*! ./helpers */
    "./node_modules/aws-sdk/lib/protocol/helpers.js").populateHostPrefix;

    function buildRequest(req) {
      var operation = req.service.api.operations[req.operation];
      var httpRequest = req.httpRequest;
      httpRequest.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';
      httpRequest.params = {
        Version: req.service.api.apiVersion,
        Action: operation.name
      }; // convert the request parameters into a list of query params,
      // e.g. Deeply.NestedParam.0.Name=value

      var builder = new QueryParamSerializer();
      builder.serialize(req.params, operation.input, function (name, value) {
        httpRequest.params[name] = value;
      });
      httpRequest.body = util.queryParamsToString(httpRequest.params);
      populateHostPrefix(req);
    }

    function extractError(resp) {
      var data,
          body = resp.httpResponse.body.toString();

      if (body.match('<UnknownOperationException')) {
        data = {
          Code: 'UnknownOperation',
          Message: 'Unknown operation ' + resp.request.operation
        };
      } else {
        try {
          data = new AWS.XML.Parser().parse(body);
        } catch (e) {
          data = {
            Code: resp.httpResponse.statusCode,
            Message: resp.httpResponse.statusMessage
          };
        }
      }

      if (data.requestId && !resp.requestId) resp.requestId = data.requestId;
      if (data.Errors) data = data.Errors;
      if (data.Error) data = data.Error;

      if (data.Code) {
        resp.error = util.error(new Error(), {
          code: data.Code,
          message: data.Message
        });
      } else {
        resp.error = util.error(new Error(), {
          code: resp.httpResponse.statusCode,
          message: null
        });
      }
    }

    function extractData(resp) {
      var req = resp.request;
      var operation = req.service.api.operations[req.operation];
      var shape = operation.output || {};
      var origRules = shape;

      if (origRules.resultWrapper) {
        var tmp = Shape.create({
          type: 'structure'
        });
        tmp.members[origRules.resultWrapper] = shape;
        tmp.memberNames = [origRules.resultWrapper];
        util.property(shape, 'name', shape.resultWrapper);
        shape = tmp;
      }

      var parser = new AWS.XML.Parser(); // TODO: Refactor XML Parser to parse RequestId from response.

      if (shape && shape.members && !shape.members._XAMZRequestId) {
        var requestIdShape = Shape.create({
          type: 'string'
        }, {
          api: {
            protocol: 'query'
          }
        }, 'requestId');
        shape.members._XAMZRequestId = requestIdShape;
      }

      var data = parser.parse(resp.httpResponse.body.toString(), shape);
      resp.requestId = data._XAMZRequestId || data.requestId;
      if (data._XAMZRequestId) delete data._XAMZRequestId;

      if (origRules.resultWrapper) {
        if (data[origRules.resultWrapper]) {
          util.update(data, data[origRules.resultWrapper]);
          delete data[origRules.resultWrapper];
        }
      }

      resp.data = data;
    }
    /**
     * @api private
     */


    module.exports = {
      buildRequest: buildRequest,
      extractError: extractError,
      extractData: extractData
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/protocol/rest.js":
  /*!***************************************************!*\
    !*** ./node_modules/aws-sdk/lib/protocol/rest.js ***!
    \***************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibProtocolRestJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var populateHostPrefix = __webpack_require__(
    /*! ./helpers */
    "./node_modules/aws-sdk/lib/protocol/helpers.js").populateHostPrefix;

    function populateMethod(req) {
      req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;
    }

    function generateURI(endpointPath, operationPath, input, params) {
      var uri = [endpointPath, operationPath].join('/');
      uri = uri.replace(/\/+/g, '/');
      var queryString = {},
          queryStringSet = false;
      util.each(input.members, function (name, member) {
        var paramValue = params[name];
        if (paramValue === null || paramValue === undefined) return;

        if (member.location === 'uri') {
          var regex = new RegExp('\\{' + member.name + '(\\+)?\\}');
          uri = uri.replace(regex, function (_, plus) {
            var fn = plus ? util.uriEscapePath : util.uriEscape;
            return fn(String(paramValue));
          });
        } else if (member.location === 'querystring') {
          queryStringSet = true;

          if (member.type === 'list') {
            queryString[member.name] = paramValue.map(function (val) {
              return util.uriEscape(member.member.toWireFormat(val).toString());
            });
          } else if (member.type === 'map') {
            util.each(paramValue, function (key, value) {
              if (Array.isArray(value)) {
                queryString[key] = value.map(function (val) {
                  return util.uriEscape(String(val));
                });
              } else {
                queryString[key] = util.uriEscape(String(value));
              }
            });
          } else {
            queryString[member.name] = util.uriEscape(member.toWireFormat(paramValue).toString());
          }
        }
      });

      if (queryStringSet) {
        uri += uri.indexOf('?') >= 0 ? '&' : '?';
        var parts = [];
        util.arrayEach(Object.keys(queryString).sort(), function (key) {
          if (!Array.isArray(queryString[key])) {
            queryString[key] = [queryString[key]];
          }

          for (var i = 0; i < queryString[key].length; i++) {
            parts.push(util.uriEscape(String(key)) + '=' + queryString[key][i]);
          }
        });
        uri += parts.join('&');
      }

      return uri;
    }

    function populateURI(req) {
      var operation = req.service.api.operations[req.operation];
      var input = operation.input;
      var uri = generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);
      req.httpRequest.path = uri;
    }

    function populateHeaders(req) {
      var operation = req.service.api.operations[req.operation];
      util.each(operation.input.members, function (name, member) {
        var value = req.params[name];
        if (value === null || value === undefined) return;

        if (member.location === 'headers' && member.type === 'map') {
          util.each(value, function (key, memberValue) {
            req.httpRequest.headers[member.name + key] = memberValue;
          });
        } else if (member.location === 'header') {
          value = member.toWireFormat(value).toString();

          if (member.isJsonValue) {
            value = util.base64.encode(value);
          }

          req.httpRequest.headers[member.name] = value;
        }
      });
    }

    function buildRequest(req) {
      populateMethod(req);
      populateURI(req);
      populateHeaders(req);
      populateHostPrefix(req);
    }

    function extractError() {}

    function extractData(resp) {
      var req = resp.request;
      var data = {};
      var r = resp.httpResponse;
      var operation = req.service.api.operations[req.operation];
      var output = operation.output; // normalize headers names to lower-cased keys for matching

      var headers = {};
      util.each(r.headers, function (k, v) {
        headers[k.toLowerCase()] = v;
      });
      util.each(output.members, function (name, member) {
        var header = (member.name || name).toLowerCase();

        if (member.location === 'headers' && member.type === 'map') {
          data[name] = {};
          var location = member.isLocationName ? member.name : '';
          var pattern = new RegExp('^' + location + '(.+)', 'i');
          util.each(r.headers, function (k, v) {
            var result = k.match(pattern);

            if (result !== null) {
              data[name][result[1]] = v;
            }
          });
        } else if (member.location === 'header') {
          if (headers[header] !== undefined) {
            var value = member.isJsonValue ? util.base64.decode(headers[header]) : headers[header];
            data[name] = member.toType(value);
          }
        } else if (member.location === 'statusCode') {
          data[name] = parseInt(r.statusCode, 10);
        }
      });
      resp.data = data;
    }
    /**
     * @api private
     */


    module.exports = {
      buildRequest: buildRequest,
      extractError: extractError,
      extractData: extractData,
      generateURI: generateURI
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/protocol/rest_json.js":
  /*!********************************************************!*\
    !*** ./node_modules/aws-sdk/lib/protocol/rest_json.js ***!
    \********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibProtocolRest_jsonJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var Rest = __webpack_require__(
    /*! ./rest */
    "./node_modules/aws-sdk/lib/protocol/rest.js");

    var Json = __webpack_require__(
    /*! ./json */
    "./node_modules/aws-sdk/lib/protocol/json.js");

    var JsonBuilder = __webpack_require__(
    /*! ../json/builder */
    "./node_modules/aws-sdk/lib/json/builder.js");

    var JsonParser = __webpack_require__(
    /*! ../json/parser */
    "./node_modules/aws-sdk/lib/json/parser.js");

    function populateBody(req) {
      var builder = new JsonBuilder();
      var input = req.service.api.operations[req.operation].input;

      if (input.payload) {
        var params = {};
        var payloadShape = input.members[input.payload];
        params = req.params[input.payload];
        if (params === undefined) return;

        if (payloadShape.type === 'structure') {
          req.httpRequest.body = builder.build(params, payloadShape);
          applyContentTypeHeader(req);
        } else {
          // non-JSON payload
          req.httpRequest.body = params;

          if (payloadShape.type === 'binary' || payloadShape.isStreaming) {
            applyContentTypeHeader(req, true);
          }
        }
      } else {
        var body = builder.build(req.params, input);

        if (body !== '{}' || req.httpRequest.method !== 'GET') {
          //don't send empty body for GET method
          req.httpRequest.body = body;
        }

        applyContentTypeHeader(req);
      }
    }

    function applyContentTypeHeader(req, isBinary) {
      var operation = req.service.api.operations[req.operation];
      var input = operation.input;

      if (!req.httpRequest.headers['Content-Type']) {
        var type = isBinary ? 'binary/octet-stream' : 'application/json';
        req.httpRequest.headers['Content-Type'] = type;
      }
    }

    function buildRequest(req) {
      Rest.buildRequest(req); // never send body payload on HEAD/DELETE

      if (['HEAD', 'DELETE'].indexOf(req.httpRequest.method) < 0) {
        populateBody(req);
      }
    }

    function extractError(resp) {
      Json.extractError(resp);
    }

    function extractData(resp) {
      Rest.extractData(resp);
      var req = resp.request;
      var operation = req.service.api.operations[req.operation];
      var rules = req.service.api.operations[req.operation].output || {};
      var parser;
      var hasEventOutput = operation.hasEventOutput;

      if (rules.payload) {
        var payloadMember = rules.members[rules.payload];
        var body = resp.httpResponse.body;

        if (payloadMember.isEventStream) {
          parser = new JsonParser();
          resp.data[payload] = util.createEventStream(AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : body, parser, payloadMember);
        } else if (payloadMember.type === 'structure' || payloadMember.type === 'list') {
          var parser = new JsonParser();
          resp.data[rules.payload] = parser.parse(body, payloadMember);
        } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {
          resp.data[rules.payload] = body;
        } else {
          resp.data[rules.payload] = payloadMember.toType(body);
        }
      } else {
        var data = resp.data;
        Json.extractData(resp);
        resp.data = util.merge(data, resp.data);
      }
    }
    /**
     * @api private
     */


    module.exports = {
      buildRequest: buildRequest,
      extractError: extractError,
      extractData: extractData
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/protocol/rest_xml.js":
  /*!*******************************************************!*\
    !*** ./node_modules/aws-sdk/lib/protocol/rest_xml.js ***!
    \*******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibProtocolRest_xmlJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var Rest = __webpack_require__(
    /*! ./rest */
    "./node_modules/aws-sdk/lib/protocol/rest.js");

    function populateBody(req) {
      var input = req.service.api.operations[req.operation].input;
      var builder = new AWS.XML.Builder();
      var params = req.params;
      var payload = input.payload;

      if (payload) {
        var payloadMember = input.members[payload];
        params = params[payload];
        if (params === undefined) return;

        if (payloadMember.type === 'structure') {
          var rootElement = payloadMember.name;
          req.httpRequest.body = builder.toXML(params, payloadMember, rootElement, true);
        } else {
          // non-xml payload
          req.httpRequest.body = params;
        }
      } else {
        req.httpRequest.body = builder.toXML(params, input, input.name || input.shape || util.string.upperFirst(req.operation) + 'Request');
      }
    }

    function buildRequest(req) {
      Rest.buildRequest(req); // never send body payload on GET/HEAD

      if (['GET', 'HEAD'].indexOf(req.httpRequest.method) < 0) {
        populateBody(req);
      }
    }

    function extractError(resp) {
      Rest.extractError(resp);
      var data;

      try {
        data = new AWS.XML.Parser().parse(resp.httpResponse.body.toString());
      } catch (e) {
        data = {
          Code: resp.httpResponse.statusCode,
          Message: resp.httpResponse.statusMessage
        };
      }

      if (data.Errors) data = data.Errors;
      if (data.Error) data = data.Error;

      if (data.Code) {
        resp.error = util.error(new Error(), {
          code: data.Code,
          message: data.Message
        });
      } else {
        resp.error = util.error(new Error(), {
          code: resp.httpResponse.statusCode,
          message: null
        });
      }
    }

    function extractData(resp) {
      Rest.extractData(resp);
      var parser;
      var req = resp.request;
      var body = resp.httpResponse.body;
      var operation = req.service.api.operations[req.operation];
      var output = operation.output;
      var hasEventOutput = operation.hasEventOutput;
      var payload = output.payload;

      if (payload) {
        var payloadMember = output.members[payload];

        if (payloadMember.isEventStream) {
          parser = new AWS.XML.Parser();
          resp.data[payload] = util.createEventStream(AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : resp.httpResponse.body, parser, payloadMember);
        } else if (payloadMember.type === 'structure') {
          parser = new AWS.XML.Parser();
          resp.data[payload] = parser.parse(body.toString(), payloadMember);
        } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {
          resp.data[payload] = body;
        } else {
          resp.data[payload] = payloadMember.toType(body);
        }
      } else if (body.length > 0) {
        parser = new AWS.XML.Parser();
        var data = parser.parse(body.toString(), output);
        util.update(resp.data, data);
      }
    }
    /**
     * @api private
     */


    module.exports = {
      buildRequest: buildRequest,
      extractError: extractError,
      extractData: extractData
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/query/query_param_serializer.js":
  /*!******************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/query/query_param_serializer.js ***!
    \******************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibQueryQuery_param_serializerJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    function QueryParamSerializer() {}

    QueryParamSerializer.prototype.serialize = function (params, shape, fn) {
      serializeStructure('', params, shape, fn);
    };

    function ucfirst(shape) {
      if (shape.isQueryName || shape.api.protocol !== 'ec2') {
        return shape.name;
      } else {
        return shape.name[0].toUpperCase() + shape.name.substr(1);
      }
    }

    function serializeStructure(prefix, struct, rules, fn) {
      util.each(rules.members, function (name, member) {
        var value = struct[name];
        if (value === null || value === undefined) return;
        var memberName = ucfirst(member);
        memberName = prefix ? prefix + '.' + memberName : memberName;
        serializeMember(memberName, value, member, fn);
      });
    }

    function serializeMap(name, map, rules, fn) {
      var i = 1;
      util.each(map, function (key, value) {
        var prefix = rules.flattened ? '.' : '.entry.';
        var position = prefix + i++ + '.';
        var keyName = position + (rules.key.name || 'key');
        var valueName = position + (rules.value.name || 'value');
        serializeMember(name + keyName, key, rules.key, fn);
        serializeMember(name + valueName, value, rules.value, fn);
      });
    }

    function serializeList(name, list, rules, fn) {
      var memberRules = rules.member || {};

      if (list.length === 0) {
        fn.call(this, name, null);
        return;
      }

      util.arrayEach(list, function (v, n) {
        var suffix = '.' + (n + 1);

        if (rules.api.protocol === 'ec2') {
          // Do nothing for EC2
          suffix = suffix + ''; // make linter happy
        } else if (rules.flattened) {
          if (memberRules.name) {
            var parts = name.split('.');
            parts.pop();
            parts.push(ucfirst(memberRules));
            name = parts.join('.');
          }
        } else {
          suffix = '.' + (memberRules.name ? memberRules.name : 'member') + suffix;
        }

        serializeMember(name + suffix, v, memberRules, fn);
      });
    }

    function serializeMember(name, value, rules, fn) {
      if (value === null || value === undefined) return;

      if (rules.type === 'structure') {
        serializeStructure(name, value, rules, fn);
      } else if (rules.type === 'list') {
        serializeList(name, value, rules, fn);
      } else if (rules.type === 'map') {
        serializeMap(name, value, rules, fn);
      } else {
        fn(name, rules.toWireFormat(value).toString());
      }
    }
    /**
     * @api private
     */


    module.exports = QueryParamSerializer;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/realclock/browserClock.js":
  /*!************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/realclock/browserClock.js ***!
    \************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibRealclockBrowserClockJs(module, exports) {
    module.exports = {
      //provide realtime clock for performance measurement
      now: function now() {
        if (typeof performance !== 'undefined' && typeof performance.now === 'function') {
          return performance.now();
        }

        return Date.now();
      }
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/region_config.js":
  /*!***************************************************!*\
    !*** ./node_modules/aws-sdk/lib/region_config.js ***!
    \***************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibRegion_configJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ./util */
    "./node_modules/aws-sdk/lib/util.js");

    var regionConfig = __webpack_require__(
    /*! ./region_config_data.json */
    "./node_modules/aws-sdk/lib/region_config_data.json");

    function generateRegionPrefix(region) {
      if (!region) return null;
      var parts = region.split('-');
      if (parts.length < 3) return null;
      return parts.slice(0, parts.length - 2).join('-') + '-*';
    }

    function derivedKeys(service) {
      var region = service.config.region;
      var regionPrefix = generateRegionPrefix(region);
      var endpointPrefix = service.api.endpointPrefix;
      return [[region, endpointPrefix], [regionPrefix, endpointPrefix], [region, '*'], [regionPrefix, '*'], ['*', endpointPrefix], ['*', '*']].map(function (item) {
        return item[0] && item[1] ? item.join('/') : null;
      });
    }

    function applyConfig(service, config) {
      util.each(config, function (key, value) {
        if (key === 'globalEndpoint') return;

        if (service.config[key] === undefined || service.config[key] === null) {
          service.config[key] = value;
        }
      });
    }

    function configureEndpoint(service) {
      var keys = derivedKeys(service);

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (!key) continue;

        if (Object.prototype.hasOwnProperty.call(regionConfig.rules, key)) {
          var config = regionConfig.rules[key];

          if (typeof config === 'string') {
            config = regionConfig.patterns[config];
          } // set dualstack endpoint


          if (service.config.useDualstack && util.isDualstackAvailable(service)) {
            config = util.copy(config);
            config.endpoint = config.endpoint.replace(/{service}\.({region}\.)?/, '{service}.dualstack.{region}.');
          } // set global endpoint


          service.isGlobalEndpoint = !!config.globalEndpoint; // signature version

          if (!config.signatureVersion) config.signatureVersion = 'v4'; // merge config

          applyConfig(service, config);
          return;
        }
      }
    }

    function getEndpointSuffix(region) {
      var regionRegexes = {
        '^(us|eu|ap|sa|ca|me)\\-\\w+\\-\\d+$': 'amazonaws.com',
        '^cn\\-\\w+\\-\\d+$': 'amazonaws.com.cn',
        '^us\\-gov\\-\\w+\\-\\d+$': 'amazonaws.com',
        '^us\\-iso\\-\\w+\\-\\d+$': 'c2s.ic.gov',
        '^us\\-isob\\-\\w+\\-\\d+$': 'sc2s.sgov.gov'
      };
      var defaultSuffix = 'amazonaws.com';
      var regexes = Object.keys(regionRegexes);

      for (var i = 0; i < regexes.length; i++) {
        var regionPattern = RegExp(regexes[i]);
        var dnsSuffix = regionRegexes[regexes[i]];
        if (regionPattern.test(region)) return dnsSuffix;
      }

      return defaultSuffix;
    }
    /**
     * @api private
     */


    module.exports = {
      configureEndpoint: configureEndpoint,
      getEndpointSuffix: getEndpointSuffix
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/region_config_data.json":
  /*!**********************************************************!*\
    !*** ./node_modules/aws-sdk/lib/region_config_data.json ***!
    \**********************************************************/

  /*! exports provided: rules, patterns, default */

  /***/
  function node_modulesAwsSdkLibRegion_config_dataJson(module) {
    module.exports = JSON.parse("{\"rules\":{\"*/*\":{\"endpoint\":\"{service}.{region}.amazonaws.com\"},\"cn-*/*\":{\"endpoint\":\"{service}.{region}.amazonaws.com.cn\"},\"us-iso-*/*\":{\"endpoint\":\"{service}.{region}.c2s.ic.gov\"},\"us-isob-*/*\":{\"endpoint\":\"{service}.{region}.sc2s.sgov.gov\"},\"*/budgets\":\"globalSSL\",\"*/cloudfront\":\"globalSSL\",\"*/iam\":\"globalSSL\",\"*/sts\":\"globalSSL\",\"*/importexport\":{\"endpoint\":\"{service}.amazonaws.com\",\"signatureVersion\":\"v2\",\"globalEndpoint\":true},\"*/route53\":{\"endpoint\":\"https://{service}.amazonaws.com\",\"signatureVersion\":\"v3https\",\"globalEndpoint\":true},\"*/waf\":\"globalSSL\",\"us-gov-*/iam\":\"globalGovCloud\",\"us-gov-*/sts\":{\"endpoint\":\"{service}.{region}.amazonaws.com\"},\"us-gov-west-1/s3\":\"s3signature\",\"us-west-1/s3\":\"s3signature\",\"us-west-2/s3\":\"s3signature\",\"eu-west-1/s3\":\"s3signature\",\"ap-southeast-1/s3\":\"s3signature\",\"ap-southeast-2/s3\":\"s3signature\",\"ap-northeast-1/s3\":\"s3signature\",\"sa-east-1/s3\":\"s3signature\",\"us-east-1/s3\":{\"endpoint\":\"{service}.amazonaws.com\",\"signatureVersion\":\"s3\"},\"us-east-1/sdb\":{\"endpoint\":\"{service}.amazonaws.com\",\"signatureVersion\":\"v2\"},\"*/sdb\":{\"endpoint\":\"{service}.{region}.amazonaws.com\",\"signatureVersion\":\"v2\"}},\"patterns\":{\"globalSSL\":{\"endpoint\":\"https://{service}.amazonaws.com\",\"globalEndpoint\":true},\"globalGovCloud\":{\"endpoint\":\"{service}.us-gov.amazonaws.com\"},\"s3signature\":{\"endpoint\":\"{service}.{region}.amazonaws.com\",\"signatureVersion\":\"s3\"}}}");
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/request.js":
  /*!*********************************************!*\
    !*** ./node_modules/aws-sdk/lib/request.js ***!
    \*********************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibRequestJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");

    var AcceptorStateMachine = __webpack_require__(
    /*! ./state_machine */
    "./node_modules/aws-sdk/lib/state_machine.js");

    var inherit = AWS.util.inherit;
    var domain = AWS.util.domain;

    var jmespath = __webpack_require__(
    /*! jmespath */
    "./node_modules/jmespath/jmespath.js");
    /**
     * @api private
     */


    var hardErrorStates = {
      success: 1,
      error: 1,
      complete: 1
    };

    function isTerminalState(machine) {
      return Object.prototype.hasOwnProperty.call(hardErrorStates, machine._asm.currentState);
    }

    var fsm = new AcceptorStateMachine();

    fsm.setupStates = function () {
      var transition = function transition(_, done) {
        var self = this;
        self._haltHandlersOnError = false;
        self.emit(self._asm.currentState, function (err) {
          if (err) {
            if (isTerminalState(self)) {
              if (domain && self.domain instanceof domain.Domain) {
                err.domainEmitter = self;
                err.domain = self.domain;
                err.domainThrown = false;
                self.domain.emit('error', err);
              } else {
                throw err;
              }
            } else {
              self.response.error = err;
              done(err);
            }
          } else {
            done(self.response.error);
          }
        });
      };

      this.addState('validate', 'build', 'error', transition);
      this.addState('build', 'afterBuild', 'restart', transition);
      this.addState('afterBuild', 'sign', 'restart', transition);
      this.addState('sign', 'send', 'retry', transition);
      this.addState('retry', 'afterRetry', 'afterRetry', transition);
      this.addState('afterRetry', 'sign', 'error', transition);
      this.addState('send', 'validateResponse', 'retry', transition);
      this.addState('validateResponse', 'extractData', 'extractError', transition);
      this.addState('extractError', 'extractData', 'retry', transition);
      this.addState('extractData', 'success', 'retry', transition);
      this.addState('restart', 'build', 'error', transition);
      this.addState('success', 'complete', 'complete', transition);
      this.addState('error', 'complete', 'complete', transition);
      this.addState('complete', null, null, transition);
    };

    fsm.setupStates();
    /**
     * ## Asynchronous Requests
     *
     * All requests made through the SDK are asynchronous and use a
     * callback interface. Each service method that kicks off a request
     * returns an `AWS.Request` object that you can use to register
     * callbacks.
     *
     * For example, the following service method returns the request
     * object as "request", which can be used to register callbacks:
     *
     * ```javascript
     * // request is an AWS.Request object
     * var request = ec2.describeInstances();
     *
     * // register callbacks on request to retrieve response data
     * request.on('success', function(response) {
     *   console.log(response.data);
     * });
     * ```
     *
     * When a request is ready to be sent, the {send} method should
     * be called:
     *
     * ```javascript
     * request.send();
     * ```
     *
     * Since registered callbacks may or may not be idempotent, requests should only
     * be sent once. To perform the same operation multiple times, you will need to
     * create multiple request objects, each with its own registered callbacks.
     *
     * ## Removing Default Listeners for Events
     *
     * Request objects are built with default listeners for the various events,
     * depending on the service type. In some cases, you may want to remove
     * some built-in listeners to customize behaviour. Doing this requires
     * access to the built-in listener functions, which are exposed through
     * the {AWS.EventListeners.Core} namespace. For instance, you may
     * want to customize the HTTP handler used when sending a request. In this
     * case, you can remove the built-in listener associated with the 'send'
     * event, the {AWS.EventListeners.Core.SEND} listener and add your own.
     *
     * ## Multiple Callbacks and Chaining
     *
     * You can register multiple callbacks on any request object. The
     * callbacks can be registered for different events, or all for the
     * same event. In addition, you can chain callback registration, for
     * example:
     *
     * ```javascript
     * request.
     *   on('success', function(response) {
     *     console.log("Success!");
     *   }).
     *   on('error', function(error, response) {
     *     console.log("Error!");
     *   }).
     *   on('complete', function(response) {
     *     console.log("Always!");
     *   }).
     *   send();
     * ```
     *
     * The above example will print either "Success! Always!", or "Error! Always!",
     * depending on whether the request succeeded or not.
     *
     * @!attribute httpRequest
     *   @readonly
     *   @!group HTTP Properties
     *   @return [AWS.HttpRequest] the raw HTTP request object
     *     containing request headers and body information
     *     sent by the service.
     *
     * @!attribute startTime
     *   @readonly
     *   @!group Operation Properties
     *   @return [Date] the time that the request started
     *
     * @!group Request Building Events
     *
     * @!event validate(request)
     *   Triggered when a request is being validated. Listeners
     *   should throw an error if the request should not be sent.
     *   @param request [Request] the request object being sent
     *   @see AWS.EventListeners.Core.VALIDATE_CREDENTIALS
     *   @see AWS.EventListeners.Core.VALIDATE_REGION
     *   @example Ensuring that a certain parameter is set before sending a request
     *     var req = s3.putObject(params);
     *     req.on('validate', function() {
     *       if (!req.params.Body.match(/^Hello\s/)) {
     *         throw new Error('Body must start with "Hello "');
     *       }
     *     });
     *     req.send(function(err, data) { ... });
     *
     * @!event build(request)
     *   Triggered when the request payload is being built. Listeners
     *   should fill the necessary information to send the request
     *   over HTTP.
     *   @param (see AWS.Request~validate)
     *   @example Add a custom HTTP header to a request
     *     var req = s3.putObject(params);
     *     req.on('build', function() {
     *       req.httpRequest.headers['Custom-Header'] = 'value';
     *     });
     *     req.send(function(err, data) { ... });
     *
     * @!event sign(request)
     *   Triggered when the request is being signed. Listeners should
     *   add the correct authentication headers and/or adjust the body,
     *   depending on the authentication mechanism being used.
     *   @param (see AWS.Request~validate)
     *
     * @!group Request Sending Events
     *
     * @!event send(response)
     *   Triggered when the request is ready to be sent. Listeners
     *   should call the underlying transport layer to initiate
     *   the sending of the request.
     *   @param response [Response] the response object
     *   @context [Request] the request object that was sent
     *   @see AWS.EventListeners.Core.SEND
     *
     * @!event retry(response)
     *   Triggered when a request failed and might need to be retried or redirected.
     *   If the response is retryable, the listener should set the
     *   `response.error.retryable` property to `true`, and optionally set
     *   `response.error.retryDelay` to the millisecond delay for the next attempt.
     *   In the case of a redirect, `response.error.redirect` should be set to
     *   `true` with `retryDelay` set to an optional delay on the next request.
     *
     *   If a listener decides that a request should not be retried,
     *   it should set both `retryable` and `redirect` to false.
     *
     *   Note that a retryable error will be retried at most
     *   {AWS.Config.maxRetries} times (based on the service object's config).
     *   Similarly, a request that is redirected will only redirect at most
     *   {AWS.Config.maxRedirects} times.
     *
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *   @example Adding a custom retry for a 404 response
     *     request.on('retry', function(response) {
     *       // this resource is not yet available, wait 10 seconds to get it again
     *       if (response.httpResponse.statusCode === 404 && response.error) {
     *         response.error.retryable = true;   // retry this error
     *         response.error.retryDelay = 10000; // wait 10 seconds
     *       }
     *     });
     *
     * @!group Data Parsing Events
     *
     * @!event extractError(response)
     *   Triggered on all non-2xx requests so that listeners can extract
     *   error details from the response body. Listeners to this event
     *   should set the `response.error` property.
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *
     * @!event extractData(response)
     *   Triggered in successful requests to allow listeners to
     *   de-serialize the response body into `response.data`.
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *
     * @!group Completion Events
     *
     * @!event success(response)
     *   Triggered when the request completed successfully.
     *   `response.data` will contain the response data and
     *   `response.error` will be null.
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *
     * @!event error(error, response)
     *   Triggered when an error occurs at any point during the
     *   request. `response.error` will contain details about the error
     *   that occurred. `response.data` will be null.
     *   @param error [Error] the error object containing details about
     *     the error that occurred.
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *
     * @!event complete(response)
     *   Triggered whenever a request cycle completes. `response.error`
     *   should be checked, since the request may have failed.
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *
     * @!group HTTP Events
     *
     * @!event httpHeaders(statusCode, headers, response, statusMessage)
     *   Triggered when headers are sent by the remote server
     *   @param statusCode [Integer] the HTTP response code
     *   @param headers [map<String,String>] the response headers
     *   @param (see AWS.Request~send)
     *   @param statusMessage [String] A status message corresponding to the HTTP
     *                                 response code
     *   @context (see AWS.Request~send)
     *
     * @!event httpData(chunk, response)
     *   Triggered when data is sent by the remote server
     *   @param chunk [Buffer] the buffer data containing the next data chunk
     *     from the server
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *   @see AWS.EventListeners.Core.HTTP_DATA
     *
     * @!event httpUploadProgress(progress, response)
     *   Triggered when the HTTP request has uploaded more data
     *   @param progress [map] An object containing the `loaded` and `total` bytes
     *     of the request.
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *   @note This event will not be emitted in Node.js 0.8.x.
     *
     * @!event httpDownloadProgress(progress, response)
     *   Triggered when the HTTP request has downloaded more data
     *   @param progress [map] An object containing the `loaded` and `total` bytes
     *     of the request.
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *   @note This event will not be emitted in Node.js 0.8.x.
     *
     * @!event httpError(error, response)
     *   Triggered when the HTTP request failed
     *   @param error [Error] the error object that was thrown
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *
     * @!event httpDone(response)
     *   Triggered when the server is finished sending data
     *   @param (see AWS.Request~send)
     *   @context (see AWS.Request~send)
     *
     * @see AWS.Response
     */

    AWS.Request = inherit({
      /**
       * Creates a request for an operation on a given service with
       * a set of input parameters.
       *
       * @param service [AWS.Service] the service to perform the operation on
       * @param operation [String] the operation to perform on the service
       * @param params [Object] parameters to send to the operation.
       *   See the operation's documentation for the format of the
       *   parameters.
       */
      constructor: function Request(service, operation, params) {
        var endpoint = service.endpoint;
        var region = service.config.region;
        var customUserAgent = service.config.customUserAgent; // global endpoints sign as us-east-1

        if (service.isGlobalEndpoint) region = 'us-east-1';
        this.domain = domain && domain.active;
        this.service = service;
        this.operation = operation;
        this.params = params || {};
        this.httpRequest = new AWS.HttpRequest(endpoint, region);
        this.httpRequest.appendToUserAgent(customUserAgent);
        this.startTime = service.getSkewCorrectedDate();
        this.response = new AWS.Response(this);
        this._asm = new AcceptorStateMachine(fsm.states, 'validate');
        this._haltHandlersOnError = false;
        AWS.SequentialExecutor.call(this);
        this.emit = this.emitEvent;
      },

      /**
       * @!group Sending a Request
       */

      /**
       * @overload send(callback = null)
       *   Sends the request object.
       *
       *   @callback callback function(err, data)
       *     If a callback is supplied, it is called when a response is returned
       *     from the service.
       *     @context [AWS.Request] the request object being sent.
       *     @param err [Error] the error object returned from the request.
       *       Set to `null` if the request is successful.
       *     @param data [Object] the de-serialized data returned from
       *       the request. Set to `null` if a request error occurs.
       *   @example Sending a request with a callback
       *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});
       *     request.send(function(err, data) { console.log(err, data); });
       *   @example Sending a request with no callback (using event handlers)
       *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});
       *     request.on('complete', function(response) { ... }); // register a callback
       *     request.send();
       */
      send: function send(callback) {
        if (callback) {
          // append to user agent
          this.httpRequest.appendToUserAgent('callback');
          this.on('complete', function (resp) {
            callback.call(resp, resp.error, resp.data);
          });
        }

        this.runTo();
        return this.response;
      },

      /**
       * @!method  promise()
       *   Sends the request and returns a 'thenable' promise.
       *
       *   Two callbacks can be provided to the `then` method on the returned promise.
       *   The first callback will be called if the promise is fulfilled, and the second
       *   callback will be called if the promise is rejected.
       *   @callback fulfilledCallback function(data)
       *     Called if the promise is fulfilled.
       *     @param data [Object] the de-serialized data returned from the request.
       *   @callback rejectedCallback function(error)
       *     Called if the promise is rejected.
       *     @param error [Error] the error object returned from the request.
       *   @return [Promise] A promise that represents the state of the request.
       *   @example Sending a request using promises.
       *     var request = s3.putObject({Bucket: 'bucket', Key: 'key'});
       *     var result = request.promise();
       *     result.then(function(data) { ... }, function(error) { ... });
       */

      /**
       * @api private
       */
      build: function build(callback) {
        return this.runTo('send', callback);
      },

      /**
       * @api private
       */
      runTo: function runTo(state, done) {
        this._asm.runTo(state, done, this);

        return this;
      },

      /**
       * Aborts a request, emitting the error and complete events.
       *
       * @!macro nobrowser
       * @example Aborting a request after sending
       *   var params = {
       *     Bucket: 'bucket', Key: 'key',
       *     Body: Buffer.alloc(1024 * 1024 * 5) // 5MB payload
       *   };
       *   var request = s3.putObject(params);
       *   request.send(function (err, data) {
       *     if (err) console.log("Error:", err.code, err.message);
       *     else console.log(data);
       *   });
       *
       *   // abort request in 1 second
       *   setTimeout(request.abort.bind(request), 1000);
       *
       *   // prints "Error: RequestAbortedError Request aborted by user"
       * @return [AWS.Request] the same request object, for chaining.
       * @since v1.4.0
       */
      abort: function abort() {
        this.removeAllListeners('validateResponse');
        this.removeAllListeners('extractError');
        this.on('validateResponse', function addAbortedError(resp) {
          resp.error = AWS.util.error(new Error('Request aborted by user'), {
            code: 'RequestAbortedError',
            retryable: false
          });
        });

        if (this.httpRequest.stream && !this.httpRequest.stream.didCallback) {
          // abort HTTP stream
          this.httpRequest.stream.abort();

          if (this.httpRequest._abortCallback) {
            this.httpRequest._abortCallback();
          } else {
            this.removeAllListeners('send'); // haven't sent yet, so let's not
          }
        }

        return this;
      },

      /**
       * Iterates over each page of results given a pageable request, calling
       * the provided callback with each page of data. After all pages have been
       * retrieved, the callback is called with `null` data.
       *
       * @note This operation can generate multiple requests to a service.
       * @example Iterating over multiple pages of objects in an S3 bucket
       *   var pages = 1;
       *   s3.listObjects().eachPage(function(err, data) {
       *     if (err) return;
       *     console.log("Page", pages++);
       *     console.log(data);
       *   });
       * @example Iterating over multiple pages with an asynchronous callback
       *   s3.listObjects(params).eachPage(function(err, data, done) {
       *     doSomethingAsyncAndOrExpensive(function() {
       *       // The next page of results isn't fetched until done is called
       *       done();
       *     });
       *   });
       * @callback callback function(err, data, [doneCallback])
       *   Called with each page of resulting data from the request. If the
       *   optional `doneCallback` is provided in the function, it must be called
       *   when the callback is complete.
       *
       *   @param err [Error] an error object, if an error occurred.
       *   @param data [Object] a single page of response data. If there is no
       *     more data, this object will be `null`.
       *   @param doneCallback [Function] an optional done callback. If this
       *     argument is defined in the function declaration, it should be called
       *     when the next page is ready to be retrieved. This is useful for
       *     controlling serial pagination across asynchronous operations.
       *   @return [Boolean] if the callback returns `false`, pagination will
       *     stop.
       *
       * @see AWS.Request.eachItem
       * @see AWS.Response.nextPage
       * @since v1.4.0
       */
      eachPage: function eachPage(callback) {
        // Make all callbacks async-ish
        callback = AWS.util.fn.makeAsync(callback, 3);

        function wrappedCallback(response) {
          callback.call(response, response.error, response.data, function (result) {
            if (result === false) return;

            if (response.hasNextPage()) {
              response.nextPage().on('complete', wrappedCallback).send();
            } else {
              callback.call(response, null, null, AWS.util.fn.noop);
            }
          });
        }

        this.on('complete', wrappedCallback).send();
      },

      /**
       * Enumerates over individual items of a request, paging the responses if
       * necessary.
       *
       * @api experimental
       * @since v1.4.0
       */
      eachItem: function eachItem(callback) {
        var self = this;

        function wrappedCallback(err, data) {
          if (err) return callback(err, null);
          if (data === null) return callback(null, null);
          var config = self.service.paginationConfig(self.operation);
          var resultKey = config.resultKey;
          if (Array.isArray(resultKey)) resultKey = resultKey[0];
          var items = jmespath.search(data, resultKey);
          var continueIteration = true;
          AWS.util.arrayEach(items, function (item) {
            continueIteration = callback(null, item);

            if (continueIteration === false) {
              return AWS.util.abort;
            }
          });
          return continueIteration;
        }

        this.eachPage(wrappedCallback);
      },

      /**
       * @return [Boolean] whether the operation can return multiple pages of
       *   response data.
       * @see AWS.Response.eachPage
       * @since v1.4.0
       */
      isPageable: function isPageable() {
        return this.service.paginationConfig(this.operation) ? true : false;
      },

      /**
       * Sends the request and converts the request object into a readable stream
       * that can be read from or piped into a writable stream.
       *
       * @note The data read from a readable stream contains only
       *   the raw HTTP body contents.
       * @example Manually reading from a stream
       *   request.createReadStream().on('data', function(data) {
       *     console.log("Got data:", data.toString());
       *   });
       * @example Piping a request body into a file
       *   var out = fs.createWriteStream('/path/to/outfile.jpg');
       *   s3.service.getObject(params).createReadStream().pipe(out);
       * @return [Stream] the readable stream object that can be piped
       *   or read from (by registering 'data' event listeners).
       * @!macro nobrowser
       */
      createReadStream: function createReadStream() {
        var streams = AWS.util.stream;
        var req = this;
        var stream = null;

        if (AWS.HttpClient.streamsApiVersion === 2) {
          stream = new streams.PassThrough();
          process.nextTick(function () {
            req.send();
          });
        } else {
          stream = new streams.Stream();
          stream.readable = true;
          stream.sent = false;
          stream.on('newListener', function (event) {
            if (!stream.sent && event === 'data') {
              stream.sent = true;
              process.nextTick(function () {
                req.send();
              });
            }
          });
        }

        this.on('error', function (err) {
          stream.emit('error', err);
        });
        this.on('httpHeaders', function streamHeaders(statusCode, headers, resp) {
          if (statusCode < 300) {
            req.removeListener('httpData', AWS.EventListeners.Core.HTTP_DATA);
            req.removeListener('httpError', AWS.EventListeners.Core.HTTP_ERROR);
            req.on('httpError', function streamHttpError(error) {
              resp.error = error;
              resp.error.retryable = false;
            });
            var shouldCheckContentLength = false;
            var expectedLen;

            if (req.httpRequest.method !== 'HEAD') {
              expectedLen = parseInt(headers['content-length'], 10);
            }

            if (expectedLen !== undefined && !isNaN(expectedLen) && expectedLen >= 0) {
              shouldCheckContentLength = true;
              var receivedLen = 0;
            }

            var checkContentLengthAndEmit = function checkContentLengthAndEmit() {
              if (shouldCheckContentLength && receivedLen !== expectedLen) {
                stream.emit('error', AWS.util.error(new Error('Stream content length mismatch. Received ' + receivedLen + ' of ' + expectedLen + ' bytes.'), {
                  code: 'StreamContentLengthMismatch'
                }));
              } else if (AWS.HttpClient.streamsApiVersion === 2) {
                stream.end();
              } else {
                stream.emit('end');
              }
            };

            var httpStream = resp.httpResponse.createUnbufferedStream();

            if (AWS.HttpClient.streamsApiVersion === 2) {
              if (shouldCheckContentLength) {
                var lengthAccumulator = new streams.PassThrough();

                lengthAccumulator._write = function (chunk) {
                  if (chunk && chunk.length) {
                    receivedLen += chunk.length;
                  }

                  return streams.PassThrough.prototype._write.apply(this, arguments);
                };

                lengthAccumulator.on('end', checkContentLengthAndEmit);
                stream.on('error', function (err) {
                  shouldCheckContentLength = false;
                  httpStream.unpipe(lengthAccumulator);
                  lengthAccumulator.emit('end');
                  lengthAccumulator.end();
                });
                httpStream.pipe(lengthAccumulator).pipe(stream, {
                  end: false
                });
              } else {
                httpStream.pipe(stream);
              }
            } else {
              if (shouldCheckContentLength) {
                httpStream.on('data', function (arg) {
                  if (arg && arg.length) {
                    receivedLen += arg.length;
                  }
                });
              }

              httpStream.on('data', function (arg) {
                stream.emit('data', arg);
              });
              httpStream.on('end', checkContentLengthAndEmit);
            }

            httpStream.on('error', function (err) {
              shouldCheckContentLength = false;
              stream.emit('error', err);
            });
          }
        });
        return stream;
      },

      /**
       * @param [Array,Response] args This should be the response object,
       *   or an array of args to send to the event.
       * @api private
       */
      emitEvent: function emit(eventName, args, done) {
        if (typeof args === 'function') {
          done = args;
          args = null;
        }

        if (!done) done = function done() {};
        if (!args) args = this.eventParameters(eventName, this.response);
        var origEmit = AWS.SequentialExecutor.prototype.emit;
        origEmit.call(this, eventName, args, function (err) {
          if (err) this.response.error = err;
          done.call(this, err);
        });
      },

      /**
       * @api private
       */
      eventParameters: function eventParameters(eventName) {
        switch (eventName) {
          case 'restart':
          case 'validate':
          case 'sign':
          case 'build':
          case 'afterValidate':
          case 'afterBuild':
            return [this];

          case 'error':
            return [this.response.error, this.response];

          default:
            return [this.response];
        }
      },

      /**
       * @api private
       */
      presign: function presign(expires, callback) {
        if (!callback && typeof expires === 'function') {
          callback = expires;
          expires = null;
        }

        return new AWS.Signers.Presign().sign(this.toGet(), expires, callback);
      },

      /**
       * @api private
       */
      isPresigned: function isPresigned() {
        return Object.prototype.hasOwnProperty.call(this.httpRequest.headers, 'presigned-expires');
      },

      /**
       * @api private
       */
      toUnauthenticated: function toUnauthenticated() {
        this._unAuthenticated = true;
        this.removeListener('validate', AWS.EventListeners.Core.VALIDATE_CREDENTIALS);
        this.removeListener('sign', AWS.EventListeners.Core.SIGN);
        return this;
      },

      /**
       * @api private
       */
      toGet: function toGet() {
        if (this.service.api.protocol === 'query' || this.service.api.protocol === 'ec2') {
          this.removeListener('build', this.buildAsGet);
          this.addListener('build', this.buildAsGet);
        }

        return this;
      },

      /**
       * @api private
       */
      buildAsGet: function buildAsGet(request) {
        request.httpRequest.method = 'GET';
        request.httpRequest.path = request.service.endpoint.path + '?' + request.httpRequest.body;
        request.httpRequest.body = ''; // don't need these headers on a GET request

        delete request.httpRequest.headers['Content-Length'];
        delete request.httpRequest.headers['Content-Type'];
      },

      /**
       * @api private
       */
      haltHandlersOnError: function haltHandlersOnError() {
        this._haltHandlersOnError = true;
      }
    });
    /**
     * @api private
     */

    AWS.Request.addPromisesToClass = function addPromisesToClass(PromiseDependency) {
      this.prototype.promise = function promise() {
        var self = this; // append to user agent

        this.httpRequest.appendToUserAgent('promise');
        return new PromiseDependency(function (resolve, reject) {
          self.on('complete', function (resp) {
            if (resp.error) {
              reject(resp.error);
            } else {
              // define $response property so that it is not enumberable
              // this prevents circular reference errors when stringifying the JSON object
              resolve(Object.defineProperty(resp.data || {}, '$response', {
                value: resp
              }));
            }
          });
          self.runTo();
        });
      };
    };
    /**
     * @api private
     */


    AWS.Request.deletePromisesFromClass = function deletePromisesFromClass() {
      delete this.prototype.promise;
    };

    AWS.util.addPromises(AWS.Request);
    AWS.util.mixin(AWS.Request, AWS.SequentialExecutor);
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/resource_waiter.js":
  /*!*****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/resource_waiter.js ***!
    \*****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibResource_waiterJs(module, exports, __webpack_require__) {
    /**
     * Copyright 2012-2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.
     *
     * Licensed under the Apache License, Version 2.0 (the "License"). You
     * may not use this file except in compliance with the License. A copy of
     * the License is located at
     *
     *     http://aws.amazon.com/apache2.0/
     *
     * or in the "license" file accompanying this file. This file is
     * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
     * ANY KIND, either express or implied. See the License for the specific
     * language governing permissions and limitations under the License.
     */
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;

    var jmespath = __webpack_require__(
    /*! jmespath */
    "./node_modules/jmespath/jmespath.js");
    /**
     * @api private
     */


    function CHECK_ACCEPTORS(resp) {
      var waiter = resp.request._waiter;
      var acceptors = waiter.config.acceptors;
      var acceptorMatched = false;
      var state = 'retry';
      acceptors.forEach(function (acceptor) {
        if (!acceptorMatched) {
          var matcher = waiter.matchers[acceptor.matcher];

          if (matcher && matcher(resp, acceptor.expected, acceptor.argument)) {
            acceptorMatched = true;
            state = acceptor.state;
          }
        }
      });
      if (!acceptorMatched && resp.error) state = 'failure';

      if (state === 'success') {
        waiter.setSuccess(resp);
      } else {
        waiter.setError(resp, state === 'retry');
      }
    }
    /**
     * @api private
     */


    AWS.ResourceWaiter = inherit({
      /**
       * Waits for a given state on a service object
       * @param service [Service] the service object to wait on
       * @param state [String] the state (defined in waiter configuration) to wait
       *   for.
       * @example Create a waiter for running EC2 instances
       *   var ec2 = new AWS.EC2;
       *   var waiter = new AWS.ResourceWaiter(ec2, 'instanceRunning');
       */
      constructor: function constructor(service, state) {
        this.service = service;
        this.state = state;
        this.loadWaiterConfig(this.state);
      },
      service: null,
      state: null,
      config: null,
      matchers: {
        path: function path(resp, expected, argument) {
          try {
            var result = jmespath.search(resp.data, argument);
          } catch (err) {
            return false;
          }

          return jmespath.strictDeepEqual(result, expected);
        },
        pathAll: function pathAll(resp, expected, argument) {
          try {
            var results = jmespath.search(resp.data, argument);
          } catch (err) {
            return false;
          }

          if (!Array.isArray(results)) results = [results];
          var numResults = results.length;
          if (!numResults) return false;

          for (var ind = 0; ind < numResults; ind++) {
            if (!jmespath.strictDeepEqual(results[ind], expected)) {
              return false;
            }
          }

          return true;
        },
        pathAny: function pathAny(resp, expected, argument) {
          try {
            var results = jmespath.search(resp.data, argument);
          } catch (err) {
            return false;
          }

          if (!Array.isArray(results)) results = [results];
          var numResults = results.length;

          for (var ind = 0; ind < numResults; ind++) {
            if (jmespath.strictDeepEqual(results[ind], expected)) {
              return true;
            }
          }

          return false;
        },
        status: function status(resp, expected) {
          var statusCode = resp.httpResponse.statusCode;
          return typeof statusCode === 'number' && statusCode === expected;
        },
        error: function error(resp, expected) {
          if (typeof expected === 'string' && resp.error) {
            return expected === resp.error.code;
          } // if expected is not string, can be boolean indicating presence of error


          return expected === !!resp.error;
        }
      },
      listeners: new AWS.SequentialExecutor().addNamedListeners(function (add) {
        add('RETRY_CHECK', 'retry', function (resp) {
          var waiter = resp.request._waiter;

          if (resp.error && resp.error.code === 'ResourceNotReady') {
            resp.error.retryDelay = (waiter.config.delay || 0) * 1000;
          }
        });
        add('CHECK_OUTPUT', 'extractData', CHECK_ACCEPTORS);
        add('CHECK_ERROR', 'extractError', CHECK_ACCEPTORS);
      }),

      /**
       * @return [AWS.Request]
       */
      wait: function wait(params, callback) {
        if (typeof params === 'function') {
          callback = params;
          params = undefined;
        }

        if (params && params.$waiter) {
          params = AWS.util.copy(params);

          if (typeof params.$waiter.delay === 'number') {
            this.config.delay = params.$waiter.delay;
          }

          if (typeof params.$waiter.maxAttempts === 'number') {
            this.config.maxAttempts = params.$waiter.maxAttempts;
          }

          delete params.$waiter;
        }

        var request = this.service.makeRequest(this.config.operation, params);
        request._waiter = this;
        request.response.maxRetries = this.config.maxAttempts;
        request.addListeners(this.listeners);
        if (callback) request.send(callback);
        return request;
      },
      setSuccess: function setSuccess(resp) {
        resp.error = null;
        resp.data = resp.data || {};
        resp.request.removeAllListeners('extractData');
      },
      setError: function setError(resp, retryable) {
        resp.data = null;
        resp.error = AWS.util.error(resp.error || new Error(), {
          code: 'ResourceNotReady',
          message: 'Resource is not in the state ' + this.state,
          retryable: retryable
        });
      },

      /**
       * Loads waiter configuration from API configuration
       *
       * @api private
       */
      loadWaiterConfig: function loadWaiterConfig(state) {
        if (!this.service.api.waiters[state]) {
          throw new AWS.util.error(new Error(), {
            code: 'StateNotFoundError',
            message: 'State ' + state + ' not found.'
          });
        }

        this.config = AWS.util.copy(this.service.api.waiters[state]);
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/response.js":
  /*!**********************************************!*\
    !*** ./node_modules/aws-sdk/lib/response.js ***!
    \**********************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibResponseJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;

    var jmespath = __webpack_require__(
    /*! jmespath */
    "./node_modules/jmespath/jmespath.js");
    /**
     * This class encapsulates the response information
     * from a service request operation sent through {AWS.Request}.
     * The response object has two main properties for getting information
     * back from a request:
     *
     * ## The `data` property
     *
     * The `response.data` property contains the serialized object data
     * retrieved from the service request. For instance, for an
     * Amazon DynamoDB `listTables` method call, the response data might
     * look like:
     *
     * ```
     * > resp.data
     * { TableNames:
     *    [ 'table1', 'table2', ... ] }
     * ```
     *
     * The `data` property can be null if an error occurs (see below).
     *
     * ## The `error` property
     *
     * In the event of a service error (or transfer error), the
     * `response.error` property will be filled with the given
     * error data in the form:
     *
     * ```
     * { code: 'SHORT_UNIQUE_ERROR_CODE',
     *   message: 'Some human readable error message' }
     * ```
     *
     * In the case of an error, the `data` property will be `null`.
     * Note that if you handle events that can be in a failure state,
     * you should always check whether `response.error` is set
     * before attempting to access the `response.data` property.
     *
     * @!attribute data
     *   @readonly
     *   @!group Data Properties
     *   @note Inside of a {AWS.Request~httpData} event, this
     *     property contains a single raw packet instead of the
     *     full de-serialized service response.
     *   @return [Object] the de-serialized response data
     *     from the service.
     *
     * @!attribute error
     *   An structure containing information about a service
     *   or networking error.
     *   @readonly
     *   @!group Data Properties
     *   @note This attribute is only filled if a service or
     *     networking error occurs.
     *   @return [Error]
     *     * code [String] a unique short code representing the
     *       error that was emitted.
     *     * message [String] a longer human readable error message
     *     * retryable [Boolean] whether the error message is
     *       retryable.
     *     * statusCode [Numeric] in the case of a request that reached the service,
     *       this value contains the response status code.
     *     * time [Date] the date time object when the error occurred.
     *     * hostname [String] set when a networking error occurs to easily
     *       identify the endpoint of the request.
     *     * region [String] set when a networking error occurs to easily
     *       identify the region of the request.
     *
     * @!attribute requestId
     *   @readonly
     *   @!group Data Properties
     *   @return [String] the unique request ID associated with the response.
     *     Log this value when debugging requests for AWS support.
     *
     * @!attribute retryCount
     *   @readonly
     *   @!group Operation Properties
     *   @return [Integer] the number of retries that were
     *     attempted before the request was completed.
     *
     * @!attribute redirectCount
     *   @readonly
     *   @!group Operation Properties
     *   @return [Integer] the number of redirects that were
     *     followed before the request was completed.
     *
     * @!attribute httpResponse
     *   @readonly
     *   @!group HTTP Properties
     *   @return [AWS.HttpResponse] the raw HTTP response object
     *     containing the response headers and body information
     *     from the server.
     *
     * @see AWS.Request
     */


    AWS.Response = inherit({
      /**
       * @api private
       */
      constructor: function Response(request) {
        this.request = request;
        this.data = null;
        this.error = null;
        this.retryCount = 0;
        this.redirectCount = 0;
        this.httpResponse = new AWS.HttpResponse();

        if (request) {
          this.maxRetries = request.service.numRetries();
          this.maxRedirects = request.service.config.maxRedirects;
        }
      },

      /**
       * Creates a new request for the next page of response data, calling the
       * callback with the page data if a callback is provided.
       *
       * @callback callback function(err, data)
       *   Called when a page of data is returned from the next request.
       *
       *   @param err [Error] an error object, if an error occurred in the request
       *   @param data [Object] the next page of data, or null, if there are no
       *     more pages left.
       * @return [AWS.Request] the request object for the next page of data
       * @return [null] if no callback is provided and there are no pages left
       *   to retrieve.
       * @since v1.4.0
       */
      nextPage: function nextPage(callback) {
        var config;
        var service = this.request.service;
        var operation = this.request.operation;

        try {
          config = service.paginationConfig(operation, true);
        } catch (e) {
          this.error = e;
        }

        if (!this.hasNextPage()) {
          if (callback) callback(this.error, null);else if (this.error) throw this.error;
          return null;
        }

        var params = AWS.util.copy(this.request.params);

        if (!this.nextPageTokens) {
          return callback ? callback(null, null) : null;
        } else {
          var inputTokens = config.inputToken;
          if (typeof inputTokens === 'string') inputTokens = [inputTokens];

          for (var i = 0; i < inputTokens.length; i++) {
            params[inputTokens[i]] = this.nextPageTokens[i];
          }

          return service.makeRequest(this.request.operation, params, callback);
        }
      },

      /**
       * @return [Boolean] whether more pages of data can be returned by further
       *   requests
       * @since v1.4.0
       */
      hasNextPage: function hasNextPage() {
        this.cacheNextPageTokens();
        if (this.nextPageTokens) return true;
        if (this.nextPageTokens === undefined) return undefined;else return false;
      },

      /**
       * @api private
       */
      cacheNextPageTokens: function cacheNextPageTokens() {
        if (Object.prototype.hasOwnProperty.call(this, 'nextPageTokens')) return this.nextPageTokens;
        this.nextPageTokens = undefined;
        var config = this.request.service.paginationConfig(this.request.operation);
        if (!config) return this.nextPageTokens;
        this.nextPageTokens = null;

        if (config.moreResults) {
          if (!jmespath.search(this.data, config.moreResults)) {
            return this.nextPageTokens;
          }
        }

        var exprs = config.outputToken;
        if (typeof exprs === 'string') exprs = [exprs];
        AWS.util.arrayEach.call(this, exprs, function (expr) {
          var output = jmespath.search(this.data, expr);

          if (output) {
            this.nextPageTokens = this.nextPageTokens || [];
            this.nextPageTokens.push(output);
          }
        });
        return this.nextPageTokens;
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/s3/managed_upload.js":
  /*!*******************************************************!*\
    !*** ./node_modules/aws-sdk/lib/s3/managed_upload.js ***!
    \*******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibS3Managed_uploadJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var byteLength = AWS.util.string.byteLength;
    var Buffer = AWS.util.Buffer;
    /**
     * The managed uploader allows for easy and efficient uploading of buffers,
     * blobs, or streams, using a configurable amount of concurrency to perform
     * multipart uploads where possible. This abstraction also enables uploading
     * streams of unknown size due to the use of multipart uploads.
     *
     * To construct a managed upload object, see the {constructor} function.
     *
     * ## Tracking upload progress
     *
     * The managed upload object can also track progress by attaching an
     * 'httpUploadProgress' listener to the upload manager. This event is similar
     * to {AWS.Request~httpUploadProgress} but groups all concurrent upload progress
     * into a single event. See {AWS.S3.ManagedUpload~httpUploadProgress} for more
     * information.
     *
     * ## Handling Multipart Cleanup
     *
     * By default, this class will automatically clean up any multipart uploads
     * when an individual part upload fails. This behavior can be disabled in order
     * to manually handle failures by setting the `leavePartsOnError` configuration
     * option to `true` when initializing the upload object.
     *
     * @!event httpUploadProgress(progress)
     *   Triggered when the uploader has uploaded more data.
     *   @note The `total` property may not be set if the stream being uploaded has
     *     not yet finished chunking. In this case the `total` will be undefined
     *     until the total stream size is known.
     *   @note This event will not be emitted in Node.js 0.8.x.
     *   @param progress [map] An object containing the `loaded` and `total` bytes
     *     of the request and the `key` of the S3 object. Note that `total` may be undefined until the payload
     *     size is known.
     *   @context (see AWS.Request~send)
     */

    AWS.S3.ManagedUpload = AWS.util.inherit({
      /**
       * Creates a managed upload object with a set of configuration options.
       *
       * @note A "Body" parameter is required to be set prior to calling {send}.
       * @note In Node.js, sending "Body" as {https://nodejs.org/dist/latest/docs/api/stream.html#stream_object_mode object-mode stream}
       *   may result in upload hangs. Using buffer stream is preferable.
       * @option options params [map] a map of parameters to pass to the upload
       *   requests. The "Body" parameter is required to be specified either on
       *   the service or in the params option.
       * @note ContentMD5 should not be provided when using the managed upload object.
       *   Instead, setting "computeChecksums" to true will enable automatic ContentMD5 generation
       *   by the managed upload object.
       * @option options queueSize [Number] (4) the size of the concurrent queue
       *   manager to upload parts in parallel. Set to 1 for synchronous uploading
       *   of parts. Note that the uploader will buffer at most queueSize * partSize
       *   bytes into memory at any given time.
       * @option options partSize [Number] (5mb) the size in bytes for each
       *   individual part to be uploaded. Adjust the part size to ensure the number
       *   of parts does not exceed {maxTotalParts}. See {minPartSize} for the
       *   minimum allowed part size.
       * @option options leavePartsOnError [Boolean] (false) whether to abort the
       *   multipart upload if an error occurs. Set to true if you want to handle
       *   failures manually.
       * @option options service [AWS.S3] an optional S3 service object to use for
       *   requests. This object might have bound parameters used by the uploader.
       * @option options tags [Array<map>] The tags to apply to the uploaded object.
       *   Each tag should have a `Key` and `Value` keys.
       * @example Creating a default uploader for a stream object
       *   var upload = new AWS.S3.ManagedUpload({
       *     params: {Bucket: 'bucket', Key: 'key', Body: stream}
       *   });
       * @example Creating an uploader with concurrency of 1 and partSize of 10mb
       *   var upload = new AWS.S3.ManagedUpload({
       *     partSize: 10 * 1024 * 1024, queueSize: 1,
       *     params: {Bucket: 'bucket', Key: 'key', Body: stream}
       *   });
       * @example Creating an uploader with tags
       *   var upload = new AWS.S3.ManagedUpload({
       *     params: {Bucket: 'bucket', Key: 'key', Body: stream},
       *     tags: [{Key: 'tag1', Value: 'value1'}, {Key: 'tag2', Value: 'value2'}]
       *   });
       * @see send
       */
      constructor: function ManagedUpload(options) {
        var self = this;
        AWS.SequentialExecutor.call(self);
        self.body = null;
        self.sliceFn = null;
        self.callback = null;
        self.parts = {};
        self.completeInfo = [];

        self.fillQueue = function () {
          self.callback(new Error('Unsupported body payload ' + typeof self.body));
        };

        self.configure(options);
      },

      /**
       * @api private
       */
      configure: function configure(options) {
        options = options || {};
        this.partSize = this.minPartSize;
        if (options.queueSize) this.queueSize = options.queueSize;
        if (options.partSize) this.partSize = options.partSize;
        if (options.leavePartsOnError) this.leavePartsOnError = true;

        if (options.tags) {
          if (!Array.isArray(options.tags)) {
            throw new Error('Tags must be specified as an array; ' + typeof options.tags + ' provided.');
          }

          this.tags = options.tags;
        }

        if (this.partSize < this.minPartSize) {
          throw new Error('partSize must be greater than ' + this.minPartSize);
        }

        this.service = options.service;
        this.bindServiceObject(options.params);
        this.validateBody();
        this.adjustTotalBytes();
      },

      /**
       * @api private
       */
      leavePartsOnError: false,

      /**
       * @api private
       */
      queueSize: 4,

      /**
       * @api private
       */
      partSize: null,

      /**
       * @readonly
       * @return [Number] the minimum number of bytes for an individual part
       *   upload.
       */
      minPartSize: 1024 * 1024 * 5,

      /**
       * @readonly
       * @return [Number] the maximum allowed number of parts in a multipart upload.
       */
      maxTotalParts: 10000,

      /**
       * Initiates the managed upload for the payload.
       *
       * @callback callback function(err, data)
       *   @param err [Error] an error or null if no error occurred.
       *   @param data [map] The response data from the successful upload:
       *     * `Location` (String) the URL of the uploaded object
       *     * `ETag` (String) the ETag of the uploaded object
       *     * `Bucket` (String) the bucket to which the object was uploaded
       *     * `Key` (String) the key to which the object was uploaded
       * @example Sending a managed upload object
       *   var params = {Bucket: 'bucket', Key: 'key', Body: stream};
       *   var upload = new AWS.S3.ManagedUpload({params: params});
       *   upload.send(function(err, data) {
       *     console.log(err, data);
       *   });
       */
      send: function send(callback) {
        var self = this;
        self.failed = false;

        self.callback = callback || function (err) {
          if (err) throw err;
        };

        var runFill = true;

        if (self.sliceFn) {
          self.fillQueue = self.fillBuffer;
        } else if (AWS.util.isNode()) {
          var Stream = AWS.util.stream.Stream;

          if (self.body instanceof Stream) {
            runFill = false;
            self.fillQueue = self.fillStream;
            self.partBuffers = [];
            self.body.on('error', function (err) {
              self.cleanup(err);
            }).on('readable', function () {
              self.fillQueue();
            }).on('end', function () {
              self.isDoneChunking = true;
              self.numParts = self.totalPartNumbers;
              self.fillQueue.call(self);

              if (self.isDoneChunking && self.totalPartNumbers >= 1 && self.doneParts === self.numParts) {
                self.finishMultiPart();
              }
            });
          }
        }

        if (runFill) self.fillQueue.call(self);
      },

      /**
       * @!method  promise()
       *   Returns a 'thenable' promise.
       *
       *   Two callbacks can be provided to the `then` method on the returned promise.
       *   The first callback will be called if the promise is fulfilled, and the second
       *   callback will be called if the promise is rejected.
       *   @callback fulfilledCallback function(data)
       *     Called if the promise is fulfilled.
       *     @param data [map] The response data from the successful upload:
       *       `Location` (String) the URL of the uploaded object
       *       `ETag` (String) the ETag of the uploaded object
       *       `Bucket` (String) the bucket to which the object was uploaded
       *       `Key` (String) the key to which the object was uploaded
       *   @callback rejectedCallback function(err)
       *     Called if the promise is rejected.
       *     @param err [Error] an error or null if no error occurred.
       *   @return [Promise] A promise that represents the state of the upload request.
       *   @example Sending an upload request using promises.
       *     var upload = s3.upload({Bucket: 'bucket', Key: 'key', Body: stream});
       *     var promise = upload.promise();
       *     promise.then(function(data) { ... }, function(err) { ... });
       */

      /**
       * Aborts a managed upload, including all concurrent upload requests.
       * @note By default, calling this function will cleanup a multipart upload
       *   if one was created. To leave the multipart upload around after aborting
       *   a request, configure `leavePartsOnError` to `true` in the {constructor}.
       * @note Calling {abort} in the browser environment will not abort any requests
       *   that are already in flight. If a multipart upload was created, any parts
       *   not yet uploaded will not be sent, and the multipart upload will be cleaned up.
       * @example Aborting an upload
       *   var params = {
       *     Bucket: 'bucket', Key: 'key',
       *     Body: Buffer.alloc(1024 * 1024 * 25) // 25MB payload
       *   };
       *   var upload = s3.upload(params);
       *   upload.send(function (err, data) {
       *     if (err) console.log("Error:", err.code, err.message);
       *     else console.log(data);
       *   });
       *
       *   // abort request in 1 second
       *   setTimeout(upload.abort.bind(upload), 1000);
       */
      abort: function abort() {
        var self = this; //abort putObject request

        if (self.isDoneChunking === true && self.totalPartNumbers === 1 && self.singlePart) {
          self.singlePart.abort();
        } else {
          self.cleanup(AWS.util.error(new Error('Request aborted by user'), {
            code: 'RequestAbortedError',
            retryable: false
          }));
        }
      },

      /**
       * @api private
       */
      validateBody: function validateBody() {
        var self = this;
        self.body = self.service.config.params.Body;

        if (typeof self.body === 'string') {
          self.body = AWS.util.buffer.toBuffer(self.body);
        } else if (!self.body) {
          throw new Error('params.Body is required');
        }

        self.sliceFn = AWS.util.arraySliceFn(self.body);
      },

      /**
       * @api private
       */
      bindServiceObject: function bindServiceObject(params) {
        params = params || {};
        var self = this; // bind parameters to new service object

        if (!self.service) {
          self.service = new AWS.S3({
            params: params
          });
        } else {
          var service = self.service;
          var config = AWS.util.copy(service._originalConfig || {});
          config.signatureVersion = service.getSignatureVersion();
          self.service = new service.constructor.__super__(config);
          self.service.config.params = AWS.util.merge(self.service.config.params || {}, params);
        }
      },

      /**
       * @api private
       */
      adjustTotalBytes: function adjustTotalBytes() {
        var self = this;

        try {
          // try to get totalBytes
          self.totalBytes = byteLength(self.body);
        } catch (e) {} // try to adjust partSize if we know payload length


        if (self.totalBytes) {
          var newPartSize = Math.ceil(self.totalBytes / self.maxTotalParts);
          if (newPartSize > self.partSize) self.partSize = newPartSize;
        } else {
          self.totalBytes = undefined;
        }
      },

      /**
       * @api private
       */
      isDoneChunking: false,

      /**
       * @api private
       */
      partPos: 0,

      /**
       * @api private
       */
      totalChunkedBytes: 0,

      /**
       * @api private
       */
      totalUploadedBytes: 0,

      /**
       * @api private
       */
      totalBytes: undefined,

      /**
       * @api private
       */
      numParts: 0,

      /**
       * @api private
       */
      totalPartNumbers: 0,

      /**
       * @api private
       */
      activeParts: 0,

      /**
       * @api private
       */
      doneParts: 0,

      /**
       * @api private
       */
      parts: null,

      /**
       * @api private
       */
      completeInfo: null,

      /**
       * @api private
       */
      failed: false,

      /**
       * @api private
       */
      multipartReq: null,

      /**
       * @api private
       */
      partBuffers: null,

      /**
       * @api private
       */
      partBufferLength: 0,

      /**
       * @api private
       */
      fillBuffer: function fillBuffer() {
        var self = this;
        var bodyLen = byteLength(self.body);

        if (bodyLen === 0) {
          self.isDoneChunking = true;
          self.numParts = 1;
          self.nextChunk(self.body);
          return;
        }

        while (self.activeParts < self.queueSize && self.partPos < bodyLen) {
          var endPos = Math.min(self.partPos + self.partSize, bodyLen);
          var buf = self.sliceFn.call(self.body, self.partPos, endPos);
          self.partPos += self.partSize;

          if (byteLength(buf) < self.partSize || self.partPos === bodyLen) {
            self.isDoneChunking = true;
            self.numParts = self.totalPartNumbers + 1;
          }

          self.nextChunk(buf);
        }
      },

      /**
       * @api private
       */
      fillStream: function fillStream() {
        var self = this;
        if (self.activeParts >= self.queueSize) return;
        var buf = self.body.read(self.partSize - self.partBufferLength) || self.body.read();

        if (buf) {
          self.partBuffers.push(buf);
          self.partBufferLength += buf.length;
          self.totalChunkedBytes += buf.length;
        }

        if (self.partBufferLength >= self.partSize) {
          // if we have single buffer we avoid copyfull concat
          var pbuf = self.partBuffers.length === 1 ? self.partBuffers[0] : Buffer.concat(self.partBuffers);
          self.partBuffers = [];
          self.partBufferLength = 0; // if we have more than partSize, push the rest back on the queue

          if (pbuf.length > self.partSize) {
            var rest = pbuf.slice(self.partSize);
            self.partBuffers.push(rest);
            self.partBufferLength += rest.length;
            pbuf = pbuf.slice(0, self.partSize);
          }

          self.nextChunk(pbuf);
        }

        if (self.isDoneChunking && !self.isDoneSending) {
          // if we have single buffer we avoid copyfull concat
          pbuf = self.partBuffers.length === 1 ? self.partBuffers[0] : Buffer.concat(self.partBuffers);
          self.partBuffers = [];
          self.partBufferLength = 0;
          self.totalBytes = self.totalChunkedBytes;
          self.isDoneSending = true;

          if (self.numParts === 0 || pbuf.length > 0) {
            self.numParts++;
            self.nextChunk(pbuf);
          }
        }

        self.body.read(0);
      },

      /**
       * @api private
       */
      nextChunk: function nextChunk(chunk) {
        var self = this;
        if (self.failed) return null;
        var partNumber = ++self.totalPartNumbers;

        if (self.isDoneChunking && partNumber === 1) {
          var params = {
            Body: chunk
          };

          if (this.tags) {
            params.Tagging = this.getTaggingHeader();
          }

          var req = self.service.putObject(params);
          req._managedUpload = self;
          req.on('httpUploadProgress', self.progress).send(self.finishSinglePart);
          self.singlePart = req; //save the single part request

          return null;
        } else if (self.service.config.params.ContentMD5) {
          var err = AWS.util.error(new Error('The Content-MD5 you specified is invalid for multi-part uploads.'), {
            code: 'InvalidDigest',
            retryable: false
          });
          self.cleanup(err);
          return null;
        }

        if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) {
          return null; // Already uploaded this part.
        }

        self.activeParts++;

        if (!self.service.config.params.UploadId) {
          if (!self.multipartReq) {
            // create multipart
            self.multipartReq = self.service.createMultipartUpload();
            self.multipartReq.on('success', function (resp) {
              self.service.config.params.UploadId = resp.data.UploadId;
              self.multipartReq = null;
            });
            self.queueChunks(chunk, partNumber);
            self.multipartReq.on('error', function (err) {
              self.cleanup(err);
            });
            self.multipartReq.send();
          } else {
            self.queueChunks(chunk, partNumber);
          }
        } else {
          // multipart is created, just send
          self.uploadPart(chunk, partNumber);
        }
      },

      /**
       * @api private
       */
      getTaggingHeader: function getTaggingHeader() {
        var kvPairStrings = [];

        for (var i = 0; i < this.tags.length; i++) {
          kvPairStrings.push(AWS.util.uriEscape(this.tags[i].Key) + '=' + AWS.util.uriEscape(this.tags[i].Value));
        }

        return kvPairStrings.join('&');
      },

      /**
       * @api private
       */
      uploadPart: function uploadPart(chunk, partNumber) {
        var self = this;
        var partParams = {
          Body: chunk,
          ContentLength: AWS.util.string.byteLength(chunk),
          PartNumber: partNumber
        };
        var partInfo = {
          ETag: null,
          PartNumber: partNumber
        };
        self.completeInfo[partNumber] = partInfo;
        var req = self.service.uploadPart(partParams);
        self.parts[partNumber] = req;
        req._lastUploadedBytes = 0;
        req._managedUpload = self;
        req.on('httpUploadProgress', self.progress);
        req.send(function (err, data) {
          delete self.parts[partParams.PartNumber];
          self.activeParts--;

          if (!err && (!data || !data.ETag)) {
            var message = 'No access to ETag property on response.';

            if (AWS.util.isBrowser()) {
              message += ' Check CORS configuration to expose ETag header.';
            }

            err = AWS.util.error(new Error(message), {
              code: 'ETagMissing',
              retryable: false
            });
          }

          if (err) return self.cleanup(err); //prevent sending part being returned twice (https://github.com/aws/aws-sdk-js/issues/2304)

          if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) return null;
          partInfo.ETag = data.ETag;
          self.doneParts++;

          if (self.isDoneChunking && self.doneParts === self.numParts) {
            self.finishMultiPart();
          } else {
            self.fillQueue.call(self);
          }
        });
      },

      /**
       * @api private
       */
      queueChunks: function queueChunks(chunk, partNumber) {
        var self = this;
        self.multipartReq.on('success', function () {
          self.uploadPart(chunk, partNumber);
        });
      },

      /**
       * @api private
       */
      cleanup: function cleanup(err) {
        var self = this;
        if (self.failed) return; // clean up stream

        if (typeof self.body.removeAllListeners === 'function' && typeof self.body.resume === 'function') {
          self.body.removeAllListeners('readable');
          self.body.removeAllListeners('end');
          self.body.resume();
        } // cleanup multipartReq listeners


        if (self.multipartReq) {
          self.multipartReq.removeAllListeners('success');
          self.multipartReq.removeAllListeners('error');
          self.multipartReq.removeAllListeners('complete');
          delete self.multipartReq;
        }

        if (self.service.config.params.UploadId && !self.leavePartsOnError) {
          self.service.abortMultipartUpload().send();
        } else if (self.leavePartsOnError) {
          self.isDoneChunking = false;
        }

        AWS.util.each(self.parts, function (partNumber, part) {
          part.removeAllListeners('complete');
          part.abort();
        });
        self.activeParts = 0;
        self.partPos = 0;
        self.numParts = 0;
        self.totalPartNumbers = 0;
        self.parts = {};
        self.failed = true;
        self.callback(err);
      },

      /**
       * @api private
       */
      finishMultiPart: function finishMultiPart() {
        var self = this;
        var completeParams = {
          MultipartUpload: {
            Parts: self.completeInfo.slice(1)
          }
        };
        self.service.completeMultipartUpload(completeParams, function (err, data) {
          if (err) {
            return self.cleanup(err);
          }

          if (data && typeof data.Location === 'string') {
            data.Location = data.Location.replace(/%2F/g, '/');
          }

          if (Array.isArray(self.tags)) {
            for (var i = 0; i < self.tags.length; i++) {
              self.tags[i].Value = String(self.tags[i].Value);
            }

            self.service.putObjectTagging({
              Tagging: {
                TagSet: self.tags
              }
            }, function (e, d) {
              if (e) {
                self.callback(e);
              } else {
                self.callback(e, data);
              }
            });
          } else {
            self.callback(err, data);
          }
        });
      },

      /**
       * @api private
       */
      finishSinglePart: function finishSinglePart(err, data) {
        var upload = this.request._managedUpload;
        var httpReq = this.request.httpRequest;
        var endpoint = httpReq.endpoint;
        if (err) return upload.callback(err);
        data.Location = [endpoint.protocol, '//', endpoint.host, httpReq.path].join('');
        data.key = this.request.params.Key; // will stay undocumented

        data.Key = this.request.params.Key;
        data.Bucket = this.request.params.Bucket;
        upload.callback(err, data);
      },

      /**
       * @api private
       */
      progress: function progress(info) {
        var upload = this._managedUpload;

        if (this.operation === 'putObject') {
          info.part = 1;
          info.key = this.params.Key;
        } else {
          upload.totalUploadedBytes += info.loaded - this._lastUploadedBytes;
          this._lastUploadedBytes = info.loaded;
          info = {
            loaded: upload.totalUploadedBytes,
            total: upload.totalBytes,
            part: this.params.PartNumber,
            key: this.params.Key
          };
        }

        upload.emit('httpUploadProgress', [info]);
      }
    });
    AWS.util.mixin(AWS.S3.ManagedUpload, AWS.SequentialExecutor);
    /**
     * @api private
     */

    AWS.S3.ManagedUpload.addPromisesToClass = function addPromisesToClass(PromiseDependency) {
      this.prototype.promise = AWS.util.promisifyMethod('send', PromiseDependency);
    };
    /**
     * @api private
     */


    AWS.S3.ManagedUpload.deletePromisesFromClass = function deletePromisesFromClass() {
      delete this.prototype.promise;
    };

    AWS.util.addPromises(AWS.S3.ManagedUpload);
    /**
     * @api private
     */

    module.exports = AWS.S3.ManagedUpload;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/sequential_executor.js":
  /*!*********************************************************!*\
    !*** ./node_modules/aws-sdk/lib/sequential_executor.js ***!
    \*********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSequential_executorJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");
    /**
     * @api private
     * @!method on(eventName, callback)
     *   Registers an event listener callback for the event given by `eventName`.
     *   Parameters passed to the callback function depend on the individual event
     *   being triggered. See the event documentation for those parameters.
     *
     *   @param eventName [String] the event name to register the listener for
     *   @param callback [Function] the listener callback function
     *   @param toHead [Boolean] attach the listener callback to the head of callback array if set to true.
     *     Default to be false.
     *   @return [AWS.SequentialExecutor] the same object for chaining
     */


    AWS.SequentialExecutor = AWS.util.inherit({
      constructor: function SequentialExecutor() {
        this._events = {};
      },

      /**
       * @api private
       */
      listeners: function listeners(eventName) {
        return this._events[eventName] ? this._events[eventName].slice(0) : [];
      },
      on: function on(eventName, listener, toHead) {
        if (this._events[eventName]) {
          toHead ? this._events[eventName].unshift(listener) : this._events[eventName].push(listener);
        } else {
          this._events[eventName] = [listener];
        }

        return this;
      },
      onAsync: function onAsync(eventName, listener, toHead) {
        listener._isAsync = true;
        return this.on(eventName, listener, toHead);
      },
      removeListener: function removeListener(eventName, listener) {
        var listeners = this._events[eventName];

        if (listeners) {
          var length = listeners.length;
          var position = -1;

          for (var i = 0; i < length; ++i) {
            if (listeners[i] === listener) {
              position = i;
            }
          }

          if (position > -1) {
            listeners.splice(position, 1);
          }
        }

        return this;
      },
      removeAllListeners: function removeAllListeners(eventName) {
        if (eventName) {
          delete this._events[eventName];
        } else {
          this._events = {};
        }

        return this;
      },

      /**
       * @api private
       */
      emit: function emit(eventName, eventArgs, doneCallback) {
        if (!doneCallback) doneCallback = function doneCallback() {};
        var listeners = this.listeners(eventName);
        var count = listeners.length;
        this.callListeners(listeners, eventArgs, doneCallback);
        return count > 0;
      },

      /**
       * @api private
       */
      callListeners: function callListeners(listeners, args, doneCallback, prevError) {
        var self = this;
        var error = prevError || null;

        function callNextListener(err) {
          if (err) {
            error = AWS.util.error(error || new Error(), err);

            if (self._haltHandlersOnError) {
              return doneCallback.call(self, error);
            }
          }

          self.callListeners(listeners, args, doneCallback, error);
        }

        while (listeners.length > 0) {
          var listener = listeners.shift();

          if (listener._isAsync) {
            // asynchronous listener
            listener.apply(self, args.concat([callNextListener]));
            return; // stop here, callNextListener will continue
          } else {
            // synchronous listener
            try {
              listener.apply(self, args);
            } catch (err) {
              error = AWS.util.error(error || new Error(), err);
            }

            if (error && self._haltHandlersOnError) {
              doneCallback.call(self, error);
              return;
            }
          }
        }

        doneCallback.call(self, error);
      },

      /**
       * Adds or copies a set of listeners from another list of
       * listeners or SequentialExecutor object.
       *
       * @param listeners [map<String,Array<Function>>, AWS.SequentialExecutor]
       *   a list of events and callbacks, or an event emitter object
       *   containing listeners to add to this emitter object.
       * @return [AWS.SequentialExecutor] the emitter object, for chaining.
       * @example Adding listeners from a map of listeners
       *   emitter.addListeners({
       *     event1: [function() { ... }, function() { ... }],
       *     event2: [function() { ... }]
       *   });
       *   emitter.emit('event1'); // emitter has event1
       *   emitter.emit('event2'); // emitter has event2
       * @example Adding listeners from another emitter object
       *   var emitter1 = new AWS.SequentialExecutor();
       *   emitter1.on('event1', function() { ... });
       *   emitter1.on('event2', function() { ... });
       *   var emitter2 = new AWS.SequentialExecutor();
       *   emitter2.addListeners(emitter1);
       *   emitter2.emit('event1'); // emitter2 has event1
       *   emitter2.emit('event2'); // emitter2 has event2
       */
      addListeners: function addListeners(listeners) {
        var self = this; // extract listeners if parameter is an SequentialExecutor object

        if (listeners._events) listeners = listeners._events;
        AWS.util.each(listeners, function (event, callbacks) {
          if (typeof callbacks === 'function') callbacks = [callbacks];
          AWS.util.arrayEach(callbacks, function (callback) {
            self.on(event, callback);
          });
        });
        return self;
      },

      /**
       * Registers an event with {on} and saves the callback handle function
       * as a property on the emitter object using a given `name`.
       *
       * @param name [String] the property name to set on this object containing
       *   the callback function handle so that the listener can be removed in
       *   the future.
       * @param (see on)
       * @return (see on)
       * @example Adding a named listener DATA_CALLBACK
       *   var listener = function() { doSomething(); };
       *   emitter.addNamedListener('DATA_CALLBACK', 'data', listener);
       *
       *   // the following prints: true
       *   console.log(emitter.DATA_CALLBACK == listener);
       */
      addNamedListener: function addNamedListener(name, eventName, callback, toHead) {
        this[name] = callback;
        this.addListener(eventName, callback, toHead);
        return this;
      },

      /**
       * @api private
       */
      addNamedAsyncListener: function addNamedAsyncListener(name, eventName, callback, toHead) {
        callback._isAsync = true;
        return this.addNamedListener(name, eventName, callback, toHead);
      },

      /**
       * Helper method to add a set of named listeners using
       * {addNamedListener}. The callback contains a parameter
       * with a handle to the `addNamedListener` method.
       *
       * @callback callback function(add)
       *   The callback function is called immediately in order to provide
       *   the `add` function to the block. This simplifies the addition of
       *   a large group of named listeners.
       *   @param add [Function] the {addNamedListener} function to call
       *     when registering listeners.
       * @example Adding a set of named listeners
       *   emitter.addNamedListeners(function(add) {
       *     add('DATA_CALLBACK', 'data', function() { ... });
       *     add('OTHER', 'otherEvent', function() { ... });
       *     add('LAST', 'lastEvent', function() { ... });
       *   });
       *
       *   // these properties are now set:
       *   emitter.DATA_CALLBACK;
       *   emitter.OTHER;
       *   emitter.LAST;
       */
      addNamedListeners: function addNamedListeners(callback) {
        var self = this;
        callback(function () {
          self.addNamedListener.apply(self, arguments);
        }, function () {
          self.addNamedAsyncListener.apply(self, arguments);
        });
        return this;
      }
    });
    /**
     * {on} is the prefered method.
     * @api private
     */

    AWS.SequentialExecutor.prototype.addListener = AWS.SequentialExecutor.prototype.on;
    /**
     * @api private
     */

    module.exports = AWS.SequentialExecutor;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/service.js":
  /*!*********************************************!*\
    !*** ./node_modules/aws-sdk/lib/service.js ***!
    \*********************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibServiceJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ./core */
    "./node_modules/aws-sdk/lib/core.js");

    var Api = __webpack_require__(
    /*! ./model/api */
    "./node_modules/aws-sdk/lib/model/api.js");

    var regionConfig = __webpack_require__(
    /*! ./region_config */
    "./node_modules/aws-sdk/lib/region_config.js");

    var inherit = AWS.util.inherit;
    var clientCount = 0;
    /**
     * The service class representing an AWS service.
     *
     * @class_abstract This class is an abstract class.
     *
     * @!attribute apiVersions
     *   @return [Array<String>] the list of API versions supported by this service.
     *   @readonly
     */

    AWS.Service = inherit({
      /**
       * Create a new service object with a configuration object
       *
       * @param config [map] a map of configuration options
       */
      constructor: function Service(config) {
        if (!this.loadServiceClass) {
          throw AWS.util.error(new Error(), 'Service must be constructed with `new\' operator');
        }

        var ServiceClass = this.loadServiceClass(config || {});

        if (ServiceClass) {
          var originalConfig = AWS.util.copy(config);
          var svc = new ServiceClass(config);
          Object.defineProperty(svc, '_originalConfig', {
            get: function get() {
              return originalConfig;
            },
            enumerable: false,
            configurable: true
          });
          svc._clientId = ++clientCount;
          return svc;
        }

        this.initialize(config);
      },

      /**
       * @api private
       */
      initialize: function initialize(config) {
        var svcConfig = AWS.config[this.serviceIdentifier];
        this.config = new AWS.Config(AWS.config);
        if (svcConfig) this.config.update(svcConfig, true);
        if (config) this.config.update(config, true);
        this.validateService();
        if (!this.config.endpoint) regionConfig.configureEndpoint(this);
        this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);
        this.setEndpoint(this.config.endpoint); //enable attaching listeners to service client

        AWS.SequentialExecutor.call(this);
        AWS.Service.addDefaultMonitoringListeners(this);

        if ((this.config.clientSideMonitoring || AWS.Service._clientSideMonitoring) && this.publisher) {
          var publisher = this.publisher;
          this.addNamedListener('PUBLISH_API_CALL', 'apiCall', function PUBLISH_API_CALL(event) {
            process.nextTick(function () {
              publisher.eventHandler(event);
            });
          });
          this.addNamedListener('PUBLISH_API_ATTEMPT', 'apiCallAttempt', function PUBLISH_API_ATTEMPT(event) {
            process.nextTick(function () {
              publisher.eventHandler(event);
            });
          });
        }
      },

      /**
       * @api private
       */
      validateService: function validateService() {},

      /**
       * @api private
       */
      loadServiceClass: function loadServiceClass(serviceConfig) {
        var config = serviceConfig;

        if (!AWS.util.isEmpty(this.api)) {
          return null;
        } else if (config.apiConfig) {
          return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);
        } else if (!this.constructor.services) {
          return null;
        } else {
          config = new AWS.Config(AWS.config);
          config.update(serviceConfig, true);
          var version = config.apiVersions[this.constructor.serviceIdentifier];
          version = version || config.apiVersion;
          return this.getLatestServiceClass(version);
        }
      },

      /**
       * @api private
       */
      getLatestServiceClass: function getLatestServiceClass(version) {
        version = this.getLatestServiceVersion(version);

        if (this.constructor.services[version] === null) {
          AWS.Service.defineServiceApi(this.constructor, version);
        }

        return this.constructor.services[version];
      },

      /**
       * @api private
       */
      getLatestServiceVersion: function getLatestServiceVersion(version) {
        if (!this.constructor.services || this.constructor.services.length === 0) {
          throw new Error('No services defined on ' + this.constructor.serviceIdentifier);
        }

        if (!version) {
          version = 'latest';
        } else if (AWS.util.isType(version, Date)) {
          version = AWS.util.date.iso8601(version).split('T')[0];
        }

        if (Object.hasOwnProperty(this.constructor.services, version)) {
          return version;
        }

        var keys = Object.keys(this.constructor.services).sort();
        var selectedVersion = null;

        for (var i = keys.length - 1; i >= 0; i--) {
          // versions that end in "*" are not available on disk and can be
          // skipped, so do not choose these as selectedVersions
          if (keys[i][keys[i].length - 1] !== '*') {
            selectedVersion = keys[i];
          }

          if (keys[i].substr(0, 10) <= version) {
            return selectedVersion;
          }
        }

        throw new Error('Could not find ' + this.constructor.serviceIdentifier + ' API to satisfy version constraint `' + version + '\'');
      },

      /**
       * @api private
       */
      api: {},

      /**
       * @api private
       */
      defaultRetryCount: 3,

      /**
       * @api private
       */
      customizeRequests: function customizeRequests(callback) {
        if (!callback) {
          this.customRequestHandler = null;
        } else if (typeof callback === 'function') {
          this.customRequestHandler = callback;
        } else {
          throw new Error('Invalid callback type \'' + typeof callback + '\' provided in customizeRequests');
        }
      },

      /**
       * Calls an operation on a service with the given input parameters.
       *
       * @param operation [String] the name of the operation to call on the service.
       * @param params [map] a map of input options for the operation
       * @callback callback function(err, data)
       *   If a callback is supplied, it is called when a response is returned
       *   from the service.
       *   @param err [Error] the error object returned from the request.
       *     Set to `null` if the request is successful.
       *   @param data [Object] the de-serialized data returned from
       *     the request. Set to `null` if a request error occurs.
       */
      makeRequest: function makeRequest(operation, params, callback) {
        if (typeof params === 'function') {
          callback = params;
          params = null;
        }

        params = params || {};

        if (this.config.params) {
          // copy only toplevel bound params
          var rules = this.api.operations[operation];

          if (rules) {
            params = AWS.util.copy(params);
            AWS.util.each(this.config.params, function (key, value) {
              if (rules.input.members[key]) {
                if (params[key] === undefined || params[key] === null) {
                  params[key] = value;
                }
              }
            });
          }
        }

        var request = new AWS.Request(this, operation, params);
        this.addAllRequestListeners(request);
        this.attachMonitoringEmitter(request);
        if (callback) request.send(callback);
        return request;
      },

      /**
       * Calls an operation on a service with the given input parameters, without
       * any authentication data. This method is useful for "public" API operations.
       *
       * @param operation [String] the name of the operation to call on the service.
       * @param params [map] a map of input options for the operation
       * @callback callback function(err, data)
       *   If a callback is supplied, it is called when a response is returned
       *   from the service.
       *   @param err [Error] the error object returned from the request.
       *     Set to `null` if the request is successful.
       *   @param data [Object] the de-serialized data returned from
       *     the request. Set to `null` if a request error occurs.
       */
      makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {
        if (typeof params === 'function') {
          callback = params;
          params = {};
        }

        var request = this.makeRequest(operation, params).toUnauthenticated();
        return callback ? request.send(callback) : request;
      },

      /**
       * Waits for a given state
       *
       * @param state [String] the state on the service to wait for
       * @param params [map] a map of parameters to pass with each request
       * @option params $waiter [map] a map of configuration options for the waiter
       * @option params $waiter.delay [Number] The number of seconds to wait between
       *                                       requests
       * @option params $waiter.maxAttempts [Number] The maximum number of requests
       *                                             to send while waiting
       * @callback callback function(err, data)
       *   If a callback is supplied, it is called when a response is returned
       *   from the service.
       *   @param err [Error] the error object returned from the request.
       *     Set to `null` if the request is successful.
       *   @param data [Object] the de-serialized data returned from
       *     the request. Set to `null` if a request error occurs.
       */
      waitFor: function waitFor(state, params, callback) {
        var waiter = new AWS.ResourceWaiter(this, state);
        return waiter.wait(params, callback);
      },

      /**
       * @api private
       */
      addAllRequestListeners: function addAllRequestListeners(request) {
        var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(), AWS.EventListeners.CorePost];

        for (var i = 0; i < list.length; i++) {
          if (list[i]) request.addListeners(list[i]);
        } // disable parameter validation


        if (!this.config.paramValidation) {
          request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);
        }

        if (this.config.logger) {
          // add logging events
          request.addListeners(AWS.EventListeners.Logger);
        }

        this.setupRequestListeners(request); // call prototype's customRequestHandler

        if (typeof this.constructor.prototype.customRequestHandler === 'function') {
          this.constructor.prototype.customRequestHandler(request);
        } // call instance's customRequestHandler


        if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {
          this.customRequestHandler(request);
        }
      },

      /**
       * Event recording metrics for a whole API call.
       * @returns {object} a subset of api call metrics
       * @api private
       */
      apiCallEvent: function apiCallEvent(request) {
        var api = request.service.api.operations[request.operation];
        var monitoringEvent = {
          Type: 'ApiCall',
          Api: api ? api.name : request.operation,
          Version: 1,
          Service: request.service.api.serviceId || request.service.api.endpointPrefix,
          Region: request.httpRequest.region,
          MaxRetriesExceeded: 0,
          UserAgent: request.httpRequest.getUserAgent()
        };
        var response = request.response;

        if (response.httpResponse.statusCode) {
          monitoringEvent.FinalHttpStatusCode = response.httpResponse.statusCode;
        }

        if (response.error) {
          var error = response.error;
          var statusCode = response.httpResponse.statusCode;

          if (statusCode > 299) {
            if (error.code) monitoringEvent.FinalAwsException = error.code;
            if (error.message) monitoringEvent.FinalAwsExceptionMessage = error.message;
          } else {
            if (error.code || error.name) monitoringEvent.FinalSdkException = error.code || error.name;
            if (error.message) monitoringEvent.FinalSdkExceptionMessage = error.message;
          }
        }

        return monitoringEvent;
      },

      /**
       * Event recording metrics for an API call attempt.
       * @returns {object} a subset of api call attempt metrics
       * @api private
       */
      apiAttemptEvent: function apiAttemptEvent(request) {
        var api = request.service.api.operations[request.operation];
        var monitoringEvent = {
          Type: 'ApiCallAttempt',
          Api: api ? api.name : request.operation,
          Version: 1,
          Service: request.service.api.serviceId || request.service.api.endpointPrefix,
          Fqdn: request.httpRequest.endpoint.hostname,
          UserAgent: request.httpRequest.getUserAgent()
        };
        var response = request.response;

        if (response.httpResponse.statusCode) {
          monitoringEvent.HttpStatusCode = response.httpResponse.statusCode;
        }

        if (!request._unAuthenticated && request.service.config.credentials && request.service.config.credentials.accessKeyId) {
          monitoringEvent.AccessKey = request.service.config.credentials.accessKeyId;
        }

        if (!response.httpResponse.headers) return monitoringEvent;

        if (request.httpRequest.headers['x-amz-security-token']) {
          monitoringEvent.SessionToken = request.httpRequest.headers['x-amz-security-token'];
        }

        if (response.httpResponse.headers['x-amzn-requestid']) {
          monitoringEvent.XAmznRequestId = response.httpResponse.headers['x-amzn-requestid'];
        }

        if (response.httpResponse.headers['x-amz-request-id']) {
          monitoringEvent.XAmzRequestId = response.httpResponse.headers['x-amz-request-id'];
        }

        if (response.httpResponse.headers['x-amz-id-2']) {
          monitoringEvent.XAmzId2 = response.httpResponse.headers['x-amz-id-2'];
        }

        return monitoringEvent;
      },

      /**
       * Add metrics of failed request.
       * @api private
       */
      attemptFailEvent: function attemptFailEvent(request) {
        var monitoringEvent = this.apiAttemptEvent(request);
        var response = request.response;
        var error = response.error;

        if (response.httpResponse.statusCode > 299) {
          if (error.code) monitoringEvent.AwsException = error.code;
          if (error.message) monitoringEvent.AwsExceptionMessage = error.message;
        } else {
          if (error.code || error.name) monitoringEvent.SdkException = error.code || error.name;
          if (error.message) monitoringEvent.SdkExceptionMessage = error.message;
        }

        return monitoringEvent;
      },

      /**
       * Attach listeners to request object to fetch metrics of each request
       * and emit data object through \'ApiCall\' and \'ApiCallAttempt\' events.
       * @api private
       */
      attachMonitoringEmitter: function attachMonitoringEmitter(request) {
        var attemptTimestamp; //timestamp marking the beginning of a request attempt

        var attemptStartRealTime; //Start time of request attempt. Used to calculating attemptLatency

        var attemptLatency; //latency from request sent out to http response reaching SDK

        var callStartRealTime; //Start time of API call. Used to calculating API call latency

        var attemptCount = 0; //request.retryCount is not reliable here

        var region; //region cache region for each attempt since it can be updated in plase (e.g. s3)

        var callTimestamp; //timestamp when the request is created

        var self = this;
        var addToHead = true;
        request.on('validate', function () {
          callStartRealTime = AWS.util.realClock.now();
          callTimestamp = Date.now();
        }, addToHead);
        request.on('sign', function () {
          attemptStartRealTime = AWS.util.realClock.now();
          attemptTimestamp = Date.now();
          region = request.httpRequest.region;
          attemptCount++;
        }, addToHead);
        request.on('validateResponse', function () {
          attemptLatency = Math.round(AWS.util.realClock.now() - attemptStartRealTime);
        });
        request.addNamedListener('API_CALL_ATTEMPT', 'success', function API_CALL_ATTEMPT() {
          var apiAttemptEvent = self.apiAttemptEvent(request);
          apiAttemptEvent.Timestamp = attemptTimestamp;
          apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;
          apiAttemptEvent.Region = region;
          self.emit('apiCallAttempt', [apiAttemptEvent]);
        });
        request.addNamedListener('API_CALL_ATTEMPT_RETRY', 'retry', function API_CALL_ATTEMPT_RETRY() {
          var apiAttemptEvent = self.attemptFailEvent(request);
          apiAttemptEvent.Timestamp = attemptTimestamp; //attemptLatency may not be available if fail before response

          attemptLatency = attemptLatency || Math.round(AWS.util.realClock.now() - attemptStartRealTime);
          apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;
          apiAttemptEvent.Region = region;
          self.emit('apiCallAttempt', [apiAttemptEvent]);
        });
        request.addNamedListener('API_CALL', 'complete', function API_CALL() {
          var apiCallEvent = self.apiCallEvent(request);
          apiCallEvent.AttemptCount = attemptCount;
          if (apiCallEvent.AttemptCount <= 0) return;
          apiCallEvent.Timestamp = callTimestamp;
          var latency = Math.round(AWS.util.realClock.now() - callStartRealTime);
          apiCallEvent.Latency = latency >= 0 ? latency : 0;
          var response = request.response;

          if (response.error && response.error.retryable && typeof response.retryCount === 'number' && typeof response.maxRetries === 'number' && response.retryCount >= response.maxRetries) {
            apiCallEvent.MaxRetriesExceeded = 1;
          }

          self.emit('apiCall', [apiCallEvent]);
        });
      },

      /**
       * Override this method to setup any custom request listeners for each
       * new request to the service.
       *
       * @method_abstract This is an abstract method.
       */
      setupRequestListeners: function setupRequestListeners(request) {},

      /**
       * Gets the signer class for a given request
       * @api private
       */
      getSignerClass: function getSignerClass(request) {
        var version; // get operation authtype if present

        var operation = null;
        var authtype = '';

        if (request) {
          var operations = request.service.api.operations || {};
          operation = operations[request.operation] || null;
          authtype = operation ? operation.authtype : '';
        }

        if (this.config.signatureVersion) {
          version = this.config.signatureVersion;
        } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {
          version = 'v4';
        } else {
          version = this.api.signatureVersion;
        }

        return AWS.Signers.RequestSigner.getVersion(version);
      },

      /**
       * @api private
       */
      serviceInterface: function serviceInterface() {
        switch (this.api.protocol) {
          case 'ec2':
            return AWS.EventListeners.Query;

          case 'query':
            return AWS.EventListeners.Query;

          case 'json':
            return AWS.EventListeners.Json;

          case 'rest-json':
            return AWS.EventListeners.RestJson;

          case 'rest-xml':
            return AWS.EventListeners.RestXml;
        }

        if (this.api.protocol) {
          throw new Error('Invalid service `protocol\' ' + this.api.protocol + ' in API config');
        }
      },

      /**
       * @api private
       */
      successfulResponse: function successfulResponse(resp) {
        return resp.httpResponse.statusCode < 300;
      },

      /**
       * How many times a failed request should be retried before giving up.
       * the defaultRetryCount can be overriden by service classes.
       *
       * @api private
       */
      numRetries: function numRetries() {
        if (this.config.maxRetries !== undefined) {
          return this.config.maxRetries;
        } else {
          return this.defaultRetryCount;
        }
      },

      /**
       * @api private
       */
      retryDelays: function retryDelays(retryCount, err) {
        return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions, err);
      },

      /**
       * @api private
       */
      retryableError: function retryableError(error) {
        if (this.timeoutError(error)) return true;
        if (this.networkingError(error)) return true;
        if (this.expiredCredentialsError(error)) return true;
        if (this.throttledError(error)) return true;
        if (error.statusCode >= 500) return true;
        return false;
      },

      /**
       * @api private
       */
      networkingError: function networkingError(error) {
        return error.code === 'NetworkingError';
      },

      /**
       * @api private
       */
      timeoutError: function timeoutError(error) {
        return error.code === 'TimeoutError';
      },

      /**
       * @api private
       */
      expiredCredentialsError: function expiredCredentialsError(error) {
        // TODO : this only handles *one* of the expired credential codes
        return error.code === 'ExpiredTokenException';
      },

      /**
       * @api private
       */
      clockSkewError: function clockSkewError(error) {
        switch (error.code) {
          case 'RequestTimeTooSkewed':
          case 'RequestExpired':
          case 'InvalidSignatureException':
          case 'SignatureDoesNotMatch':
          case 'AuthFailure':
          case 'RequestInTheFuture':
            return true;

          default:
            return false;
        }
      },

      /**
       * @api private
       */
      getSkewCorrectedDate: function getSkewCorrectedDate() {
        return new Date(Date.now() + this.config.systemClockOffset);
      },

      /**
       * @api private
       */
      applyClockOffset: function applyClockOffset(newServerTime) {
        if (newServerTime) {
          this.config.systemClockOffset = newServerTime - Date.now();
        }
      },

      /**
       * @api private
       */
      isClockSkewed: function isClockSkewed(newServerTime) {
        if (newServerTime) {
          return Math.abs(this.getSkewCorrectedDate().getTime() - newServerTime) >= 300000;
        }
      },

      /**
       * @api private
       */
      throttledError: function throttledError(error) {
        // this logic varies between services
        if (error.statusCode === 429) return true;

        switch (error.code) {
          case 'ProvisionedThroughputExceededException':
          case 'Throttling':
          case 'ThrottlingException':
          case 'RequestLimitExceeded':
          case 'RequestThrottled':
          case 'RequestThrottledException':
          case 'TooManyRequestsException':
          case 'TransactionInProgressException': //dynamodb

          case 'EC2ThrottledException':
            return true;

          default:
            return false;
        }
      },

      /**
       * @api private
       */
      endpointFromTemplate: function endpointFromTemplate(endpoint) {
        if (typeof endpoint !== 'string') return endpoint;
        var e = endpoint;
        e = e.replace(/\{service\}/g, this.api.endpointPrefix);
        e = e.replace(/\{region\}/g, this.config.region);
        e = e.replace(/\{scheme\}/g, this.config.sslEnabled ? 'https' : 'http');
        return e;
      },

      /**
       * @api private
       */
      setEndpoint: function setEndpoint(endpoint) {
        this.endpoint = new AWS.Endpoint(endpoint, this.config);
      },

      /**
       * @api private
       */
      paginationConfig: function paginationConfig(operation, throwException) {
        var paginator = this.api.operations[operation].paginator;

        if (!paginator) {
          if (throwException) {
            var e = new Error();
            throw AWS.util.error(e, 'No pagination configuration for ' + operation);
          }

          return null;
        }

        return paginator;
      }
    });
    AWS.util.update(AWS.Service, {
      /**
       * Adds one method for each operation described in the api configuration
       *
       * @api private
       */
      defineMethods: function defineMethods(svc) {
        AWS.util.each(svc.prototype.api.operations, function iterator(method) {
          if (svc.prototype[method]) return;
          var operation = svc.prototype.api.operations[method];

          if (operation.authtype === 'none') {
            svc.prototype[method] = function (params, callback) {
              return this.makeUnauthenticatedRequest(method, params, callback);
            };
          } else {
            svc.prototype[method] = function (params, callback) {
              return this.makeRequest(method, params, callback);
            };
          }
        });
      },

      /**
       * Defines a new Service class using a service identifier and list of versions
       * including an optional set of features (functions) to apply to the class
       * prototype.
       *
       * @param serviceIdentifier [String] the identifier for the service
       * @param versions [Array<String>] a list of versions that work with this
       *   service
       * @param features [Object] an object to attach to the prototype
       * @return [Class<Service>] the service class defined by this function.
       */
      defineService: function defineService(serviceIdentifier, versions, features) {
        AWS.Service._serviceMap[serviceIdentifier] = true;

        if (!Array.isArray(versions)) {
          features = versions;
          versions = [];
        }

        var svc = inherit(AWS.Service, features || {});

        if (typeof serviceIdentifier === 'string') {
          AWS.Service.addVersions(svc, versions);
          var identifier = svc.serviceIdentifier || serviceIdentifier;
          svc.serviceIdentifier = identifier;
        } else {
          // defineService called with an API
          svc.prototype.api = serviceIdentifier;
          AWS.Service.defineMethods(svc);
        }

        AWS.SequentialExecutor.call(this.prototype); //util.clientSideMonitoring is only available in node

        if (!this.prototype.publisher && AWS.util.clientSideMonitoring) {
          var Publisher = AWS.util.clientSideMonitoring.Publisher;
          var configProvider = AWS.util.clientSideMonitoring.configProvider;
          var publisherConfig = configProvider();
          this.prototype.publisher = new Publisher(publisherConfig);

          if (publisherConfig.enabled) {
            //if csm is enabled in environment, SDK should send all metrics
            AWS.Service._clientSideMonitoring = true;
          }
        }

        AWS.SequentialExecutor.call(svc.prototype);
        AWS.Service.addDefaultMonitoringListeners(svc.prototype);
        return svc;
      },

      /**
       * @api private
       */
      addVersions: function addVersions(svc, versions) {
        if (!Array.isArray(versions)) versions = [versions];
        svc.services = svc.services || {};

        for (var i = 0; i < versions.length; i++) {
          if (svc.services[versions[i]] === undefined) {
            svc.services[versions[i]] = null;
          }
        }

        svc.apiVersions = Object.keys(svc.services).sort();
      },

      /**
       * @api private
       */
      defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {
        var svc = inherit(superclass, {
          serviceIdentifier: superclass.serviceIdentifier
        });

        function setApi(api) {
          if (api.isApi) {
            svc.prototype.api = api;
          } else {
            svc.prototype.api = new Api(api, {
              serviceIdentifier: superclass.serviceIdentifier
            });
          }
        }

        if (typeof version === 'string') {
          if (apiConfig) {
            setApi(apiConfig);
          } else {
            try {
              setApi(AWS.apiLoader(superclass.serviceIdentifier, version));
            } catch (err) {
              throw AWS.util.error(err, {
                message: 'Could not find API configuration ' + superclass.serviceIdentifier + '-' + version
              });
            }
          }

          if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {
            superclass.apiVersions = superclass.apiVersions.concat(version).sort();
          }

          superclass.services[version] = svc;
        } else {
          setApi(version);
        }

        AWS.Service.defineMethods(svc);
        return svc;
      },

      /**
       * @api private
       */
      hasService: function hasService(identifier) {
        return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);
      },

      /**
       * @param attachOn attach default monitoring listeners to object
       *
       * Each monitoring event should be emitted from service client to service constructor prototype and then
       * to global service prototype like bubbling up. These default monitoring events listener will transfer
       * the monitoring events to the upper layer.
       * @api private
       */
      addDefaultMonitoringListeners: function addDefaultMonitoringListeners(attachOn) {
        attachOn.addNamedListener('MONITOR_EVENTS_BUBBLE', 'apiCallAttempt', function EVENTS_BUBBLE(event) {
          var baseClass = Object.getPrototypeOf(attachOn);
          if (baseClass._events) baseClass.emit('apiCallAttempt', [event]);
        });
        attachOn.addNamedListener('CALL_EVENTS_BUBBLE', 'apiCall', function CALL_EVENTS_BUBBLE(event) {
          var baseClass = Object.getPrototypeOf(attachOn);
          if (baseClass._events) baseClass.emit('apiCall', [event]);
        });
      },

      /**
       * @api private
       */
      _serviceMap: {}
    });
    AWS.util.mixin(AWS.Service, AWS.SequentialExecutor);
    /**
     * @api private
     */

    module.exports = AWS.Service;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/services/cognitoidentity.js":
  /*!**************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/services/cognitoidentity.js ***!
    \**************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibServicesCognitoidentityJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    AWS.util.update(AWS.CognitoIdentity.prototype, {
      getOpenIdToken: function getOpenIdToken(params, callback) {
        return this.makeUnauthenticatedRequest('getOpenIdToken', params, callback);
      },
      getId: function getId(params, callback) {
        return this.makeUnauthenticatedRequest('getId', params, callback);
      },
      getCredentialsForIdentity: function getCredentialsForIdentity(params, callback) {
        return this.makeUnauthenticatedRequest('getCredentialsForIdentity', params, callback);
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/services/s3.js":
  /*!*************************************************!*\
    !*** ./node_modules/aws-sdk/lib/services/s3.js ***!
    \*************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibServicesS3Js(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var v4Credentials = __webpack_require__(
    /*! ../signers/v4_credentials */
    "./node_modules/aws-sdk/lib/signers/v4_credentials.js");

    var resolveRegionalEndpointsFlag = __webpack_require__(
    /*! ../config_regional_endpoint */
    "./node_modules/aws-sdk/lib/config_regional_endpoint.js");

    var regionUtil = __webpack_require__(
    /*! ../region_config */
    "./node_modules/aws-sdk/lib/region_config.js"); // Pull in managed upload extension


    __webpack_require__(
    /*! ../s3/managed_upload */
    "./node_modules/aws-sdk/lib/s3/managed_upload.js");
    /**
     * @api private
     */


    var operationsWith200StatusCodeError = {
      'completeMultipartUpload': true,
      'copyObject': true,
      'uploadPartCopy': true
    };
    /**
     * @api private
     */

    var regionRedirectErrorCodes = ['AuthorizationHeaderMalformed', // non-head operations on virtual-hosted global bucket endpoints
    'BadRequest', // head operations on virtual-hosted global bucket endpoints
    'PermanentRedirect', // non-head operations on path-style or regional endpoints
    301 // head operations on path-style or regional endpoints
    ];
    AWS.util.update(AWS.S3.prototype, {
      /**
       * @api private
       */
      getSignatureVersion: function getSignatureVersion(request) {
        var defaultApiVersion = this.api.signatureVersion;
        var userDefinedVersion = this._originalConfig ? this._originalConfig.signatureVersion : null;
        var regionDefinedVersion = this.config.signatureVersion;
        var isPresigned = request ? request.isPresigned() : false;
        /*
          1) User defined version specified:
            a) always return user defined version
          2) No user defined version specified:
            a) If not using presigned urls, default to V4
            b) If using presigned urls, default to lowest version the region supports
        */

        if (userDefinedVersion) {
          userDefinedVersion = userDefinedVersion === 'v2' ? 's3' : userDefinedVersion;
          return userDefinedVersion;
        }

        if (isPresigned !== true) {
          defaultApiVersion = 'v4';
        } else if (regionDefinedVersion) {
          defaultApiVersion = regionDefinedVersion;
        }

        return defaultApiVersion;
      },

      /**
       * @api private
       */
      getSignerClass: function getSignerClass(request) {
        var signatureVersion = this.getSignatureVersion(request);
        return AWS.Signers.RequestSigner.getVersion(signatureVersion);
      },

      /**
       * @api private
       */
      validateService: function validateService() {
        var msg;
        var messages = []; // default to us-east-1 when no region is provided

        if (!this.config.region) this.config.region = 'us-east-1';

        if (!this.config.endpoint && this.config.s3BucketEndpoint) {
          messages.push('An endpoint must be provided when configuring ' + '`s3BucketEndpoint` to true.');
        }

        if (messages.length === 1) {
          msg = messages[0];
        } else if (messages.length > 1) {
          msg = 'Multiple configuration errors:\n' + messages.join('\n');
        }

        if (msg) {
          throw AWS.util.error(new Error(), {
            name: 'InvalidEndpoint',
            message: msg
          });
        }
      },

      /**
       * @api private
       */
      shouldDisableBodySigning: function shouldDisableBodySigning(request) {
        var signerClass = this.getSignerClass();

        if (this.config.s3DisableBodySigning === true && signerClass === AWS.Signers.V4 && request.httpRequest.endpoint.protocol === 'https:') {
          return true;
        }

        return false;
      },

      /**
       * @api private
       */
      setupRequestListeners: function setupRequestListeners(request) {
        var prependListener = true;
        request.addListener('validate', this.validateScheme);
        request.addListener('validate', this.validateBucketName, prependListener);
        request.addListener('validate', this.optInUsEast1RegionalEndpoint, prependListener);
        request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_REGION);
        request.addListener('build', this.addContentType);
        request.addListener('build', this.computeContentMd5);
        request.addListener('build', this.computeSseCustomerKeyMd5);
        request.addListener('build', this.populateURI);
        request.addListener('afterBuild', this.addExpect100Continue);
        request.addListener('extractError', this.extractError);
        request.addListener('extractData', AWS.util.hoistPayloadMember);
        request.addListener('extractData', this.extractData);
        request.addListener('extractData', this.extractErrorFrom200Response);
        request.addListener('beforePresign', this.prepareSignedUrl);

        if (this.shouldDisableBodySigning(request)) {
          request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);
          request.addListener('afterBuild', this.disableBodySigning);
        } //deal with ARNs supplied to Bucket


        if (this.isAccessPointApplicable(request)) {
          request.removeListener('validate', this.validateBucketName);
          request.addListener('validate', this.validateAccessPointArn, prependListener);
          request.addListener('validate', this.validateArnRegion);
          request.removeListener('build', this.populateURI);
          request.addListener('build', this.populateUriFromAccessPoint);
          return;
        } //listeners regarding region inference


        request.addListener('validate', this.validateBucketEndpoint);
        request.addListener('validate', this.correctBucketRegionFromCache);
        request.onAsync('extractError', this.requestBucketRegion);

        if (AWS.util.isBrowser()) {
          request.onAsync('retry', this.reqRegionForNetworkingError);
        }
      },

      /**
       * @api private
       */
      validateScheme: function validateScheme(req) {
        var params = req.params,
            scheme = req.httpRequest.endpoint.protocol,
            sensitive = params.SSECustomerKey || params.CopySourceSSECustomerKey;

        if (sensitive && scheme !== 'https:') {
          var msg = 'Cannot send SSE keys over HTTP. Set \'sslEnabled\'' + 'to \'true\' in your configuration';
          throw AWS.util.error(new Error(), {
            code: 'ConfigError',
            message: msg
          });
        }
      },

      /**
       * @api private
       */
      validateBucketEndpoint: function validateBucketEndpoint(req) {
        if (!req.params.Bucket && req.service.config.s3BucketEndpoint) {
          var msg = 'Cannot send requests to root API with `s3BucketEndpoint` set.';
          throw AWS.util.error(new Error(), {
            code: 'ConfigError',
            message: msg
          });
        }
      },

      /**
       * @api private
       */
      isAccessPointApplicable: function hasBucketInParams(req) {
        var inputShape = (req.service.api.operations[req.operation] || {}).input || {};
        var inputMembers = inputShape.members || {};
        if (req.operation === 'createBucket' || !req.params.Bucket || !inputMembers.Bucket) return false;
        if (!AWS.util.ARN.validate(req.params.Bucket)) return false;
        return true;
      },

      /**
       * Validate ARN supplied in Bucket parameter is a valid access point ARN
       *
       * @api private
       */
      validateAccessPointArn: function validateAccessPointArn(req) {
        var parsedArn = AWS.util.ARN.parse(req.params.Bucket); //avoid duplicated parsing in the future

        req._parsedAccessPointArn = parsedArn;
        var parsedArn = req._parsedAccessPointArn;

        if (parsedArn.service !== 's3') {
          throw AWS.util.error(new Error(), {
            code: 'InvalidAccessPointARN',
            message: 'expect \'s3\' in access point ARN service component'
          });
        }

        if (!parsedArn.region) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidAccessPointARN',
            message: 'Access point ARN region is empty'
          });
        }

        if (parsedArn.resource.indexOf('accesspoint:') !== 0 && parsedArn.resource.indexOf('accesspoint/') !== 0) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidAccessPointARN',
            message: 'Access point ARN resource should begin with \'accesspoint/\''
          });
        }

        var delimiter = parsedArn.resource['accesspoint'.length]; //can be ':' or '/'

        if (parsedArn.resource.split(delimiter).length !== 2) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidAccessPointARN',
            message: 'Too many resource parameters in access point ARN'
          });
        }

        var accessPoint = parsedArn.resource.split(delimiter)[1];
        var accessPointPrefix = accessPoint + '-' + parsedArn.accountId;

        if (!req.service.isDnsCompatible(accessPointPrefix) || accessPointPrefix.match(/\./)) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidAccessPointARN',
            message: 'Access point ARN is not DNS compatible. Got ' + accessPoint
          });
        } //set parsed valid access point


        req._parsedAccessPointArn.accessPoint = accessPoint;
      },

      /**
       * @api private
       */
      validateArnRegion: function validateArnRegion(req) {
        var useArnRegion = req.service.loadUseArnRegionConfig(req);
        var regionFromArn = req._parsedAccessPointArn.region;
        var clientRegion = req.service.config.region;

        if (clientRegion.indexOf('fips') >= 0 || regionFromArn.indexOf('fips') >= 0) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidConfiguration',
            message: 'Access point endpoint is not compatible with FIPS region'
          });
        }

        if (!useArnRegion && regionFromArn !== clientRegion) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidConfiguration',
            message: 'Configured region conflicts with access point region'
          });
        } else if (useArnRegion && regionUtil.getEndpointSuffix(regionFromArn) !== regionUtil.getEndpointSuffix(clientRegion)) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidConfiguration',
            message: 'Configured region and access point region not in same partition'
          });
        }

        if (req.service.config.useAccelerateEndpoint) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidConfiguration',
            message: 'useAccelerateEndpoint config is not supported with access point ARN'
          });
        }
      },

      /**
       * @api private
       */
      loadUseArnRegionConfig: function loadUseArnRegionConfig(req) {
        var envName = 'AWS_S3_USE_ARN_REGION';
        var configName = 's3_use_arn_region';
        var useArnRegion = true;
        var originalConfig = req.service._originalConfig || {};

        if (req.service.config.s3UseArnRegion !== undefined) {
          return req.service.config.s3UseArnRegion;
        } else if (originalConfig.s3UseArnRegion !== undefined) {
          useArnRegion = originalConfig.s3UseArnRegion === true;
        } else if (AWS.util.isNode()) {
          //load from environmental variable AWS_USE_ARN_REGION
          if (process.env[envName]) {
            var value = process.env[envName].trim().toLowerCase();

            if (['false', 'true'].indexOf(value) < 0) {
              throw AWS.util.error(new Error(), {
                code: 'InvalidConfiguration',
                message: envName + ' only accepts true or false. Got ' + process.env[envName],
                retryable: false
              });
            }

            useArnRegion = value === 'true';
          } else {
            //load from shared config property use_arn_region
            var profiles = {};
            var profile = {};

            try {
              profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);
              profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];
            } catch (e) {}

            if (profile[configName]) {
              if (['false', 'true'].indexOf(profile[configName].trim().toLowerCase()) < 0) {
                throw AWS.util.error(new Error(), {
                  code: 'InvalidConfiguration',
                  message: configName + ' only accepts true or false. Got ' + profile[configName],
                  retryable: false
                });
              }

              useArnRegion = profile[configName].trim().toLowerCase() === 'true';
            }
          }
        }

        req.service.config.s3UseArnRegion = useArnRegion;
        return useArnRegion;
      },

      /**
       * @api private
       */
      validateBucketName: function validateBucketName(req) {
        var service = req.service;
        var signatureVersion = service.getSignatureVersion(req);
        var bucket = req.params && req.params.Bucket;
        var key = req.params && req.params.Key;
        var slashIndex = bucket && bucket.indexOf('/');

        if (bucket && slashIndex >= 0) {
          if (typeof key === 'string' && slashIndex > 0) {
            req.params = AWS.util.copy(req.params); // Need to include trailing slash to match sigv2 behavior

            var prefix = bucket.substr(slashIndex + 1) || '';
            req.params.Key = prefix + '/' + key;
            req.params.Bucket = bucket.substr(0, slashIndex);
          } else if (signatureVersion === 'v4') {
            var msg = 'Bucket names cannot contain forward slashes. Bucket: ' + bucket;
            throw AWS.util.error(new Error(), {
              code: 'InvalidBucket',
              message: msg
            });
          }
        }
      },

      /**
       * @api private
       */
      isValidAccelerateOperation: function isValidAccelerateOperation(operation) {
        var invalidOperations = ['createBucket', 'deleteBucket', 'listBuckets'];
        return invalidOperations.indexOf(operation) === -1;
      },

      /**
       * When us-east-1 region endpoint configuration is set, in stead of sending request to
       * global endpoint(e.g. 's3.amazonaws.com'), we will send request to
       * 's3.us-east-1.amazonaws.com'.
       * @api private
       */
      optInUsEast1RegionalEndpoint: function optInUsEast1RegionalEndpoint(req) {
        var service = req.service;
        var config = service.config;
        config.s3UsEast1RegionalEndpoint = resolveRegionalEndpointsFlag(service._originalConfig, {
          env: 'AWS_S3_US_EAST_1_REGIONAL_ENDPOINT',
          sharedConfig: 's3_us_east_1_regional_endpoint',
          clientConfig: 's3UsEast1RegionalEndpoint'
        });

        if (!(service._originalConfig || {}).endpoint && req.httpRequest.region === 'us-east-1' && config.s3UsEast1RegionalEndpoint === 'regional' && req.httpRequest.endpoint.hostname.indexOf('s3.amazonaws.com') >= 0) {
          var insertPoint = config.endpoint.indexOf('.amazonaws.com');
          regionalEndpoint = config.endpoint.substring(0, insertPoint) + '.us-east-1' + config.endpoint.substring(insertPoint);
          req.httpRequest.updateEndpoint(regionalEndpoint);
        }
      },

      /**
       * S3 prefers dns-compatible bucket names to be moved from the uri path
       * to the hostname as a sub-domain.  This is not possible, even for dns-compat
       * buckets when using SSL and the bucket name contains a dot ('.').  The
       * ssl wildcard certificate is only 1-level deep.
       *
       * @api private
       */
      populateURI: function populateURI(req) {
        var httpRequest = req.httpRequest;
        var b = req.params.Bucket;
        var service = req.service;
        var endpoint = httpRequest.endpoint;

        if (b) {
          if (!service.pathStyleBucketName(b)) {
            if (service.config.useAccelerateEndpoint && service.isValidAccelerateOperation(req.operation)) {
              if (service.config.useDualstack) {
                endpoint.hostname = b + '.s3-accelerate.dualstack.amazonaws.com';
              } else {
                endpoint.hostname = b + '.s3-accelerate.amazonaws.com';
              }
            } else if (!service.config.s3BucketEndpoint) {
              endpoint.hostname = b + '.' + endpoint.hostname;
            }

            var port = endpoint.port;

            if (port !== 80 && port !== 443) {
              endpoint.host = endpoint.hostname + ':' + endpoint.port;
            } else {
              endpoint.host = endpoint.hostname;
            }

            httpRequest.virtualHostedBucket = b; // needed for signing the request

            service.removeVirtualHostedBucketFromPath(req);
          }
        }
      },

      /**
       * Takes the bucket name out of the path if bucket is virtual-hosted
       *
       * @api private
       */
      removeVirtualHostedBucketFromPath: function removeVirtualHostedBucketFromPath(req) {
        var httpRequest = req.httpRequest;
        var bucket = httpRequest.virtualHostedBucket;

        if (bucket && httpRequest.path) {
          if (req.params && req.params.Key) {
            var encodedS3Key = '/' + AWS.util.uriEscapePath(req.params.Key);

            if (httpRequest.path.indexOf(encodedS3Key) === 0 && (httpRequest.path.length === encodedS3Key.length || httpRequest.path[encodedS3Key.length] === '?')) {
              //path only contains key or path contains only key and querystring
              return;
            }
          }

          httpRequest.path = httpRequest.path.replace(new RegExp('/' + bucket), '');

          if (httpRequest.path[0] !== '/') {
            httpRequest.path = '/' + httpRequest.path;
          }
        }
      },

      /**
       * When user supply an access point ARN in the Bucket parameter, we need to
       * populate the URI according to the ARN.
       * @api private
       */
      populateUriFromAccessPoint: function populateUriFromAccessPoint(req) {
        if (req.service._originalConfig.endpoint) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidConfiguration',
            message: 'Custom endpoint is not compatible with access point ARN'
          });
        }

        if (req.service.config.s3ForcePathStyle) {
          throw AWS.util.error(new Error(), {
            code: 'InvalidConfiguration',
            message: 'Cannot construct path-style endpoint with access point'
          });
        }

        var accessPointArn = req._parsedAccessPointArn;
        var serviceName = req.service.config.useDualstack ? 's3-accesspoint.dualstack' : 's3-accesspoint';
        var endpoint = req.httpRequest.endpoint;
        var dnsSuffix = regionUtil.getEndpointSuffix(accessPointArn.region);
        var useArnRegion = req.service.config.s3UseArnRegion;
        endpoint.hostname = [accessPointArn.accessPoint + '-' + accessPointArn.accountId, serviceName, useArnRegion ? accessPointArn.region : req.service.config.region, dnsSuffix].join('.');
        endpoint.host = endpoint.hostname;
        var encodedArn = AWS.util.uriEscape(req.params.Bucket);
        var path = req.httpRequest.path; //remove the Bucket value from path

        req.httpRequest.path = path.replace(new RegExp('/' + encodedArn), '');

        if (req.httpRequest.path[0] !== '/') {
          req.httpRequest.path = '/' + req.httpRequest.path;
        }

        req.httpRequest.region = accessPointArn.region; //region used to sign
      },

      /**
       * Adds Expect: 100-continue header if payload is greater-or-equal 1MB
       * @api private
       */
      addExpect100Continue: function addExpect100Continue(req) {
        var len = req.httpRequest.headers['Content-Length'];

        if (AWS.util.isNode() && (len >= 1024 * 1024 || req.params.Body instanceof AWS.util.stream.Stream)) {
          req.httpRequest.headers['Expect'] = '100-continue';
        }
      },

      /**
       * Adds a default content type if none is supplied.
       *
       * @api private
       */
      addContentType: function addContentType(req) {
        var httpRequest = req.httpRequest;

        if (httpRequest.method === 'GET' || httpRequest.method === 'HEAD') {
          // Content-Type is not set in GET/HEAD requests
          delete httpRequest.headers['Content-Type'];
          return;
        }

        if (!httpRequest.headers['Content-Type']) {
          // always have a Content-Type
          httpRequest.headers['Content-Type'] = 'application/octet-stream';
        }

        var contentType = httpRequest.headers['Content-Type'];

        if (AWS.util.isBrowser()) {
          if (typeof httpRequest.body === 'string' && !contentType.match(/;\s*charset=/)) {
            var charset = '; charset=UTF-8';
            httpRequest.headers['Content-Type'] += charset;
          } else {
            var replaceFn = function replaceFn(_, prefix, charsetName) {
              return prefix + charsetName.toUpperCase();
            };

            httpRequest.headers['Content-Type'] = contentType.replace(/(;\s*charset=)(.+)$/, replaceFn);
          }
        }
      },

      /**
       * @api private
       */
      computableChecksumOperations: {
        putBucketCors: true,
        putBucketLifecycle: true,
        putBucketLifecycleConfiguration: true,
        putBucketTagging: true,
        deleteObjects: true,
        putBucketReplication: true,
        putObjectLegalHold: true,
        putObjectRetention: true,
        putObjectLockConfiguration: true
      },

      /**
       * Checks whether checksums should be computed for the request.
       * If the request requires checksums to be computed, this will always
       * return true, otherwise it depends on whether {AWS.Config.computeChecksums}
       * is set.
       *
       * @param req [AWS.Request] the request to check against
       * @return [Boolean] whether to compute checksums for a request.
       * @api private
       */
      willComputeChecksums: function willComputeChecksums(req) {
        if (this.computableChecksumOperations[req.operation]) return true;
        if (!this.config.computeChecksums) return false; // TODO: compute checksums for Stream objects

        if (!AWS.util.Buffer.isBuffer(req.httpRequest.body) && typeof req.httpRequest.body !== 'string') {
          return false;
        }

        var rules = req.service.api.operations[req.operation].input.members; // Sha256 signing disabled, and not a presigned url

        if (req.service.shouldDisableBodySigning(req) && !Object.prototype.hasOwnProperty.call(req.httpRequest.headers, 'presigned-expires')) {
          if (rules.ContentMD5 && !req.params.ContentMD5) {
            return true;
          }
        } // V4 signer uses SHA256 signatures so only compute MD5 if it is required


        if (req.service.getSignerClass(req) === AWS.Signers.V4) {
          if (rules.ContentMD5 && !rules.ContentMD5.required) return false;
        }

        if (rules.ContentMD5 && !req.params.ContentMD5) return true;
      },

      /**
       * A listener that computes the Content-MD5 and sets it in the header.
       * @see AWS.S3.willComputeChecksums
       * @api private
       */
      computeContentMd5: function computeContentMd5(req) {
        if (req.service.willComputeChecksums(req)) {
          var md5 = AWS.util.crypto.md5(req.httpRequest.body, 'base64');
          req.httpRequest.headers['Content-MD5'] = md5;
        }
      },

      /**
       * @api private
       */
      computeSseCustomerKeyMd5: function computeSseCustomerKeyMd5(req) {
        var keys = {
          SSECustomerKey: 'x-amz-server-side-encryption-customer-key-MD5',
          CopySourceSSECustomerKey: 'x-amz-copy-source-server-side-encryption-customer-key-MD5'
        };
        AWS.util.each(keys, function (key, header) {
          if (req.params[key]) {
            var value = AWS.util.crypto.md5(req.params[key], 'base64');
            req.httpRequest.headers[header] = value;
          }
        });
      },

      /**
       * Returns true if the bucket name should be left in the URI path for
       * a request to S3.  This function takes into account the current
       * endpoint protocol (e.g. http or https).
       *
       * @api private
       */
      pathStyleBucketName: function pathStyleBucketName(bucketName) {
        // user can force path style requests via the configuration
        if (this.config.s3ForcePathStyle) return true;
        if (this.config.s3BucketEndpoint) return false;

        if (this.isDnsCompatible(bucketName)) {
          return this.config.sslEnabled && bucketName.match(/\./) ? true : false;
        } else {
          return true; // not dns compatible names must always use path style
        }
      },

      /**
       * Returns true if the bucket name is DNS compatible.  Buckets created
       * outside of the classic region MUST be DNS compatible.
       *
       * @api private
       */
      isDnsCompatible: function isDnsCompatible(bucketName) {
        var b = bucketName;
        var domain = new RegExp(/^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/);
        var ipAddress = new RegExp(/(\d+\.){3}\d+/);
        var dots = new RegExp(/\.\./);
        return b.match(domain) && !b.match(ipAddress) && !b.match(dots) ? true : false;
      },

      /**
       * For COPY operations, some can be error even with status code 200.
       * SDK treats the response as exception when response body indicates
       * an exception or body is empty.
       *
       * @api private
       */
      extractErrorFrom200Response: function extractErrorFrom200Response(resp) {
        if (!operationsWith200StatusCodeError[resp.request.operation]) return;
        var httpResponse = resp.httpResponse;

        if (httpResponse.body && httpResponse.body.toString().match('<Error>')) {
          // Response body with '<Error>...</Error>' indicates an exception.
          // Get S3 client object. In ManagedUpload, this.service refers to
          // S3 client object.
          resp.data = null;
          var service = this.service ? this.service : this;
          service.extractError(resp);
          throw resp.error;
        } else if (!httpResponse.body || !httpResponse.body.toString().match(/<[\w_]/)) {
          // When body is empty or incomplete, S3 might stop the request on detecting client
          // side aborting the request.
          resp.data = null;
          throw AWS.util.error(new Error(), {
            code: 'InternalError',
            message: 'S3 aborted request'
          });
        }
      },

      /**
       * @return [Boolean] whether the error can be retried
       * @api private
       */
      retryableError: function retryableError(error, request) {
        if (operationsWith200StatusCodeError[request.operation] && error.statusCode === 200) {
          return true;
        } else if (request._requestRegionForBucket && request.service.bucketRegionCache[request._requestRegionForBucket]) {
          return false;
        } else if (error && error.code === 'RequestTimeout') {
          return true;
        } else if (error && regionRedirectErrorCodes.indexOf(error.code) != -1 && error.region && error.region != request.httpRequest.region) {
          request.httpRequest.region = error.region;

          if (error.statusCode === 301) {
            request.service.updateReqBucketRegion(request);
          }

          return true;
        } else {
          var _super = AWS.Service.prototype.retryableError;
          return _super.call(this, error, request);
        }
      },

      /**
       * Updates httpRequest with region. If region is not provided, then
       * the httpRequest will be updated based on httpRequest.region
       *
       * @api private
       */
      updateReqBucketRegion: function updateReqBucketRegion(request, region) {
        var httpRequest = request.httpRequest;

        if (typeof region === 'string' && region.length) {
          httpRequest.region = region;
        }

        if (!httpRequest.endpoint.host.match(/s3(?!-accelerate).*\.amazonaws\.com$/)) {
          return;
        }

        var service = request.service;
        var s3Config = service.config;
        var s3BucketEndpoint = s3Config.s3BucketEndpoint;

        if (s3BucketEndpoint) {
          delete s3Config.s3BucketEndpoint;
        }

        var newConfig = AWS.util.copy(s3Config);
        delete newConfig.endpoint;
        newConfig.region = httpRequest.region;
        httpRequest.endpoint = new AWS.S3(newConfig).endpoint;
        service.populateURI(request);
        s3Config.s3BucketEndpoint = s3BucketEndpoint;
        httpRequest.headers.Host = httpRequest.endpoint.host;

        if (request._asm.currentState === 'validate') {
          request.removeListener('build', service.populateURI);
          request.addListener('build', service.removeVirtualHostedBucketFromPath);
        }
      },

      /**
       * Provides a specialized parser for getBucketLocation -- all other
       * operations are parsed by the super class.
       *
       * @api private
       */
      extractData: function extractData(resp) {
        var req = resp.request;

        if (req.operation === 'getBucketLocation') {
          var match = resp.httpResponse.body.toString().match(/>(.+)<\/Location/);
          delete resp.data['_'];

          if (match) {
            resp.data.LocationConstraint = match[1];
          } else {
            resp.data.LocationConstraint = '';
          }
        }

        var bucket = req.params.Bucket || null;

        if (req.operation === 'deleteBucket' && typeof bucket === 'string' && !resp.error) {
          req.service.clearBucketRegionCache(bucket);
        } else {
          var headers = resp.httpResponse.headers || {};
          var region = headers['x-amz-bucket-region'] || null;

          if (!region && req.operation === 'createBucket' && !resp.error) {
            var createBucketConfiguration = req.params.CreateBucketConfiguration;

            if (!createBucketConfiguration) {
              region = 'us-east-1';
            } else if (createBucketConfiguration.LocationConstraint === 'EU') {
              region = 'eu-west-1';
            } else {
              region = createBucketConfiguration.LocationConstraint;
            }
          }

          if (region) {
            if (bucket && region !== req.service.bucketRegionCache[bucket]) {
              req.service.bucketRegionCache[bucket] = region;
            }
          }
        }

        req.service.extractRequestIds(resp);
      },

      /**
       * Extracts an error object from the http response.
       *
       * @api private
       */
      extractError: function extractError(resp) {
        var codes = {
          304: 'NotModified',
          403: 'Forbidden',
          400: 'BadRequest',
          404: 'NotFound'
        };
        var req = resp.request;
        var code = resp.httpResponse.statusCode;
        var body = resp.httpResponse.body || '';
        var headers = resp.httpResponse.headers || {};
        var region = headers['x-amz-bucket-region'] || null;
        var bucket = req.params.Bucket || null;
        var bucketRegionCache = req.service.bucketRegionCache;

        if (region && bucket && region !== bucketRegionCache[bucket]) {
          bucketRegionCache[bucket] = region;
        }

        var cachedRegion;

        if (codes[code] && body.length === 0) {
          if (bucket && !region) {
            cachedRegion = bucketRegionCache[bucket] || null;

            if (cachedRegion !== req.httpRequest.region) {
              region = cachedRegion;
            }
          }

          resp.error = AWS.util.error(new Error(), {
            code: codes[code],
            message: null,
            region: region
          });
        } else {
          var data = new AWS.XML.Parser().parse(body.toString());

          if (data.Region && !region) {
            region = data.Region;

            if (bucket && region !== bucketRegionCache[bucket]) {
              bucketRegionCache[bucket] = region;
            }
          } else if (bucket && !region && !data.Region) {
            cachedRegion = bucketRegionCache[bucket] || null;

            if (cachedRegion !== req.httpRequest.region) {
              region = cachedRegion;
            }
          }

          resp.error = AWS.util.error(new Error(), {
            code: data.Code || code,
            message: data.Message || null,
            region: region
          });
        }

        req.service.extractRequestIds(resp);
      },

      /**
       * If region was not obtained synchronously, then send async request
       * to get bucket region for errors resulting from wrong region.
       *
       * @api private
       */
      requestBucketRegion: function requestBucketRegion(resp, done) {
        var error = resp.error;
        var req = resp.request;
        var bucket = req.params.Bucket || null;

        if (!error || !bucket || error.region || req.operation === 'listObjects' || AWS.util.isNode() && req.operation === 'headBucket' || error.statusCode === 400 && req.operation !== 'headObject' || regionRedirectErrorCodes.indexOf(error.code) === -1) {
          return done();
        }

        var reqOperation = AWS.util.isNode() ? 'headBucket' : 'listObjects';
        var reqParams = {
          Bucket: bucket
        };
        if (reqOperation === 'listObjects') reqParams.MaxKeys = 0;
        var regionReq = req.service[reqOperation](reqParams);
        regionReq._requestRegionForBucket = bucket;
        regionReq.send(function () {
          var region = req.service.bucketRegionCache[bucket] || null;
          error.region = region;
          done();
        });
      },

      /**
      * For browser only. If NetworkingError received, will attempt to obtain
      * the bucket region.
      *
      * @api private
      */
      reqRegionForNetworkingError: function reqRegionForNetworkingError(resp, done) {
        if (!AWS.util.isBrowser()) {
          return done();
        }

        var error = resp.error;
        var request = resp.request;
        var bucket = request.params.Bucket;

        if (!error || error.code !== 'NetworkingError' || !bucket || request.httpRequest.region === 'us-east-1') {
          return done();
        }

        var service = request.service;
        var bucketRegionCache = service.bucketRegionCache;
        var cachedRegion = bucketRegionCache[bucket] || null;

        if (cachedRegion && cachedRegion !== request.httpRequest.region) {
          service.updateReqBucketRegion(request, cachedRegion);
          done();
        } else if (!service.isDnsCompatible(bucket)) {
          service.updateReqBucketRegion(request, 'us-east-1');

          if (bucketRegionCache[bucket] !== 'us-east-1') {
            bucketRegionCache[bucket] = 'us-east-1';
          }

          done();
        } else if (request.httpRequest.virtualHostedBucket) {
          var getRegionReq = service.listObjects({
            Bucket: bucket,
            MaxKeys: 0
          });
          service.updateReqBucketRegion(getRegionReq, 'us-east-1');
          getRegionReq._requestRegionForBucket = bucket;
          getRegionReq.send(function () {
            var region = service.bucketRegionCache[bucket] || null;

            if (region && region !== request.httpRequest.region) {
              service.updateReqBucketRegion(request, region);
            }

            done();
          });
        } else {
          // DNS-compatible path-style
          // (s3ForcePathStyle or bucket name with dot over https)
          // Cannot obtain region information for this case
          done();
        }
      },

      /**
       * Cache for bucket region.
       *
       * @api private
       */
      bucketRegionCache: {},

      /**
       * Clears bucket region cache.
       *
       * @api private
       */
      clearBucketRegionCache: function clearBucketRegionCache(buckets) {
        var bucketRegionCache = this.bucketRegionCache;

        if (!buckets) {
          buckets = Object.keys(bucketRegionCache);
        } else if (typeof buckets === 'string') {
          buckets = [buckets];
        }

        for (var i = 0; i < buckets.length; i++) {
          delete bucketRegionCache[buckets[i]];
        }

        return bucketRegionCache;
      },

      /**
       * Corrects request region if bucket's cached region is different
       *
       * @api private
       */
      correctBucketRegionFromCache: function correctBucketRegionFromCache(req) {
        var bucket = req.params.Bucket || null;

        if (bucket) {
          var service = req.service;
          var requestRegion = req.httpRequest.region;
          var cachedRegion = service.bucketRegionCache[bucket];

          if (cachedRegion && cachedRegion !== requestRegion) {
            service.updateReqBucketRegion(req, cachedRegion);
          }
        }
      },

      /**
       * Extracts S3 specific request ids from the http response.
       *
       * @api private
       */
      extractRequestIds: function extractRequestIds(resp) {
        var extendedRequestId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-id-2'] : null;
        var cfId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-cf-id'] : null;
        resp.extendedRequestId = extendedRequestId;
        resp.cfId = cfId;

        if (resp.error) {
          resp.error.requestId = resp.requestId || null;
          resp.error.extendedRequestId = extendedRequestId;
          resp.error.cfId = cfId;
        }
      },

      /**
       * Get a pre-signed URL for a given operation name.
       *
       * @note You must ensure that you have static or previously resolved
       *   credentials if you call this method synchronously (with no callback),
       *   otherwise it may not properly sign the request. If you cannot guarantee
       *   this (you are using an asynchronous credential provider, i.e., EC2
       *   IAM roles), you should always call this method with an asynchronous
       *   callback.
       * @note Not all operation parameters are supported when using pre-signed
       *   URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,
       *   `ContentLength`, or `Tagging` must be provided as headers when sending a
       *   request. If you are using pre-signed URLs to upload from a browser and
       *   need to use these fields, see {createPresignedPost}.
       * @note The default signer allows altering the request by adding corresponding
       *   headers to set some parameters (e.g. Range) and these added parameters
       *   won't be signed. You must use signatureVersion v4 to to include these
       *   parameters in the signed portion of the URL and enforce exact matching
       *   between headers and signed params in the URL.
       * @note This operation cannot be used with a promise. See note above regarding
       *   asynchronous credentials and use with a callback.
       * @param operation [String] the name of the operation to call
       * @param params [map] parameters to pass to the operation. See the given
       *   operation for the expected operation parameters. In addition, you can
       *   also pass the "Expires" parameter to inform S3 how long the URL should
       *   work for.
       * @option params Expires [Integer] (900) the number of seconds to expire
       *   the pre-signed URL operation in. Defaults to 15 minutes.
       * @param callback [Function] if a callback is provided, this function will
       *   pass the URL as the second parameter (after the error parameter) to
       *   the callback function.
       * @return [String] if called synchronously (with no callback), returns the
       *   signed URL.
       * @return [null] nothing is returned if a callback is provided.
       * @example Pre-signing a getObject operation (synchronously)
       *   var params = {Bucket: 'bucket', Key: 'key'};
       *   var url = s3.getSignedUrl('getObject', params);
       *   console.log('The URL is', url);
       * @example Pre-signing a putObject (asynchronously)
       *   var params = {Bucket: 'bucket', Key: 'key'};
       *   s3.getSignedUrl('putObject', params, function (err, url) {
       *     console.log('The URL is', url);
       *   });
       * @example Pre-signing a putObject operation with a specific payload
       *   var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};
       *   var url = s3.getSignedUrl('putObject', params);
       *   console.log('The URL is', url);
       * @example Passing in a 1-minute expiry time for a pre-signed URL
       *   var params = {Bucket: 'bucket', Key: 'key', Expires: 60};
       *   var url = s3.getSignedUrl('getObject', params);
       *   console.log('The URL is', url); // expires in 60 seconds
       */
      getSignedUrl: function getSignedUrl(operation, params, callback) {
        params = AWS.util.copy(params || {});
        var expires = params.Expires || 900;

        if (typeof expires !== 'number') {
          throw AWS.util.error(new Error(), {
            code: 'InvalidParameterException',
            message: 'The expiration must be a number, received ' + typeof expires
          });
        }

        delete params.Expires; // we can't validate this

        var request = this.makeRequest(operation, params);

        if (callback) {
          AWS.util.defer(function () {
            request.presign(expires, callback);
          });
        } else {
          return request.presign(expires, callback);
        }
      },

      /**
       * @!method  getSignedUrlPromise()
       *   Returns a 'thenable' promise that will be resolved with a pre-signed URL
       *   for a given operation name.
       *
       *   Two callbacks can be provided to the `then` method on the returned promise.
       *   The first callback will be called if the promise is fulfilled, and the second
       *   callback will be called if the promise is rejected.
       *   @note Not all operation parameters are supported when using pre-signed
       *      URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,
       *      `ContentLength`, or `Tagging` must be provided as headers when sending a
       *      request. If you are using pre-signed URLs to upload from a browser and
       *      need to use these fields, see {createPresignedPost}.
       *   @param operation [String] the name of the operation to call
       *   @param params [map] parameters to pass to the operation. See the given
       *      operation for the expected operation parameters. In addition, you can
       *      also pass the "Expires" parameter to inform S3 how long the URL should
       *      work for.
       *   @option params Expires [Integer] (900) the number of seconds to expire
       *      the pre-signed URL operation in. Defaults to 15 minutes.
       *   @callback fulfilledCallback function(url)
       *     Called if the promise is fulfilled.
       *     @param url [String] the signed url
       *   @callback rejectedCallback function(err)
       *     Called if the promise is rejected.
       *     @param err [Error] if an error occurred, this value will be filled
       *   @return [Promise] A promise that represents the state of the `refresh` call.
       *   @example Pre-signing a getObject operation
       *      var params = {Bucket: 'bucket', Key: 'key'};
       *      var promise = s3.getSignedUrlPromise('getObject', params);
       *      promise.then(function(url) {
       *        console.log('The URL is', url);
       *      }, function(err) { ... });
       *   @example Pre-signing a putObject operation with a specific payload
       *      var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};
       *      var promise = s3.getSignedUrlPromise('putObject', params);
       *      promise.then(function(url) {
       *        console.log('The URL is', url);
       *      }, function(err) { ... });
       *   @example Passing in a 1-minute expiry time for a pre-signed URL
       *      var params = {Bucket: 'bucket', Key: 'key', Expires: 60};
       *      var promise = s3.getSignedUrlPromise('getObject', params);
       *      promise.then(function(url) {
       *        console.log('The URL is', url);
       *      }, function(err) { ... });
       */

      /**
       * Get a pre-signed POST policy to support uploading to S3 directly from an
       * HTML form.
       *
       * @param params [map]
       * @option params Bucket [String]     The bucket to which the post should be
       *                                    uploaded
       * @option params Expires [Integer]   (3600) The number of seconds for which
       *                                    the presigned policy should be valid.
       * @option params Conditions [Array]  An array of conditions that must be met
       *                                    for the presigned policy to allow the
       *                                    upload. This can include required tags,
       *                                    the accepted range for content lengths,
       *                                    etc.
       * @see http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-HTTPPOSTConstructPolicy.html
       * @option params Fields [map]        Fields to include in the form. All
       *                                    values passed in as fields will be
       *                                    signed as exact match conditions.
       * @param callback [Function]
       *
       * @note All fields passed in when creating presigned post data will be signed
       *   as exact match conditions. Any fields that will be interpolated by S3
       *   must be added to the fields hash after signing, and an appropriate
       *   condition for such fields must be explicitly added to the Conditions
       *   array passed to this function before signing.
       *
       * @example Presiging post data with a known key
       *   var params = {
       *     Bucket: 'bucket',
       *     Fields: {
       *       key: 'key'
       *     }
       *   };
       *   s3.createPresignedPost(params, function(err, data) {
       *     if (err) {
       *       console.error('Presigning post data encountered an error', err);
       *     } else {
       *       console.log('The post data is', data);
       *     }
       *   });
       *
       * @example Presigning post data with an interpolated key
       *   var params = {
       *     Bucket: 'bucket',
       *     Conditions: [
       *       ['starts-with', '$key', 'path/to/uploads/']
       *     ]
       *   };
       *   s3.createPresignedPost(params, function(err, data) {
       *     if (err) {
       *       console.error('Presigning post data encountered an error', err);
       *     } else {
       *       data.Fields.key = 'path/to/uploads/${filename}';
       *       console.log('The post data is', data);
       *     }
       *   });
       *
       * @note You must ensure that you have static or previously resolved
       *   credentials if you call this method synchronously (with no callback),
       *   otherwise it may not properly sign the request. If you cannot guarantee
       *   this (you are using an asynchronous credential provider, i.e., EC2
       *   IAM roles), you should always call this method with an asynchronous
       *   callback.
       *
       * @return [map]  If called synchronously (with no callback), returns a hash
       *                with the url to set as the form action and a hash of fields
       *                to include in the form.
       * @return [null] Nothing is returned if a callback is provided.
       *
       * @callback callback function (err, data)
       *  @param err [Error] the error object returned from the policy signer
       *  @param data [map] The data necessary to construct an HTML form
       *  @param data.url [String] The URL to use as the action of the form
       *  @param data.fields [map] A hash of fields that must be included in the
       *                           form for the upload to succeed. This hash will
       *                           include the signed POST policy, your access key
       *                           ID and security token (if present), etc. These
       *                           may be safely included as input elements of type
       *                           'hidden.'
       */
      createPresignedPost: function createPresignedPost(params, callback) {
        if (typeof params === 'function' && callback === undefined) {
          callback = params;
          params = null;
        }

        params = AWS.util.copy(params || {});
        var boundParams = this.config.params || {};
        var bucket = params.Bucket || boundParams.Bucket,
            self = this,
            config = this.config,
            endpoint = AWS.util.copy(this.endpoint);

        if (!config.s3BucketEndpoint) {
          endpoint.pathname = '/' + bucket;
        }

        function finalizePost() {
          return {
            url: AWS.util.urlFormat(endpoint),
            fields: self.preparePostFields(config.credentials, config.region, bucket, params.Fields, params.Conditions, params.Expires)
          };
        }

        if (callback) {
          config.getCredentials(function (err) {
            if (err) {
              callback(err);
            }

            callback(null, finalizePost());
          });
        } else {
          return finalizePost();
        }
      },

      /**
       * @api private
       */
      preparePostFields: function preparePostFields(credentials, region, bucket, fields, conditions, expiresInSeconds) {
        var now = this.getSkewCorrectedDate();

        if (!credentials || !region || !bucket) {
          throw new Error('Unable to create a POST object policy without a bucket,' + ' region, and credentials');
        }

        fields = AWS.util.copy(fields || {});
        conditions = (conditions || []).slice(0);
        expiresInSeconds = expiresInSeconds || 3600;
        var signingDate = AWS.util.date.iso8601(now).replace(/[:\-]|\.\d{3}/g, '');
        var shortDate = signingDate.substr(0, 8);
        var scope = v4Credentials.createScope(shortDate, region, 's3');
        var credential = credentials.accessKeyId + '/' + scope;
        fields['bucket'] = bucket;
        fields['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';
        fields['X-Amz-Credential'] = credential;
        fields['X-Amz-Date'] = signingDate;

        if (credentials.sessionToken) {
          fields['X-Amz-Security-Token'] = credentials.sessionToken;
        }

        for (var field in fields) {
          if (fields.hasOwnProperty(field)) {
            var condition = {};
            condition[field] = fields[field];
            conditions.push(condition);
          }
        }

        fields.Policy = this.preparePostPolicy(new Date(now.valueOf() + expiresInSeconds * 1000), conditions);
        fields['X-Amz-Signature'] = AWS.util.crypto.hmac(v4Credentials.getSigningKey(credentials, shortDate, region, 's3', true), fields.Policy, 'hex');
        return fields;
      },

      /**
       * @api private
       */
      preparePostPolicy: function preparePostPolicy(expiration, conditions) {
        return AWS.util.base64.encode(JSON.stringify({
          expiration: AWS.util.date.iso8601(expiration),
          conditions: conditions
        }));
      },

      /**
       * @api private
       */
      prepareSignedUrl: function prepareSignedUrl(request) {
        request.addListener('validate', request.service.noPresignedContentLength);
        request.removeListener('build', request.service.addContentType);

        if (!request.params.Body) {
          // no Content-MD5/SHA-256 if body is not provided
          request.removeListener('build', request.service.computeContentMd5);
        } else {
          request.addListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);
        }
      },

      /**
       * @api private
       * @param request
       */
      disableBodySigning: function disableBodySigning(request) {
        var headers = request.httpRequest.headers; // Add the header to anything that isn't a presigned url, unless that presigned url had a body defined

        if (!Object.prototype.hasOwnProperty.call(headers, 'presigned-expires')) {
          headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';
        }
      },

      /**
       * @api private
       */
      noPresignedContentLength: function noPresignedContentLength(request) {
        if (request.params.ContentLength !== undefined) {
          throw AWS.util.error(new Error(), {
            code: 'UnexpectedParameter',
            message: 'ContentLength is not supported in pre-signed URLs.'
          });
        }
      },
      createBucket: function createBucket(params, callback) {
        // When creating a bucket *outside* the classic region, the location
        // constraint must be set for the bucket and it must match the endpoint.
        // This chunk of code will set the location constraint param based
        // on the region (when possible), but it will not override a passed-in
        // location constraint.
        if (typeof params === 'function' || !params) {
          callback = callback || params;
          params = {};
        }

        var hostname = this.endpoint.hostname; // copy params so that appending keys does not unintentioinallly
        // mutate params object argument passed in by user

        var copiedParams = AWS.util.copy(params);

        if (hostname !== this.api.globalEndpoint && !params.CreateBucketConfiguration) {
          copiedParams.CreateBucketConfiguration = {
            LocationConstraint: this.config.region
          };
        }

        return this.makeRequest('createBucket', copiedParams, callback);
      },

      /**
       * @see AWS.S3.ManagedUpload
       * @overload upload(params = {}, [options], [callback])
       *   Uploads an arbitrarily sized buffer, blob, or stream, using intelligent
       *   concurrent handling of parts if the payload is large enough. You can
       *   configure the concurrent queue size by setting `options`. Note that this
       *   is the only operation for which the SDK can retry requests with stream
       *   bodies.
       *
       *   @param (see AWS.S3.putObject)
       *   @option (see AWS.S3.ManagedUpload.constructor)
       *   @return [AWS.S3.ManagedUpload] the managed upload object that can call
       *     `send()` or track progress.
       *   @example Uploading a stream object
       *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};
       *     s3.upload(params, function(err, data) {
       *       console.log(err, data);
       *     });
       *   @example Uploading a stream with concurrency of 1 and partSize of 10mb
       *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};
       *     var options = {partSize: 10 * 1024 * 1024, queueSize: 1};
       *     s3.upload(params, options, function(err, data) {
       *       console.log(err, data);
       *     });
       * @callback callback function(err, data)
       *   @param err [Error] an error or null if no error occurred.
       *   @param data [map] The response data from the successful upload:
       *   @param data.Location [String] the URL of the uploaded object
       *   @param data.ETag [String] the ETag of the uploaded object
       *   @param data.Bucket [String]  the bucket to which the object was uploaded
       *   @param data.Key [String] the key to which the object was uploaded
       */
      upload: function upload(params, options, callback) {
        if (typeof options === 'function' && callback === undefined) {
          callback = options;
          options = null;
        }

        options = options || {};
        options = AWS.util.merge(options || {}, {
          service: this,
          params: params
        });
        var uploader = new AWS.S3.ManagedUpload(options);
        if (typeof callback === 'function') uploader.send(callback);
        return uploader;
      }
    });
    /**
     * @api private
     */

    AWS.S3.addPromisesToClass = function addPromisesToClass(PromiseDependency) {
      this.prototype.getSignedUrlPromise = AWS.util.promisifyMethod('getSignedUrl', PromiseDependency);
    };
    /**
     * @api private
     */


    AWS.S3.deletePromisesFromClass = function deletePromisesFromClass() {
      delete this.prototype.getSignedUrlPromise;
    };

    AWS.util.addPromises(AWS.S3);
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/services/sts.js":
  /*!**************************************************!*\
    !*** ./node_modules/aws-sdk/lib/services/sts.js ***!
    \**************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibServicesStsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var resolveRegionalEndpointsFlag = __webpack_require__(
    /*! ../config_regional_endpoint */
    "./node_modules/aws-sdk/lib/config_regional_endpoint.js");

    var ENV_REGIONAL_ENDPOINT_ENABLED = 'AWS_STS_REGIONAL_ENDPOINTS';
    var CONFIG_REGIONAL_ENDPOINT_ENABLED = 'sts_regional_endpoints';
    AWS.util.update(AWS.STS.prototype, {
      /**
       * @overload credentialsFrom(data, credentials = null)
       *   Creates a credentials object from STS response data containing
       *   credentials information. Useful for quickly setting AWS credentials.
       *
       *   @note This is a low-level utility function. If you want to load temporary
       *     credentials into your process for subsequent requests to AWS resources,
       *     you should use {AWS.TemporaryCredentials} instead.
       *   @param data [map] data retrieved from a call to {getFederatedToken},
       *     {getSessionToken}, {assumeRole}, or {assumeRoleWithWebIdentity}.
       *   @param credentials [AWS.Credentials] an optional credentials object to
       *     fill instead of creating a new object. Useful when modifying an
       *     existing credentials object from a refresh call.
       *   @return [AWS.TemporaryCredentials] the set of temporary credentials
       *     loaded from a raw STS operation response.
       *   @example Using credentialsFrom to load global AWS credentials
       *     var sts = new AWS.STS();
       *     sts.getSessionToken(function (err, data) {
       *       if (err) console.log("Error getting credentials");
       *       else {
       *         AWS.config.credentials = sts.credentialsFrom(data);
       *       }
       *     });
       *   @see AWS.TemporaryCredentials
       */
      credentialsFrom: function credentialsFrom(data, credentials) {
        if (!data) return null;
        if (!credentials) credentials = new AWS.TemporaryCredentials();
        credentials.expired = false;
        credentials.accessKeyId = data.Credentials.AccessKeyId;
        credentials.secretAccessKey = data.Credentials.SecretAccessKey;
        credentials.sessionToken = data.Credentials.SessionToken;
        credentials.expireTime = data.Credentials.Expiration;
        return credentials;
      },
      assumeRoleWithWebIdentity: function assumeRoleWithWebIdentity(params, callback) {
        return this.makeUnauthenticatedRequest('assumeRoleWithWebIdentity', params, callback);
      },
      assumeRoleWithSAML: function assumeRoleWithSAML(params, callback) {
        return this.makeUnauthenticatedRequest('assumeRoleWithSAML', params, callback);
      },

      /**
       * @api private
       */
      setupRequestListeners: function setupRequestListeners(request) {
        request.addListener('validate', this.optInRegionalEndpoint, true);
      },

      /**
       * @api private
       */
      optInRegionalEndpoint: function optInRegionalEndpoint(req) {
        var service = req.service;
        var config = service.config;
        config.stsRegionalEndpoints = resolveRegionalEndpointsFlag(service._originalConfig, {
          env: ENV_REGIONAL_ENDPOINT_ENABLED,
          sharedConfig: CONFIG_REGIONAL_ENDPOINT_ENABLED,
          clientConfig: 'stsRegionalEndpoints'
        });

        if (config.stsRegionalEndpoints === 'regional' && service.isGlobalEndpoint) {
          //client will throw if region is not supplied; request will be signed with specified region
          if (!config.region) {
            throw AWS.util.error(new Error(), {
              code: 'ConfigError',
              message: 'Missing region in config'
            });
          }

          var insertPoint = config.endpoint.indexOf('.amazonaws.com');
          var regionalEndpoint = config.endpoint.substring(0, insertPoint) + '.' + config.region + config.endpoint.substring(insertPoint);
          req.httpRequest.updateEndpoint(regionalEndpoint);
          req.httpRequest.region = config.region;
        }
      }
    });
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/signers/presign.js":
  /*!*****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/signers/presign.js ***!
    \*****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSignersPresignJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;
    /**
     * @api private
     */

    var expiresHeader = 'presigned-expires';
    /**
     * @api private
     */

    function signedUrlBuilder(request) {
      var expires = request.httpRequest.headers[expiresHeader];
      var signerClass = request.service.getSignerClass(request);
      delete request.httpRequest.headers['User-Agent'];
      delete request.httpRequest.headers['X-Amz-User-Agent'];

      if (signerClass === AWS.Signers.V4) {
        if (expires > 604800) {
          // one week expiry is invalid
          var message = 'Presigning does not support expiry time greater ' + 'than a week with SigV4 signing.';
          throw AWS.util.error(new Error(), {
            code: 'InvalidExpiryTime',
            message: message,
            retryable: false
          });
        }

        request.httpRequest.headers[expiresHeader] = expires;
      } else if (signerClass === AWS.Signers.S3) {
        var now = request.service ? request.service.getSkewCorrectedDate() : AWS.util.date.getDate();
        request.httpRequest.headers[expiresHeader] = parseInt(AWS.util.date.unixTimestamp(now) + expires, 10).toString();
      } else {
        throw AWS.util.error(new Error(), {
          message: 'Presigning only supports S3 or SigV4 signing.',
          code: 'UnsupportedSigner',
          retryable: false
        });
      }
    }
    /**
     * @api private
     */


    function signedUrlSigner(request) {
      var endpoint = request.httpRequest.endpoint;
      var parsedUrl = AWS.util.urlParse(request.httpRequest.path);
      var queryParams = {};

      if (parsedUrl.search) {
        queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));
      }

      var auth = request.httpRequest.headers['Authorization'].split(' ');

      if (auth[0] === 'AWS') {
        auth = auth[1].split(':');
        queryParams['AWSAccessKeyId'] = auth[0];
        queryParams['Signature'] = auth[1];
        AWS.util.each(request.httpRequest.headers, function (key, value) {
          if (key === expiresHeader) key = 'Expires';

          if (key.indexOf('x-amz-meta-') === 0) {
            // Delete existing, potentially not normalized key
            delete queryParams[key];
            key = key.toLowerCase();
          }

          queryParams[key] = value;
        });
        delete request.httpRequest.headers[expiresHeader];
        delete queryParams['Authorization'];
        delete queryParams['Host'];
      } else if (auth[0] === 'AWS4-HMAC-SHA256') {
        // SigV4 signing
        auth.shift();
        var rest = auth.join(' ');
        var signature = rest.match(/Signature=(.*?)(?:,|\s|\r?\n|$)/)[1];
        queryParams['X-Amz-Signature'] = signature;
        delete queryParams['Expires'];
      } // build URL


      endpoint.pathname = parsedUrl.pathname;
      endpoint.search = AWS.util.queryParamsToString(queryParams);
    }
    /**
     * @api private
     */


    AWS.Signers.Presign = inherit({
      /**
       * @api private
       */
      sign: function sign(request, expireTime, callback) {
        request.httpRequest.headers[expiresHeader] = expireTime || 3600;
        request.on('build', signedUrlBuilder);
        request.on('sign', signedUrlSigner);
        request.removeListener('afterBuild', AWS.EventListeners.Core.SET_CONTENT_LENGTH);
        request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);
        request.emit('beforePresign', [request]);

        if (callback) {
          request.build(function () {
            if (this.response.error) callback(this.response.error);else {
              callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));
            }
          });
        } else {
          request.build();
          if (request.response.error) throw request.response.error;
          return AWS.util.urlFormat(request.httpRequest.endpoint);
        }
      }
    });
    /**
     * @api private
     */

    module.exports = AWS.Signers.Presign;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/signers/request_signer.js":
  /*!************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/signers/request_signer.js ***!
    \************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSignersRequest_signerJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;
    /**
     * @api private
     */

    AWS.Signers.RequestSigner = inherit({
      constructor: function RequestSigner(request) {
        this.request = request;
      },
      setServiceClientId: function setServiceClientId(id) {
        this.serviceClientId = id;
      },
      getServiceClientId: function getServiceClientId() {
        return this.serviceClientId;
      }
    });

    AWS.Signers.RequestSigner.getVersion = function getVersion(version) {
      switch (version) {
        case 'v2':
          return AWS.Signers.V2;

        case 'v3':
          return AWS.Signers.V3;

        case 's3v4':
          return AWS.Signers.V4;

        case 'v4':
          return AWS.Signers.V4;

        case 's3':
          return AWS.Signers.S3;

        case 'v3https':
          return AWS.Signers.V3Https;
      }

      throw new Error('Unknown signing version ' + version);
    };

    __webpack_require__(
    /*! ./v2 */
    "./node_modules/aws-sdk/lib/signers/v2.js");

    __webpack_require__(
    /*! ./v3 */
    "./node_modules/aws-sdk/lib/signers/v3.js");

    __webpack_require__(
    /*! ./v3https */
    "./node_modules/aws-sdk/lib/signers/v3https.js");

    __webpack_require__(
    /*! ./v4 */
    "./node_modules/aws-sdk/lib/signers/v4.js");

    __webpack_require__(
    /*! ./s3 */
    "./node_modules/aws-sdk/lib/signers/s3.js");

    __webpack_require__(
    /*! ./presign */
    "./node_modules/aws-sdk/lib/signers/presign.js");
    /***/

  },

  /***/
  "./node_modules/aws-sdk/lib/signers/s3.js":
  /*!************************************************!*\
    !*** ./node_modules/aws-sdk/lib/signers/s3.js ***!
    \************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSignersS3Js(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;
    /**
     * @api private
     */

    AWS.Signers.S3 = inherit(AWS.Signers.RequestSigner, {
      /**
       * When building the stringToSign, these sub resource params should be
       * part of the canonical resource string with their NON-decoded values
       */
      subResources: {
        'acl': 1,
        'accelerate': 1,
        'analytics': 1,
        'cors': 1,
        'lifecycle': 1,
        'delete': 1,
        'inventory': 1,
        'location': 1,
        'logging': 1,
        'metrics': 1,
        'notification': 1,
        'partNumber': 1,
        'policy': 1,
        'requestPayment': 1,
        'replication': 1,
        'restore': 1,
        'tagging': 1,
        'torrent': 1,
        'uploadId': 1,
        'uploads': 1,
        'versionId': 1,
        'versioning': 1,
        'versions': 1,
        'website': 1
      },
      // when building the stringToSign, these querystring params should be
      // part of the canonical resource string with their NON-encoded values
      responseHeaders: {
        'response-content-type': 1,
        'response-content-language': 1,
        'response-expires': 1,
        'response-cache-control': 1,
        'response-content-disposition': 1,
        'response-content-encoding': 1
      },
      addAuthorization: function addAuthorization(credentials, date) {
        if (!this.request.headers['presigned-expires']) {
          this.request.headers['X-Amz-Date'] = AWS.util.date.rfc822(date);
        }

        if (credentials.sessionToken) {
          // presigned URLs require this header to be lowercased
          this.request.headers['x-amz-security-token'] = credentials.sessionToken;
        }

        var signature = this.sign(credentials.secretAccessKey, this.stringToSign());
        var auth = 'AWS ' + credentials.accessKeyId + ':' + signature;
        this.request.headers['Authorization'] = auth;
      },
      stringToSign: function stringToSign() {
        var r = this.request;
        var parts = [];
        parts.push(r.method);
        parts.push(r.headers['Content-MD5'] || '');
        parts.push(r.headers['Content-Type'] || ''); // This is the "Date" header, but we use X-Amz-Date.
        // The S3 signing mechanism requires us to pass an empty
        // string for this Date header regardless.

        parts.push(r.headers['presigned-expires'] || '');
        var headers = this.canonicalizedAmzHeaders();
        if (headers) parts.push(headers);
        parts.push(this.canonicalizedResource());
        return parts.join('\n');
      },
      canonicalizedAmzHeaders: function canonicalizedAmzHeaders() {
        var amzHeaders = [];
        AWS.util.each(this.request.headers, function (name) {
          if (name.match(/^x-amz-/i)) amzHeaders.push(name);
        });
        amzHeaders.sort(function (a, b) {
          return a.toLowerCase() < b.toLowerCase() ? -1 : 1;
        });
        var parts = [];
        AWS.util.arrayEach.call(this, amzHeaders, function (name) {
          parts.push(name.toLowerCase() + ':' + String(this.request.headers[name]));
        });
        return parts.join('\n');
      },
      canonicalizedResource: function canonicalizedResource() {
        var r = this.request;
        var parts = r.path.split('?');
        var path = parts[0];
        var querystring = parts[1];
        var resource = '';
        if (r.virtualHostedBucket) resource += '/' + r.virtualHostedBucket;
        resource += path;

        if (querystring) {
          // collect a list of sub resources and query params that need to be signed
          var resources = [];
          AWS.util.arrayEach.call(this, querystring.split('&'), function (param) {
            var name = param.split('=')[0];
            var value = param.split('=')[1];

            if (this.subResources[name] || this.responseHeaders[name]) {
              var subresource = {
                name: name
              };

              if (value !== undefined) {
                if (this.subResources[name]) {
                  subresource.value = value;
                } else {
                  subresource.value = decodeURIComponent(value);
                }
              }

              resources.push(subresource);
            }
          });
          resources.sort(function (a, b) {
            return a.name < b.name ? -1 : 1;
          });

          if (resources.length) {
            querystring = [];
            AWS.util.arrayEach(resources, function (res) {
              if (res.value === undefined) {
                querystring.push(res.name);
              } else {
                querystring.push(res.name + '=' + res.value);
              }
            });
            resource += '?' + querystring.join('&');
          }
        }

        return resource;
      },
      sign: function sign(secret, string) {
        return AWS.util.crypto.hmac(secret, string, 'base64', 'sha1');
      }
    });
    /**
     * @api private
     */

    module.exports = AWS.Signers.S3;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/signers/v2.js":
  /*!************************************************!*\
    !*** ./node_modules/aws-sdk/lib/signers/v2.js ***!
    \************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSignersV2Js(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;
    /**
     * @api private
     */

    AWS.Signers.V2 = inherit(AWS.Signers.RequestSigner, {
      addAuthorization: function addAuthorization(credentials, date) {
        if (!date) date = AWS.util.date.getDate();
        var r = this.request;
        r.params.Timestamp = AWS.util.date.iso8601(date);
        r.params.SignatureVersion = '2';
        r.params.SignatureMethod = 'HmacSHA256';
        r.params.AWSAccessKeyId = credentials.accessKeyId;

        if (credentials.sessionToken) {
          r.params.SecurityToken = credentials.sessionToken;
        }

        delete r.params.Signature; // delete old Signature for re-signing

        r.params.Signature = this.signature(credentials);
        r.body = AWS.util.queryParamsToString(r.params);
        r.headers['Content-Length'] = r.body.length;
      },
      signature: function signature(credentials) {
        return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');
      },
      stringToSign: function stringToSign() {
        var parts = [];
        parts.push(this.request.method);
        parts.push(this.request.endpoint.host.toLowerCase());
        parts.push(this.request.pathname());
        parts.push(AWS.util.queryParamsToString(this.request.params));
        return parts.join('\n');
      }
    });
    /**
     * @api private
     */

    module.exports = AWS.Signers.V2;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/signers/v3.js":
  /*!************************************************!*\
    !*** ./node_modules/aws-sdk/lib/signers/v3.js ***!
    \************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSignersV3Js(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;
    /**
     * @api private
     */

    AWS.Signers.V3 = inherit(AWS.Signers.RequestSigner, {
      addAuthorization: function addAuthorization(credentials, date) {
        var datetime = AWS.util.date.rfc822(date);
        this.request.headers['X-Amz-Date'] = datetime;

        if (credentials.sessionToken) {
          this.request.headers['x-amz-security-token'] = credentials.sessionToken;
        }

        this.request.headers['X-Amzn-Authorization'] = this.authorization(credentials, datetime);
      },
      authorization: function authorization(credentials) {
        return 'AWS3 ' + 'AWSAccessKeyId=' + credentials.accessKeyId + ',' + 'Algorithm=HmacSHA256,' + 'SignedHeaders=' + this.signedHeaders() + ',' + 'Signature=' + this.signature(credentials);
      },
      signedHeaders: function signedHeaders() {
        var headers = [];
        AWS.util.arrayEach(this.headersToSign(), function iterator(h) {
          headers.push(h.toLowerCase());
        });
        return headers.sort().join(';');
      },
      canonicalHeaders: function canonicalHeaders() {
        var headers = this.request.headers;
        var parts = [];
        AWS.util.arrayEach(this.headersToSign(), function iterator(h) {
          parts.push(h.toLowerCase().trim() + ':' + String(headers[h]).trim());
        });
        return parts.sort().join('\n') + '\n';
      },
      headersToSign: function headersToSign() {
        var headers = [];
        AWS.util.each(this.request.headers, function iterator(k) {
          if (k === 'Host' || k === 'Content-Encoding' || k.match(/^X-Amz/i)) {
            headers.push(k);
          }
        });
        return headers;
      },
      signature: function signature(credentials) {
        return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');
      },
      stringToSign: function stringToSign() {
        var parts = [];
        parts.push(this.request.method);
        parts.push('/');
        parts.push('');
        parts.push(this.canonicalHeaders());
        parts.push(this.request.body);
        return AWS.util.crypto.sha256(parts.join('\n'));
      }
    });
    /**
     * @api private
     */

    module.exports = AWS.Signers.V3;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/signers/v3https.js":
  /*!*****************************************************!*\
    !*** ./node_modules/aws-sdk/lib/signers/v3https.js ***!
    \*****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSignersV3httpsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var inherit = AWS.util.inherit;

    __webpack_require__(
    /*! ./v3 */
    "./node_modules/aws-sdk/lib/signers/v3.js");
    /**
     * @api private
     */


    AWS.Signers.V3Https = inherit(AWS.Signers.V3, {
      authorization: function authorization(credentials) {
        return 'AWS3-HTTPS ' + 'AWSAccessKeyId=' + credentials.accessKeyId + ',' + 'Algorithm=HmacSHA256,' + 'Signature=' + this.signature(credentials);
      },
      stringToSign: function stringToSign() {
        return this.request.headers['X-Amz-Date'];
      }
    });
    /**
     * @api private
     */

    module.exports = AWS.Signers.V3Https;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/signers/v4.js":
  /*!************************************************!*\
    !*** ./node_modules/aws-sdk/lib/signers/v4.js ***!
    \************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSignersV4Js(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");

    var v4Credentials = __webpack_require__(
    /*! ./v4_credentials */
    "./node_modules/aws-sdk/lib/signers/v4_credentials.js");

    var inherit = AWS.util.inherit;
    /**
     * @api private
     */

    var expiresHeader = 'presigned-expires';
    /**
     * @api private
     */

    AWS.Signers.V4 = inherit(AWS.Signers.RequestSigner, {
      constructor: function V4(request, serviceName, options) {
        AWS.Signers.RequestSigner.call(this, request);
        this.serviceName = serviceName;
        options = options || {};
        this.signatureCache = typeof options.signatureCache === 'boolean' ? options.signatureCache : true;
        this.operation = options.operation;
        this.signatureVersion = options.signatureVersion;
      },
      algorithm: 'AWS4-HMAC-SHA256',
      addAuthorization: function addAuthorization(credentials, date) {
        var datetime = AWS.util.date.iso8601(date).replace(/[:\-]|\.\d{3}/g, '');

        if (this.isPresigned()) {
          this.updateForPresigned(credentials, datetime);
        } else {
          this.addHeaders(credentials, datetime);
        }

        this.request.headers['Authorization'] = this.authorization(credentials, datetime);
      },
      addHeaders: function addHeaders(credentials, datetime) {
        this.request.headers['X-Amz-Date'] = datetime;

        if (credentials.sessionToken) {
          this.request.headers['x-amz-security-token'] = credentials.sessionToken;
        }
      },
      updateForPresigned: function updateForPresigned(credentials, datetime) {
        var credString = this.credentialString(datetime);
        var qs = {
          'X-Amz-Date': datetime,
          'X-Amz-Algorithm': this.algorithm,
          'X-Amz-Credential': credentials.accessKeyId + '/' + credString,
          'X-Amz-Expires': this.request.headers[expiresHeader],
          'X-Amz-SignedHeaders': this.signedHeaders()
        };

        if (credentials.sessionToken) {
          qs['X-Amz-Security-Token'] = credentials.sessionToken;
        }

        if (this.request.headers['Content-Type']) {
          qs['Content-Type'] = this.request.headers['Content-Type'];
        }

        if (this.request.headers['Content-MD5']) {
          qs['Content-MD5'] = this.request.headers['Content-MD5'];
        }

        if (this.request.headers['Cache-Control']) {
          qs['Cache-Control'] = this.request.headers['Cache-Control'];
        } // need to pull in any other X-Amz-* headers


        AWS.util.each.call(this, this.request.headers, function (key, value) {
          if (key === expiresHeader) return;

          if (this.isSignableHeader(key)) {
            var lowerKey = key.toLowerCase(); // Metadata should be normalized

            if (lowerKey.indexOf('x-amz-meta-') === 0) {
              qs[lowerKey] = value;
            } else if (lowerKey.indexOf('x-amz-') === 0) {
              qs[key] = value;
            }
          }
        });
        var sep = this.request.path.indexOf('?') >= 0 ? '&' : '?';
        this.request.path += sep + AWS.util.queryParamsToString(qs);
      },
      authorization: function authorization(credentials, datetime) {
        var parts = [];
        var credString = this.credentialString(datetime);
        parts.push(this.algorithm + ' Credential=' + credentials.accessKeyId + '/' + credString);
        parts.push('SignedHeaders=' + this.signedHeaders());
        parts.push('Signature=' + this.signature(credentials, datetime));
        return parts.join(', ');
      },
      signature: function signature(credentials, datetime) {
        var signingKey = v4Credentials.getSigningKey(credentials, datetime.substr(0, 8), this.request.region, this.serviceName, this.signatureCache);
        return AWS.util.crypto.hmac(signingKey, this.stringToSign(datetime), 'hex');
      },
      stringToSign: function stringToSign(datetime) {
        var parts = [];
        parts.push('AWS4-HMAC-SHA256');
        parts.push(datetime);
        parts.push(this.credentialString(datetime));
        parts.push(this.hexEncodedHash(this.canonicalString()));
        return parts.join('\n');
      },
      canonicalString: function canonicalString() {
        var parts = [],
            pathname = this.request.pathname();
        if (this.serviceName !== 's3' && this.signatureVersion !== 's3v4') pathname = AWS.util.uriEscapePath(pathname);
        parts.push(this.request.method);
        parts.push(pathname);
        parts.push(this.request.search());
        parts.push(this.canonicalHeaders() + '\n');
        parts.push(this.signedHeaders());
        parts.push(this.hexEncodedBodyHash());
        return parts.join('\n');
      },
      canonicalHeaders: function canonicalHeaders() {
        var headers = [];
        AWS.util.each.call(this, this.request.headers, function (key, item) {
          headers.push([key, item]);
        });
        headers.sort(function (a, b) {
          return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1;
        });
        var parts = [];
        AWS.util.arrayEach.call(this, headers, function (item) {
          var key = item[0].toLowerCase();

          if (this.isSignableHeader(key)) {
            var value = item[1];

            if (typeof value === 'undefined' || value === null || typeof value.toString !== 'function') {
              throw AWS.util.error(new Error('Header ' + key + ' contains invalid value'), {
                code: 'InvalidHeader'
              });
            }

            parts.push(key + ':' + this.canonicalHeaderValues(value.toString()));
          }
        });
        return parts.join('\n');
      },
      canonicalHeaderValues: function canonicalHeaderValues(values) {
        return values.replace(/\s+/g, ' ').replace(/^\s+|\s+$/g, '');
      },
      signedHeaders: function signedHeaders() {
        var keys = [];
        AWS.util.each.call(this, this.request.headers, function (key) {
          key = key.toLowerCase();
          if (this.isSignableHeader(key)) keys.push(key);
        });
        return keys.sort().join(';');
      },
      credentialString: function credentialString(datetime) {
        return v4Credentials.createScope(datetime.substr(0, 8), this.request.region, this.serviceName);
      },
      hexEncodedHash: function hash(string) {
        return AWS.util.crypto.sha256(string, 'hex');
      },
      hexEncodedBodyHash: function hexEncodedBodyHash() {
        var request = this.request;

        if (this.isPresigned() && this.serviceName === 's3' && !request.body) {
          return 'UNSIGNED-PAYLOAD';
        } else if (request.headers['X-Amz-Content-Sha256']) {
          return request.headers['X-Amz-Content-Sha256'];
        } else {
          return this.hexEncodedHash(this.request.body || '');
        }
      },
      unsignableHeaders: ['authorization', 'content-type', 'content-length', 'user-agent', expiresHeader, 'expect', 'x-amzn-trace-id'],
      isSignableHeader: function isSignableHeader(key) {
        if (key.toLowerCase().indexOf('x-amz-') === 0) return true;
        return this.unsignableHeaders.indexOf(key) < 0;
      },
      isPresigned: function isPresigned() {
        return this.request.headers[expiresHeader] ? true : false;
      }
    });
    /**
     * @api private
     */

    module.exports = AWS.Signers.V4;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/signers/v4_credentials.js":
  /*!************************************************************!*\
    !*** ./node_modules/aws-sdk/lib/signers/v4_credentials.js ***!
    \************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibSignersV4_credentialsJs(module, exports, __webpack_require__) {
    var AWS = __webpack_require__(
    /*! ../core */
    "./node_modules/aws-sdk/lib/core.js");
    /**
     * @api private
     */


    var cachedSecret = {};
    /**
     * @api private
     */

    var cacheQueue = [];
    /**
     * @api private
     */

    var maxCacheEntries = 50;
    /**
     * @api private
     */

    var v4Identifier = 'aws4_request';
    /**
     * @api private
     */

    module.exports = {
      /**
       * @api private
       *
       * @param date [String]
       * @param region [String]
       * @param serviceName [String]
       * @return [String]
       */
      createScope: function createScope(date, region, serviceName) {
        return [date.substr(0, 8), region, serviceName, v4Identifier].join('/');
      },

      /**
       * @api private
       *
       * @param credentials [Credentials]
       * @param date [String]
       * @param region [String]
       * @param service [String]
       * @param shouldCache [Boolean]
       * @return [String]
       */
      getSigningKey: function getSigningKey(credentials, date, region, service, shouldCache) {
        var credsIdentifier = AWS.util.crypto.hmac(credentials.secretAccessKey, credentials.accessKeyId, 'base64');
        var cacheKey = [credsIdentifier, date, region, service].join('_');
        shouldCache = shouldCache !== false;

        if (shouldCache && cacheKey in cachedSecret) {
          return cachedSecret[cacheKey];
        }

        var kDate = AWS.util.crypto.hmac('AWS4' + credentials.secretAccessKey, date, 'buffer');
        var kRegion = AWS.util.crypto.hmac(kDate, region, 'buffer');
        var kService = AWS.util.crypto.hmac(kRegion, service, 'buffer');
        var signingKey = AWS.util.crypto.hmac(kService, v4Identifier, 'buffer');

        if (shouldCache) {
          cachedSecret[cacheKey] = signingKey;
          cacheQueue.push(cacheKey);

          if (cacheQueue.length > maxCacheEntries) {
            // remove the oldest entry (not the least recently used)
            delete cachedSecret[cacheQueue.shift()];
          }
        }

        return signingKey;
      },

      /**
       * @api private
       *
       * Empties the derived signing key cache. Made available for testing purposes
       * only.
       */
      emptyCache: function emptyCache() {
        cachedSecret = {};
        cacheQueue = [];
      }
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/state_machine.js":
  /*!***************************************************!*\
    !*** ./node_modules/aws-sdk/lib/state_machine.js ***!
    \***************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibState_machineJs(module, exports) {
    function AcceptorStateMachine(states, state) {
      this.currentState = state || null;
      this.states = states || {};
    }

    AcceptorStateMachine.prototype.runTo = function runTo(finalState, done, bindObject, inputError) {
      if (typeof finalState === 'function') {
        inputError = bindObject;
        bindObject = done;
        done = finalState;
        finalState = null;
      }

      var self = this;
      var state = self.states[self.currentState];
      state.fn.call(bindObject || self, inputError, function (err) {
        if (err) {
          if (state.fail) self.currentState = state.fail;else return done ? done.call(bindObject, err) : null;
        } else {
          if (state.accept) self.currentState = state.accept;else return done ? done.call(bindObject) : null;
        }

        if (self.currentState === finalState) {
          return done ? done.call(bindObject, err) : null;
        }

        self.runTo(finalState, done, bindObject, err);
      });
    };

    AcceptorStateMachine.prototype.addState = function addState(name, acceptState, failState, fn) {
      if (typeof acceptState === 'function') {
        fn = acceptState;
        acceptState = null;
        failState = null;
      } else if (typeof failState === 'function') {
        fn = failState;
        failState = null;
      }

      if (!this.currentState) this.currentState = name;
      this.states[name] = {
        accept: acceptState,
        fail: failState,
        fn: fn
      };
      return this;
    };
    /**
     * @api private
     */


    module.exports = AcceptorStateMachine;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/util.js":
  /*!******************************************!*\
    !*** ./node_modules/aws-sdk/lib/util.js ***!
    \******************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibUtilJs(module, exports, __webpack_require__) {
    /* eslint guard-for-in:0 */
    var AWS;
    /**
     * A set of utility methods for use with the AWS SDK.
     *
     * @!attribute abort
     *   Return this value from an iterator function {each} or {arrayEach}
     *   to break out of the iteration.
     *   @example Breaking out of an iterator function
     *     AWS.util.each({a: 1, b: 2, c: 3}, function(key, value) {
     *       if (key == 'b') return AWS.util.abort;
     *     });
     *   @see each
     *   @see arrayEach
     * @api private
     */

    var util = {
      environment: 'nodejs',
      engine: function engine() {
        if (util.isBrowser() && typeof navigator !== 'undefined') {
          return navigator.userAgent;
        } else {
          var engine = process.platform + '/' + process.version;

          if (process.env.AWS_EXECUTION_ENV) {
            engine += ' exec-env/' + process.env.AWS_EXECUTION_ENV;
          }

          return engine;
        }
      },
      userAgent: function userAgent() {
        var name = util.environment;

        var agent = 'aws-sdk-' + name + '/' + __webpack_require__(
        /*! ./core */
        "./node_modules/aws-sdk/lib/core.js").VERSION;

        if (name === 'nodejs') agent += ' ' + util.engine();
        return agent;
      },
      uriEscape: function uriEscape(string) {
        var output = encodeURIComponent(string);
        output = output.replace(/[^A-Za-z0-9_.~\-%]+/g, escape); // AWS percent-encodes some extra non-standard characters in a URI

        output = output.replace(/[*]/g, function (ch) {
          return '%' + ch.charCodeAt(0).toString(16).toUpperCase();
        });
        return output;
      },
      uriEscapePath: function uriEscapePath(string) {
        var parts = [];
        util.arrayEach(string.split('/'), function (part) {
          parts.push(util.uriEscape(part));
        });
        return parts.join('/');
      },
      urlParse: function urlParse(url) {
        return util.url.parse(url);
      },
      urlFormat: function urlFormat(url) {
        return util.url.format(url);
      },
      queryStringParse: function queryStringParse(qs) {
        return util.querystring.parse(qs);
      },
      queryParamsToString: function queryParamsToString(params) {
        var items = [];
        var escape = util.uriEscape;
        var sortedKeys = Object.keys(params).sort();
        util.arrayEach(sortedKeys, function (name) {
          var value = params[name];
          var ename = escape(name);
          var result = ename + '=';

          if (Array.isArray(value)) {
            var vals = [];
            util.arrayEach(value, function (item) {
              vals.push(escape(item));
            });
            result = ename + '=' + vals.sort().join('&' + ename + '=');
          } else if (value !== undefined && value !== null) {
            result = ename + '=' + escape(value);
          }

          items.push(result);
        });
        return items.join('&');
      },
      readFileSync: function readFileSync(path) {
        if (util.isBrowser()) return null;
        return __webpack_require__(
        /*! fs */
        4).readFileSync(path, 'utf-8');
      },
      base64: {
        encode: function encode64(string) {
          if (typeof string === 'number') {
            throw util.error(new Error('Cannot base64 encode number ' + string));
          }

          if (string === null || typeof string === 'undefined') {
            return string;
          }

          var buf = util.buffer.toBuffer(string);
          return buf.toString('base64');
        },
        decode: function decode64(string) {
          if (typeof string === 'number') {
            throw util.error(new Error('Cannot base64 decode number ' + string));
          }

          if (string === null || typeof string === 'undefined') {
            return string;
          }

          return util.buffer.toBuffer(string, 'base64');
        }
      },
      buffer: {
        /**
         * Buffer constructor for Node buffer and buffer pollyfill
         */
        toBuffer: function toBuffer(data, encoding) {
          return typeof util.Buffer.from === 'function' && util.Buffer.from !== Uint8Array.from ? util.Buffer.from(data, encoding) : new util.Buffer(data, encoding);
        },
        alloc: function alloc(size, fill, encoding) {
          if (typeof size !== 'number') {
            throw new Error('size passed to alloc must be a number.');
          }

          if (typeof util.Buffer.alloc === 'function') {
            return util.Buffer.alloc(size, fill, encoding);
          } else {
            var buf = new util.Buffer(size);

            if (fill !== undefined && typeof buf.fill === 'function') {
              buf.fill(fill, undefined, undefined, encoding);
            }

            return buf;
          }
        },
        toStream: function toStream(buffer) {
          if (!util.Buffer.isBuffer(buffer)) buffer = util.buffer.toBuffer(buffer);
          var readable = new util.stream.Readable();
          var pos = 0;

          readable._read = function (size) {
            if (pos >= buffer.length) return readable.push(null);
            var end = pos + size;
            if (end > buffer.length) end = buffer.length;
            readable.push(buffer.slice(pos, end));
            pos = end;
          };

          return readable;
        },

        /**
         * Concatenates a list of Buffer objects.
         */
        concat: function concat(buffers) {
          var length = 0,
              offset = 0,
              buffer = null,
              i;

          for (i = 0; i < buffers.length; i++) {
            length += buffers[i].length;
          }

          buffer = util.buffer.alloc(length);

          for (i = 0; i < buffers.length; i++) {
            buffers[i].copy(buffer, offset);
            offset += buffers[i].length;
          }

          return buffer;
        }
      },
      string: {
        byteLength: function byteLength(string) {
          if (string === null || string === undefined) return 0;
          if (typeof string === 'string') string = util.buffer.toBuffer(string);

          if (typeof string.byteLength === 'number') {
            return string.byteLength;
          } else if (typeof string.length === 'number') {
            return string.length;
          } else if (typeof string.size === 'number') {
            return string.size;
          } else if (typeof string.path === 'string') {
            return __webpack_require__(
            /*! fs */
            4).lstatSync(string.path).size;
          } else {
            throw util.error(new Error('Cannot determine length of ' + string), {
              object: string
            });
          }
        },
        upperFirst: function upperFirst(string) {
          return string[0].toUpperCase() + string.substr(1);
        },
        lowerFirst: function lowerFirst(string) {
          return string[0].toLowerCase() + string.substr(1);
        }
      },
      ini: {
        parse: function string(ini) {
          var currentSection,
              map = {};
          util.arrayEach(ini.split(/\r?\n/), function (line) {
            line = line.split(/(^|\s)[;#]/)[0]; // remove comments

            var section = line.match(/^\s*\[([^\[\]]+)\]\s*$/);

            if (section) {
              currentSection = section[1];
            } else if (currentSection) {
              var item = line.match(/^\s*(.+?)\s*=\s*(.+?)\s*$/);

              if (item) {
                map[currentSection] = map[currentSection] || {};
                map[currentSection][item[1]] = item[2];
              }
            }
          });
          return map;
        }
      },
      fn: {
        noop: function noop() {},
        callback: function callback(err) {
          if (err) throw err;
        },

        /**
         * Turn a synchronous function into as "async" function by making it call
         * a callback. The underlying function is called with all but the last argument,
         * which is treated as the callback. The callback is passed passed a first argument
         * of null on success to mimick standard node callbacks.
         */
        makeAsync: function makeAsync(fn, expectedArgs) {
          if (expectedArgs && expectedArgs <= fn.length) {
            return fn;
          }

          return function () {
            var args = Array.prototype.slice.call(arguments, 0);
            var callback = args.pop();
            var result = fn.apply(null, args);
            callback(result);
          };
        }
      },

      /**
       * Date and time utility functions.
       */
      date: {
        /**
         * @return [Date] the current JavaScript date object. Since all
         *   AWS services rely on this date object, you can override
         *   this function to provide a special time value to AWS service
         *   requests.
         */
        getDate: function getDate() {
          if (!AWS) AWS = __webpack_require__(
          /*! ./core */
          "./node_modules/aws-sdk/lib/core.js");

          if (AWS.config.systemClockOffset) {
            // use offset when non-zero
            return new Date(new Date().getTime() + AWS.config.systemClockOffset);
          } else {
            return new Date();
          }
        },

        /**
         * @return [String] the date in ISO-8601 format
         */
        iso8601: function iso8601(date) {
          if (date === undefined) {
            date = util.date.getDate();
          }

          return date.toISOString().replace(/\.\d{3}Z$/, 'Z');
        },

        /**
         * @return [String] the date in RFC 822 format
         */
        rfc822: function rfc822(date) {
          if (date === undefined) {
            date = util.date.getDate();
          }

          return date.toUTCString();
        },

        /**
         * @return [Integer] the UNIX timestamp value for the current time
         */
        unixTimestamp: function unixTimestamp(date) {
          if (date === undefined) {
            date = util.date.getDate();
          }

          return date.getTime() / 1000;
        },

        /**
         * @param [String,number,Date] date
         * @return [Date]
         */
        from: function format(date) {
          if (typeof date === 'number') {
            return new Date(date * 1000); // unix timestamp
          } else {
            return new Date(date);
          }
        },

        /**
         * Given a Date or date-like value, this function formats the
         * date into a string of the requested value.
         * @param [String,number,Date] date
         * @param [String] formatter Valid formats are:
         #   * 'iso8601'
         #   * 'rfc822'
         #   * 'unixTimestamp'
         * @return [String]
         */
        format: function format(date, formatter) {
          if (!formatter) formatter = 'iso8601';
          return util.date[formatter](util.date.from(date));
        },
        parseTimestamp: function parseTimestamp(value) {
          if (typeof value === 'number') {
            // unix timestamp (number)
            return new Date(value * 1000);
          } else if (value.match(/^\d+$/)) {
            // unix timestamp
            return new Date(value * 1000);
          } else if (value.match(/^\d{4}/)) {
            // iso8601
            return new Date(value);
          } else if (value.match(/^\w{3},/)) {
            // rfc822
            return new Date(value);
          } else {
            throw util.error(new Error('unhandled timestamp format: ' + value), {
              code: 'TimestampParserError'
            });
          }
        }
      },
      crypto: {
        crc32Table: [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D],
        crc32: function crc32(data) {
          var tbl = util.crypto.crc32Table;
          var crc = 0 ^ -1;

          if (typeof data === 'string') {
            data = util.buffer.toBuffer(data);
          }

          for (var i = 0; i < data.length; i++) {
            var code = data.readUInt8(i);
            crc = crc >>> 8 ^ tbl[(crc ^ code) & 0xFF];
          }

          return (crc ^ -1) >>> 0;
        },
        hmac: function hmac(key, string, digest, fn) {
          if (!digest) digest = 'binary';

          if (digest === 'buffer') {
            digest = undefined;
          }

          if (!fn) fn = 'sha256';
          if (typeof string === 'string') string = util.buffer.toBuffer(string);
          return util.crypto.lib.createHmac(fn, key).update(string).digest(digest);
        },
        md5: function md5(data, digest, callback) {
          return util.crypto.hash('md5', data, digest, callback);
        },
        sha256: function sha256(data, digest, callback) {
          return util.crypto.hash('sha256', data, digest, callback);
        },
        hash: function hash(algorithm, data, digest, callback) {
          var hash = util.crypto.createHash(algorithm);

          if (!digest) {
            digest = 'binary';
          }

          if (digest === 'buffer') {
            digest = undefined;
          }

          if (typeof data === 'string') data = util.buffer.toBuffer(data);
          var sliceFn = util.arraySliceFn(data);
          var isBuffer = util.Buffer.isBuffer(data); //Identifying objects with an ArrayBuffer as buffers

          if (util.isBrowser() && typeof ArrayBuffer !== 'undefined' && data && data.buffer instanceof ArrayBuffer) isBuffer = true;

          if (callback && typeof data === 'object' && typeof data.on === 'function' && !isBuffer) {
            data.on('data', function (chunk) {
              hash.update(chunk);
            });
            data.on('error', function (err) {
              callback(err);
            });
            data.on('end', function () {
              callback(null, hash.digest(digest));
            });
          } else if (callback && sliceFn && !isBuffer && typeof FileReader !== 'undefined') {
            // this might be a File/Blob
            var index = 0,
                size = 1024 * 512;
            var reader = new FileReader();

            reader.onerror = function () {
              callback(new Error('Failed to read data.'));
            };

            reader.onload = function () {
              var buf = new util.Buffer(new Uint8Array(reader.result));
              hash.update(buf);
              index += buf.length;

              reader._continueReading();
            };

            reader._continueReading = function () {
              if (index >= data.size) {
                callback(null, hash.digest(digest));
                return;
              }

              var back = index + size;
              if (back > data.size) back = data.size;
              reader.readAsArrayBuffer(sliceFn.call(data, index, back));
            };

            reader._continueReading();
          } else {
            if (util.isBrowser() && typeof data === 'object' && !isBuffer) {
              data = new util.Buffer(new Uint8Array(data));
            }

            var out = hash.update(data).digest(digest);
            if (callback) callback(null, out);
            return out;
          }
        },
        toHex: function toHex(data) {
          var out = [];

          for (var i = 0; i < data.length; i++) {
            out.push(('0' + data.charCodeAt(i).toString(16)).substr(-2, 2));
          }

          return out.join('');
        },
        createHash: function createHash(algorithm) {
          return util.crypto.lib.createHash(algorithm);
        }
      },

      /** @!ignore */

      /* Abort constant */
      abort: {},
      each: function each(object, iterFunction) {
        for (var key in object) {
          if (Object.prototype.hasOwnProperty.call(object, key)) {
            var ret = iterFunction.call(this, key, object[key]);
            if (ret === util.abort) break;
          }
        }
      },
      arrayEach: function arrayEach(array, iterFunction) {
        for (var idx in array) {
          if (Object.prototype.hasOwnProperty.call(array, idx)) {
            var ret = iterFunction.call(this, array[idx], parseInt(idx, 10));
            if (ret === util.abort) break;
          }
        }
      },
      update: function update(obj1, obj2) {
        util.each(obj2, function iterator(key, item) {
          obj1[key] = item;
        });
        return obj1;
      },
      merge: function merge(obj1, obj2) {
        return util.update(util.copy(obj1), obj2);
      },
      copy: function copy(object) {
        if (object === null || object === undefined) return object;
        var dupe = {}; // jshint forin:false

        for (var key in object) {
          dupe[key] = object[key];
        }

        return dupe;
      },
      isEmpty: function isEmpty(obj) {
        for (var prop in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, prop)) {
            return false;
          }
        }

        return true;
      },
      arraySliceFn: function arraySliceFn(obj) {
        var fn = obj.slice || obj.webkitSlice || obj.mozSlice;
        return typeof fn === 'function' ? fn : null;
      },
      isType: function isType(obj, type) {
        // handle cross-"frame" objects
        if (typeof type === 'function') type = util.typeName(type);
        return Object.prototype.toString.call(obj) === '[object ' + type + ']';
      },
      typeName: function typeName(type) {
        if (Object.prototype.hasOwnProperty.call(type, 'name')) return type.name;
        var str = type.toString();
        var match = str.match(/^\s*function (.+)\(/);
        return match ? match[1] : str;
      },
      error: function error(err, options) {
        var originalError = null;

        if (typeof err.message === 'string' && err.message !== '') {
          if (typeof options === 'string' || options && options.message) {
            originalError = util.copy(err);
            originalError.message = err.message;
          }
        }

        err.message = err.message || null;

        if (typeof options === 'string') {
          err.message = options;
        } else if (typeof options === 'object' && options !== null) {
          util.update(err, options);
          if (options.message) err.message = options.message;
          if (options.code || options.name) err.code = options.code || options.name;
          if (options.stack) err.stack = options.stack;
        }

        if (typeof Object.defineProperty === 'function') {
          Object.defineProperty(err, 'name', {
            writable: true,
            enumerable: false
          });
          Object.defineProperty(err, 'message', {
            enumerable: true
          });
        }

        err.name = String(options && options.name || err.name || err.code || 'Error');
        err.time = new Date();
        if (originalError) err.originalError = originalError;
        return err;
      },

      /**
       * @api private
       */
      inherit: function inherit(klass, features) {
        var newObject = null;

        if (features === undefined) {
          features = klass;
          klass = Object;
          newObject = {};
        } else {
          var ctor = function ConstructorWrapper() {};

          ctor.prototype = klass.prototype;
          newObject = new ctor();
        } // constructor not supplied, create pass-through ctor


        if (features.constructor === Object) {
          features.constructor = function () {
            if (klass !== Object) {
              return klass.apply(this, arguments);
            }
          };
        }

        features.constructor.prototype = newObject;
        util.update(features.constructor.prototype, features);
        features.constructor.__super__ = klass;
        return features.constructor;
      },

      /**
       * @api private
       */
      mixin: function mixin() {
        var klass = arguments[0];

        for (var i = 1; i < arguments.length; i++) {
          // jshint forin:false
          for (var prop in arguments[i].prototype) {
            var fn = arguments[i].prototype[prop];

            if (prop !== 'constructor') {
              klass.prototype[prop] = fn;
            }
          }
        }

        return klass;
      },

      /**
       * @api private
       */
      hideProperties: function hideProperties(obj, props) {
        if (typeof Object.defineProperty !== 'function') return;
        util.arrayEach(props, function (key) {
          Object.defineProperty(obj, key, {
            enumerable: false,
            writable: true,
            configurable: true
          });
        });
      },

      /**
       * @api private
       */
      property: function property(obj, name, value, enumerable, isValue) {
        var opts = {
          configurable: true,
          enumerable: enumerable !== undefined ? enumerable : true
        };

        if (typeof value === 'function' && !isValue) {
          opts.get = value;
        } else {
          opts.value = value;
          opts.writable = true;
        }

        Object.defineProperty(obj, name, opts);
      },

      /**
       * @api private
       */
      memoizedProperty: function memoizedProperty(obj, name, get, enumerable) {
        var cachedValue = null; // build enumerable attribute for each value with lazy accessor.

        util.property(obj, name, function () {
          if (cachedValue === null) {
            cachedValue = get();
          }

          return cachedValue;
        }, enumerable);
      },

      /**
       * TODO Remove in major version revision
       * This backfill populates response data without the
       * top-level payload name.
       *
       * @api private
       */
      hoistPayloadMember: function hoistPayloadMember(resp) {
        var req = resp.request;
        var operationName = req.operation;
        var operation = req.service.api.operations[operationName];
        var output = operation.output;

        if (output.payload && !operation.hasEventOutput) {
          var payloadMember = output.members[output.payload];
          var responsePayload = resp.data[output.payload];

          if (payloadMember.type === 'structure') {
            util.each(responsePayload, function (key, value) {
              util.property(resp.data, key, value, false);
            });
          }
        }
      },

      /**
       * Compute SHA-256 checksums of streams
       *
       * @api private
       */
      computeSha256: function computeSha256(body, done) {
        if (util.isNode()) {
          var Stream = util.stream.Stream;

          var fs = __webpack_require__(
          /*! fs */
          4);

          if (typeof Stream === 'function' && body instanceof Stream) {
            if (typeof body.path === 'string') {
              // assume file object
              var settings = {};

              if (typeof body.start === 'number') {
                settings.start = body.start;
              }

              if (typeof body.end === 'number') {
                settings.end = body.end;
              }

              body = fs.createReadStream(body.path, settings);
            } else {
              // TODO support other stream types
              return done(new Error('Non-file stream objects are ' + 'not supported with SigV4'));
            }
          }
        }

        util.crypto.sha256(body, 'hex', function (err, sha) {
          if (err) done(err);else done(null, sha);
        });
      },

      /**
       * @api private
       */
      isClockSkewed: function isClockSkewed(serverTime) {
        if (serverTime) {
          util.property(AWS.config, 'isClockSkewed', Math.abs(new Date().getTime() - serverTime) >= 300000, false);
          return AWS.config.isClockSkewed;
        }
      },
      applyClockOffset: function applyClockOffset(serverTime) {
        if (serverTime) AWS.config.systemClockOffset = serverTime - new Date().getTime();
      },

      /**
       * @api private
       */
      extractRequestId: function extractRequestId(resp) {
        var requestId = resp.httpResponse.headers['x-amz-request-id'] || resp.httpResponse.headers['x-amzn-requestid'];

        if (!requestId && resp.data && resp.data.ResponseMetadata) {
          requestId = resp.data.ResponseMetadata.RequestId;
        }

        if (requestId) {
          resp.requestId = requestId;
        }

        if (resp.error) {
          resp.error.requestId = requestId;
        }
      },

      /**
       * @api private
       */
      addPromises: function addPromises(constructors, PromiseDependency) {
        var deletePromises = false;

        if (PromiseDependency === undefined && AWS && AWS.config) {
          PromiseDependency = AWS.config.getPromisesDependency();
        }

        if (PromiseDependency === undefined && typeof Promise !== 'undefined') {
          PromiseDependency = Promise;
        }

        if (typeof PromiseDependency !== 'function') deletePromises = true;
        if (!Array.isArray(constructors)) constructors = [constructors];

        for (var ind = 0; ind < constructors.length; ind++) {
          var constructor = constructors[ind];

          if (deletePromises) {
            if (constructor.deletePromisesFromClass) {
              constructor.deletePromisesFromClass();
            }
          } else if (constructor.addPromisesToClass) {
            constructor.addPromisesToClass(PromiseDependency);
          }
        }
      },

      /**
       * @api private
       * Return a function that will return a promise whose fate is decided by the
       * callback behavior of the given method with `methodName`. The method to be
       * promisified should conform to node.js convention of accepting a callback as
       * last argument and calling that callback with error as the first argument
       * and success value on the second argument.
       */
      promisifyMethod: function promisifyMethod(methodName, PromiseDependency) {
        return function promise() {
          var self = this;
          var args = Array.prototype.slice.call(arguments);
          return new PromiseDependency(function (resolve, reject) {
            args.push(function (err, data) {
              if (err) {
                reject(err);
              } else {
                resolve(data);
              }
            });
            self[methodName].apply(self, args);
          });
        };
      },

      /**
       * @api private
       */
      isDualstackAvailable: function isDualstackAvailable(service) {
        if (!service) return false;

        var metadata = __webpack_require__(
        /*! ../apis/metadata.json */
        "./node_modules/aws-sdk/apis/metadata.json");

        if (typeof service !== 'string') service = service.serviceIdentifier;
        if (typeof service !== 'string' || !metadata.hasOwnProperty(service)) return false;
        return !!metadata[service].dualstackAvailable;
      },

      /**
       * @api private
       */
      calculateRetryDelay: function calculateRetryDelay(retryCount, retryDelayOptions, err) {
        if (!retryDelayOptions) retryDelayOptions = {};
        var customBackoff = retryDelayOptions.customBackoff || null;

        if (typeof customBackoff === 'function') {
          return customBackoff(retryCount, err);
        }

        var base = typeof retryDelayOptions.base === 'number' ? retryDelayOptions.base : 100;
        var delay = Math.random() * (Math.pow(2, retryCount) * base);
        return delay;
      },

      /**
       * @api private
       */
      handleRequestWithRetries: function handleRequestWithRetries(httpRequest, options, cb) {
        if (!options) options = {};
        var http = AWS.HttpClient.getInstance();
        var httpOptions = options.httpOptions || {};
        var retryCount = 0;

        var errCallback = function errCallback(err) {
          var maxRetries = options.maxRetries || 0;
          if (err && err.code === 'TimeoutError') err.retryable = true;
          var delay = util.calculateRetryDelay(retryCount, options.retryDelayOptions, err);

          if (err && err.retryable && retryCount < maxRetries && delay >= 0) {
            retryCount++;
            setTimeout(sendRequest, delay + (err.retryAfter || 0));
          } else {
            cb(err);
          }
        };

        var sendRequest = function sendRequest() {
          var data = '';
          http.handleRequest(httpRequest, httpOptions, function (httpResponse) {
            httpResponse.on('data', function (chunk) {
              data += chunk.toString();
            });
            httpResponse.on('end', function () {
              var statusCode = httpResponse.statusCode;

              if (statusCode < 300) {
                cb(null, data);
              } else {
                var retryAfter = parseInt(httpResponse.headers['retry-after'], 10) * 1000 || 0;
                var err = util.error(new Error(), {
                  statusCode: statusCode,
                  retryable: statusCode >= 500 || statusCode === 429
                });
                if (retryAfter && err.retryable) err.retryAfter = retryAfter;
                errCallback(err);
              }
            });
          }, errCallback);
        };

        AWS.util.defer(sendRequest);
      },

      /**
       * @api private
       */
      uuid: {
        v4: function uuidV4() {
          return __webpack_require__(
          /*! uuid */
          "./node_modules/aws-sdk/node_modules/uuid/index.js").v4();
        }
      },

      /**
       * @api private
       */
      convertPayloadToString: function convertPayloadToString(resp) {
        var req = resp.request;
        var operation = req.operation;
        var rules = req.service.api.operations[operation].output || {};

        if (rules.payload && resp.data[rules.payload]) {
          resp.data[rules.payload] = resp.data[rules.payload].toString();
        }
      },

      /**
       * @api private
       */
      defer: function defer(callback) {
        if (typeof process === 'object' && typeof process.nextTick === 'function') {
          process.nextTick(callback);
        } else if (typeof setImmediate === 'function') {
          setImmediate(callback);
        } else {
          setTimeout(callback, 0);
        }
      },

      /**
       * @api private
       */
      getRequestPayloadShape: function getRequestPayloadShape(req) {
        var operations = req.service.api.operations;
        if (!operations) return undefined;
        var operation = (operations || {})[req.operation];
        if (!operation || !operation.input || !operation.input.payload) return undefined;
        return operation.input.members[operation.input.payload];
      },
      getProfilesFromSharedConfig: function getProfilesFromSharedConfig(iniLoader, filename) {
        var profiles = {};
        var profilesFromConfig = {};

        if (process.env[util.configOptInEnv]) {
          var profilesFromConfig = iniLoader.loadFrom({
            isConfig: true,
            filename: process.env[util.sharedConfigFileEnv]
          });
        }

        var profilesFromCreds = iniLoader.loadFrom({
          filename: filename || process.env[util.configOptInEnv] && process.env[util.sharedCredentialsFileEnv]
        });

        for (var i = 0, profileNames = Object.keys(profilesFromConfig); i < profileNames.length; i++) {
          profiles[profileNames[i]] = profilesFromConfig[profileNames[i]];
        }

        for (var i = 0, profileNames = Object.keys(profilesFromCreds); i < profileNames.length; i++) {
          profiles[profileNames[i]] = profilesFromCreds[profileNames[i]];
        }

        return profiles;
      },

      /**
       * @api private
       */
      ARN: {
        validate: function validateARN(str) {
          return str && str.indexOf('arn:') === 0 && str.split(':').length >= 6;
        },
        parse: function parseARN(arn) {
          var matched = arn.split(':');
          return {
            partition: matched[1],
            service: matched[2],
            region: matched[3],
            accountId: matched[4],
            resource: matched.slice(5).join(':')
          };
        },
        build: function buildARN(arnObject) {
          if (arnObject.service === undefined || arnObject.region === undefined || arnObject.accountId === undefined || arnObject.resource === undefined) throw util.error(new Error('Input ARN object is invalid'));
          return 'arn:' + (arnObject.partition || 'aws') + ':' + arnObject.service + ':' + arnObject.region + ':' + arnObject.accountId + ':' + arnObject.resource;
        }
      },

      /**
       * @api private
       */
      defaultProfile: 'default',

      /**
       * @api private
       */
      configOptInEnv: 'AWS_SDK_LOAD_CONFIG',

      /**
       * @api private
       */
      sharedCredentialsFileEnv: 'AWS_SHARED_CREDENTIALS_FILE',

      /**
       * @api private
       */
      sharedConfigFileEnv: 'AWS_CONFIG_FILE',

      /**
       * @api private
       */
      imdsDisabledEnv: 'AWS_EC2_METADATA_DISABLED'
    };
    /**
     * @api private
     */

    module.exports = util;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/xml/browser_parser.js":
  /*!********************************************************!*\
    !*** ./node_modules/aws-sdk/lib/xml/browser_parser.js ***!
    \********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibXmlBrowser_parserJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var Shape = __webpack_require__(
    /*! ../model/shape */
    "./node_modules/aws-sdk/lib/model/shape.js");

    function DomXmlParser() {}

    DomXmlParser.prototype.parse = function (xml, shape) {
      if (xml.replace(/^\s+/, '') === '') return {};
      var result, error;

      try {
        if (window.DOMParser) {
          try {
            var parser = new DOMParser();
            result = parser.parseFromString(xml, 'text/xml');
          } catch (syntaxError) {
            throw util.error(new Error('Parse error in document'), {
              originalError: syntaxError,
              code: 'XMLParserError',
              retryable: true
            });
          }

          if (result.documentElement === null) {
            throw util.error(new Error('Cannot parse empty document.'), {
              code: 'XMLParserError',
              retryable: true
            });
          }

          var isError = result.getElementsByTagName('parsererror')[0];

          if (isError && (isError.parentNode === result || isError.parentNode.nodeName === 'body' || isError.parentNode.parentNode === result || isError.parentNode.parentNode.nodeName === 'body')) {
            var errorElement = isError.getElementsByTagName('div')[0] || isError;
            throw util.error(new Error(errorElement.textContent || 'Parser error in document'), {
              code: 'XMLParserError',
              retryable: true
            });
          }
        } else if (window.ActiveXObject) {
          result = new window.ActiveXObject('Microsoft.XMLDOM');
          result.async = false;

          if (!result.loadXML(xml)) {
            throw util.error(new Error('Parse error in document'), {
              code: 'XMLParserError',
              retryable: true
            });
          }
        } else {
          throw new Error('Cannot load XML parser');
        }
      } catch (e) {
        error = e;
      }

      if (result && result.documentElement && !error) {
        var data = parseXml(result.documentElement, shape);
        var metadata = getElementByTagName(result.documentElement, 'ResponseMetadata');

        if (metadata) {
          data.ResponseMetadata = parseXml(metadata, {});
        }

        return data;
      } else if (error) {
        throw util.error(error || new Error(), {
          code: 'XMLParserError',
          retryable: true
        });
      } else {
        // empty xml document
        return {};
      }
    };

    function getElementByTagName(xml, tag) {
      var elements = xml.getElementsByTagName(tag);

      for (var i = 0, iLen = elements.length; i < iLen; i++) {
        if (elements[i].parentNode === xml) {
          return elements[i];
        }
      }
    }

    function parseXml(xml, shape) {
      if (!shape) shape = {};

      switch (shape.type) {
        case 'structure':
          return parseStructure(xml, shape);

        case 'map':
          return parseMap(xml, shape);

        case 'list':
          return parseList(xml, shape);

        case undefined:
        case null:
          return parseUnknown(xml);

        default:
          return parseScalar(xml, shape);
      }
    }

    function parseStructure(xml, shape) {
      var data = {};
      if (xml === null) return data;
      util.each(shape.members, function (memberName, memberShape) {
        if (memberShape.isXmlAttribute) {
          if (Object.prototype.hasOwnProperty.call(xml.attributes, memberShape.name)) {
            var value = xml.attributes[memberShape.name].value;
            data[memberName] = parseXml({
              textContent: value
            }, memberShape);
          }
        } else {
          var xmlChild = memberShape.flattened ? xml : getElementByTagName(xml, memberShape.name);

          if (xmlChild) {
            data[memberName] = parseXml(xmlChild, memberShape);
          } else if (!memberShape.flattened && memberShape.type === 'list' && !shape.api.xmlNoDefaultLists) {
            data[memberName] = memberShape.defaultValue;
          }
        }
      });
      return data;
    }

    function parseMap(xml, shape) {
      var data = {};
      var xmlKey = shape.key.name || 'key';
      var xmlValue = shape.value.name || 'value';
      var tagName = shape.flattened ? shape.name : 'entry';
      var child = xml.firstElementChild;

      while (child) {
        if (child.nodeName === tagName) {
          var key = getElementByTagName(child, xmlKey).textContent;
          var value = getElementByTagName(child, xmlValue);
          data[key] = parseXml(value, shape.value);
        }

        child = child.nextElementSibling;
      }

      return data;
    }

    function parseList(xml, shape) {
      var data = [];
      var tagName = shape.flattened ? shape.name : shape.member.name || 'member';
      var child = xml.firstElementChild;

      while (child) {
        if (child.nodeName === tagName) {
          data.push(parseXml(child, shape.member));
        }

        child = child.nextElementSibling;
      }

      return data;
    }

    function parseScalar(xml, shape) {
      if (xml.getAttribute) {
        var encoding = xml.getAttribute('encoding');

        if (encoding === 'base64') {
          shape = new Shape.create({
            type: encoding
          });
        }
      }

      var text = xml.textContent;
      if (text === '') text = null;

      if (typeof shape.toType === 'function') {
        return shape.toType(text);
      } else {
        return text;
      }
    }

    function parseUnknown(xml) {
      if (xml === undefined || xml === null) return ''; // empty object

      if (!xml.firstElementChild) {
        if (xml.parentNode.parentNode === null) return {};
        if (xml.childNodes.length === 0) return '';else return xml.textContent;
      } // object, parse as structure


      var shape = {
        type: 'structure',
        members: {}
      };
      var child = xml.firstElementChild;

      while (child) {
        var tag = child.nodeName;

        if (Object.prototype.hasOwnProperty.call(shape.members, tag)) {
          // multiple tags of the same name makes it a list
          shape.members[tag].type = 'list';
        } else {
          shape.members[tag] = {
            name: tag
          };
        }

        child = child.nextElementSibling;
      }

      return parseStructure(xml, shape);
    }
    /**
     * @api private
     */


    module.exports = DomXmlParser;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/xml/builder.js":
  /*!*************************************************!*\
    !*** ./node_modules/aws-sdk/lib/xml/builder.js ***!
    \*************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibXmlBuilderJs(module, exports, __webpack_require__) {
    var util = __webpack_require__(
    /*! ../util */
    "./node_modules/aws-sdk/lib/util.js");

    var XmlNode = __webpack_require__(
    /*! ./xml-node */
    "./node_modules/aws-sdk/lib/xml/xml-node.js").XmlNode;

    var XmlText = __webpack_require__(
    /*! ./xml-text */
    "./node_modules/aws-sdk/lib/xml/xml-text.js").XmlText;

    function XmlBuilder() {}

    XmlBuilder.prototype.toXML = function (params, shape, rootElement, noEmpty) {
      var xml = new XmlNode(rootElement);
      applyNamespaces(xml, shape, true);
      serialize(xml, params, shape);
      return xml.children.length > 0 || noEmpty ? xml.toString() : '';
    };

    function serialize(xml, value, shape) {
      switch (shape.type) {
        case 'structure':
          return serializeStructure(xml, value, shape);

        case 'map':
          return serializeMap(xml, value, shape);

        case 'list':
          return serializeList(xml, value, shape);

        default:
          return serializeScalar(xml, value, shape);
      }
    }

    function serializeStructure(xml, params, shape) {
      util.arrayEach(shape.memberNames, function (memberName) {
        var memberShape = shape.members[memberName];
        if (memberShape.location !== 'body') return;
        var value = params[memberName];
        var name = memberShape.name;

        if (value !== undefined && value !== null) {
          if (memberShape.isXmlAttribute) {
            xml.addAttribute(name, value);
          } else if (memberShape.flattened) {
            serialize(xml, value, memberShape);
          } else {
            var element = new XmlNode(name);
            xml.addChildNode(element);
            applyNamespaces(element, memberShape);
            serialize(element, value, memberShape);
          }
        }
      });
    }

    function serializeMap(xml, map, shape) {
      var xmlKey = shape.key.name || 'key';
      var xmlValue = shape.value.name || 'value';
      util.each(map, function (key, value) {
        var entry = new XmlNode(shape.flattened ? shape.name : 'entry');
        xml.addChildNode(entry);
        var entryKey = new XmlNode(xmlKey);
        var entryValue = new XmlNode(xmlValue);
        entry.addChildNode(entryKey);
        entry.addChildNode(entryValue);
        serialize(entryKey, key, shape.key);
        serialize(entryValue, value, shape.value);
      });
    }

    function serializeList(xml, list, shape) {
      if (shape.flattened) {
        util.arrayEach(list, function (value) {
          var name = shape.member.name || shape.name;
          var element = new XmlNode(name);
          xml.addChildNode(element);
          serialize(element, value, shape.member);
        });
      } else {
        util.arrayEach(list, function (value) {
          var name = shape.member.name || 'member';
          var element = new XmlNode(name);
          xml.addChildNode(element);
          serialize(element, value, shape.member);
        });
      }
    }

    function serializeScalar(xml, value, shape) {
      xml.addChildNode(new XmlText(shape.toWireFormat(value)));
    }

    function applyNamespaces(xml, shape, isRoot) {
      var uri,
          prefix = 'xmlns';

      if (shape.xmlNamespaceUri) {
        uri = shape.xmlNamespaceUri;
        if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;
      } else if (isRoot && shape.api.xmlNamespaceUri) {
        uri = shape.api.xmlNamespaceUri;
      }

      if (uri) xml.addAttribute(prefix, uri);
    }
    /**
     * @api private
     */


    module.exports = XmlBuilder;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/xml/escape-attribute.js":
  /*!**********************************************************!*\
    !*** ./node_modules/aws-sdk/lib/xml/escape-attribute.js ***!
    \**********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibXmlEscapeAttributeJs(module, exports) {
    /**
     * Escapes characters that can not be in an XML attribute.
     */
    function escapeAttribute(value) {
      return value.replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
    }
    /**
     * @api private
     */


    module.exports = {
      escapeAttribute: escapeAttribute
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/xml/escape-element.js":
  /*!********************************************************!*\
    !*** ./node_modules/aws-sdk/lib/xml/escape-element.js ***!
    \********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibXmlEscapeElementJs(module, exports) {
    /**
     * Escapes characters that can not be in an XML element.
     */
    function escapeElement(value) {
      return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
    }
    /**
     * @api private
     */


    module.exports = {
      escapeElement: escapeElement
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/xml/xml-node.js":
  /*!**************************************************!*\
    !*** ./node_modules/aws-sdk/lib/xml/xml-node.js ***!
    \**************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibXmlXmlNodeJs(module, exports, __webpack_require__) {
    var escapeAttribute = __webpack_require__(
    /*! ./escape-attribute */
    "./node_modules/aws-sdk/lib/xml/escape-attribute.js").escapeAttribute;
    /**
     * Represents an XML node.
     * @api private
     */


    function XmlNode(name, children) {
      if (children === void 0) {
        children = [];
      }

      this.name = name;
      this.children = children;
      this.attributes = {};
    }

    XmlNode.prototype.addAttribute = function (name, value) {
      this.attributes[name] = value;
      return this;
    };

    XmlNode.prototype.addChildNode = function (child) {
      this.children.push(child);
      return this;
    };

    XmlNode.prototype.removeAttribute = function (name) {
      delete this.attributes[name];
      return this;
    };

    XmlNode.prototype.toString = function () {
      var hasChildren = Boolean(this.children.length);
      var xmlText = '<' + this.name; // add attributes

      var attributes = this.attributes;

      for (var i = 0, attributeNames = Object.keys(attributes); i < attributeNames.length; i++) {
        var attributeName = attributeNames[i];
        var attribute = attributes[attributeName];

        if (typeof attribute !== 'undefined' && attribute !== null) {
          xmlText += ' ' + attributeName + '=\"' + escapeAttribute('' + attribute) + '\"';
        }
      }

      return xmlText += !hasChildren ? '/>' : '>' + this.children.map(function (c) {
        return c.toString();
      }).join('') + '</' + this.name + '>';
    };
    /**
     * @api private
     */


    module.exports = {
      XmlNode: XmlNode
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/lib/xml/xml-text.js":
  /*!**************************************************!*\
    !*** ./node_modules/aws-sdk/lib/xml/xml-text.js ***!
    \**************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkLibXmlXmlTextJs(module, exports, __webpack_require__) {
    var escapeElement = __webpack_require__(
    /*! ./escape-element */
    "./node_modules/aws-sdk/lib/xml/escape-element.js").escapeElement;
    /**
     * Represents an XML text value.
     * @api private
     */


    function XmlText(value) {
      this.value = value;
    }

    XmlText.prototype.toString = function () {
      return escapeElement('' + this.value);
    };
    /**
     * @api private
     */


    module.exports = {
      XmlText: XmlText
    };
    /***/
  },

  /***/
  "./node_modules/aws-sdk/node_modules/events/events.js":
  /*!************************************************************!*\
    !*** ./node_modules/aws-sdk/node_modules/events/events.js ***!
    \************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkNode_modulesEventsEventsJs(module, exports) {
    // Copyright Joyent, Inc. and other Node contributors.
    //
    // Permission is hereby granted, free of charge, to any person obtaining a
    // copy of this software and associated documentation files (the
    // "Software"), to deal in the Software without restriction, including
    // without limitation the rights to use, copy, modify, merge, publish,
    // distribute, sublicense, and/or sell copies of the Software, and to permit
    // persons to whom the Software is furnished to do so, subject to the
    // following conditions:
    //
    // The above copyright notice and this permission notice shall be included
    // in all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
    // USE OR OTHER DEALINGS IN THE SOFTWARE.
    function EventEmitter() {
      this._events = this._events || {};
      this._maxListeners = this._maxListeners || undefined;
    }

    module.exports = EventEmitter; // Backwards-compat with node 0.10.x

    EventEmitter.EventEmitter = EventEmitter;
    EventEmitter.prototype._events = undefined;
    EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
    // added to it. This is a useful default which helps finding memory leaks.

    EventEmitter.defaultMaxListeners = 10; // Obviously not all Emitters should be limited to 10. This function allows
    // that to be increased. Set to zero for unlimited.

    EventEmitter.prototype.setMaxListeners = function (n) {
      if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');
      this._maxListeners = n;
      return this;
    };

    EventEmitter.prototype.emit = function (type) {
      var er, handler, len, args, i, listeners;
      if (!this._events) this._events = {}; // If there is no 'error' event listener then throw.

      if (type === 'error') {
        if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {
          er = arguments[1];

          if (er instanceof Error) {
            throw er; // Unhandled 'error' event
          } else {
            // At least give some kind of context to the user
            var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
            err.context = er;
            throw err;
          }
        }
      }

      handler = this._events[type];
      if (isUndefined(handler)) return false;

      if (isFunction(handler)) {
        switch (arguments.length) {
          // fast cases
          case 1:
            handler.call(this);
            break;

          case 2:
            handler.call(this, arguments[1]);
            break;

          case 3:
            handler.call(this, arguments[1], arguments[2]);
            break;
          // slower

          default:
            args = Array.prototype.slice.call(arguments, 1);
            handler.apply(this, args);
        }
      } else if (isObject(handler)) {
        args = Array.prototype.slice.call(arguments, 1);
        listeners = handler.slice();
        len = listeners.length;

        for (i = 0; i < len; i++) {
          listeners[i].apply(this, args);
        }
      }

      return true;
    };

    EventEmitter.prototype.addListener = function (type, listener) {
      var m;
      if (!isFunction(listener)) throw TypeError('listener must be a function');
      if (!this._events) this._events = {}; // To avoid recursion in the case that type === "newListener"! Before
      // adding it to the listeners, first emit "newListener".

      if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);
      if (!this._events[type]) // Optimize the case of one listener. Don't need the extra array object.
        this._events[type] = listener;else if (isObject(this._events[type])) // If we've already got an array, just append.
        this._events[type].push(listener);else // Adding the second element, need to change to array.
        this._events[type] = [this._events[type], listener]; // Check for listener leak

      if (isObject(this._events[type]) && !this._events[type].warned) {
        if (!isUndefined(this._maxListeners)) {
          m = this._maxListeners;
        } else {
          m = EventEmitter.defaultMaxListeners;
        }

        if (m && m > 0 && this._events[type].length > m) {
          this._events[type].warned = true;
          console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);

          if (typeof console.trace === 'function') {
            // not supported in IE 10
            console.trace();
          }
        }
      }

      return this;
    };

    EventEmitter.prototype.on = EventEmitter.prototype.addListener;

    EventEmitter.prototype.once = function (type, listener) {
      if (!isFunction(listener)) throw TypeError('listener must be a function');
      var fired = false;

      function g() {
        this.removeListener(type, g);

        if (!fired) {
          fired = true;
          listener.apply(this, arguments);
        }
      }

      g.listener = listener;
      this.on(type, g);
      return this;
    }; // emits a 'removeListener' event iff the listener was removed


    EventEmitter.prototype.removeListener = function (type, listener) {
      var list, position, length, i;
      if (!isFunction(listener)) throw TypeError('listener must be a function');
      if (!this._events || !this._events[type]) return this;
      list = this._events[type];
      length = list.length;
      position = -1;

      if (list === listener || isFunction(list.listener) && list.listener === listener) {
        delete this._events[type];
        if (this._events.removeListener) this.emit('removeListener', type, listener);
      } else if (isObject(list)) {
        for (i = length; i-- > 0;) {
          if (list[i] === listener || list[i].listener && list[i].listener === listener) {
            position = i;
            break;
          }
        }

        if (position < 0) return this;

        if (list.length === 1) {
          list.length = 0;
          delete this._events[type];
        } else {
          list.splice(position, 1);
        }

        if (this._events.removeListener) this.emit('removeListener', type, listener);
      }

      return this;
    };

    EventEmitter.prototype.removeAllListeners = function (type) {
      var key, listeners;
      if (!this._events) return this; // not listening for removeListener, no need to emit

      if (!this._events.removeListener) {
        if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];
        return this;
      } // emit removeListener for all listeners on all events


      if (arguments.length === 0) {
        for (key in this._events) {
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }

        this.removeAllListeners('removeListener');
        this._events = {};
        return this;
      }

      listeners = this._events[type];

      if (isFunction(listeners)) {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        while (listeners.length) {
          this.removeListener(type, listeners[listeners.length - 1]);
        }
      }

      delete this._events[type];
      return this;
    };

    EventEmitter.prototype.listeners = function (type) {
      var ret;
      if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();
      return ret;
    };

    EventEmitter.prototype.listenerCount = function (type) {
      if (this._events) {
        var evlistener = this._events[type];
        if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;
      }

      return 0;
    };

    EventEmitter.listenerCount = function (emitter, type) {
      return emitter.listenerCount(type);
    };

    function isFunction(arg) {
      return typeof arg === 'function';
    }

    function isNumber(arg) {
      return typeof arg === 'number';
    }

    function isObject(arg) {
      return typeof arg === 'object' && arg !== null;
    }

    function isUndefined(arg) {
      return arg === void 0;
    }
    /***/

  },

  /***/
  "./node_modules/aws-sdk/node_modules/punycode/punycode.js":
  /*!****************************************************************!*\
    !*** ./node_modules/aws-sdk/node_modules/punycode/punycode.js ***!
    \****************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkNode_modulesPunycodePunycodeJs(module, exports, __webpack_require__) {
    /* WEBPACK VAR INJECTION */
    (function (module) {
      var __WEBPACK_AMD_DEFINE_RESULT__;
      /*! https://mths.be/punycode v1.3.2 by @mathias */


      ;

      (function (root) {
        /** Detect free variables */
        var freeExports = true && exports && !exports.nodeType && exports;
        var freeModule = true && module && !module.nodeType && module;
        var freeGlobal = typeof global == 'object' && global;

        if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
          root = freeGlobal;
        }
        /**
         * The `punycode` object.
         * @name punycode
         * @type Object
         */


        var punycode,

        /** Highest positive signed 32-bit float value */
        maxInt = 2147483647,
            // aka. 0x7FFFFFFF or 2^31-1

        /** Bootstring parameters */
        base = 36,
            tMin = 1,
            tMax = 26,
            skew = 38,
            damp = 700,
            initialBias = 72,
            initialN = 128,
            // 0x80
        delimiter = '-',
            // '\x2D'

        /** Regular expressions */
        regexPunycode = /^xn--/,
            regexNonASCII = /[^\x20-\x7E]/,
            // unprintable ASCII chars + non-ASCII chars
        regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
            // RFC 3490 separators

        /** Error messages */
        errors = {
          'overflow': 'Overflow: input needs wider integers to process',
          'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
          'invalid-input': 'Invalid input'
        },

        /** Convenience shortcuts */
        baseMinusTMin = base - tMin,
            floor = Math.floor,
            stringFromCharCode = String.fromCharCode,

        /** Temporary variable */
        key;
        /*--------------------------------------------------------------------------*/

        /**
         * A generic error utility function.
         * @private
         * @param {String} type The error type.
         * @returns {Error} Throws a `RangeError` with the applicable error message.
         */

        function error(type) {
          throw RangeError(errors[type]);
        }
        /**
         * A generic `Array#map` utility function.
         * @private
         * @param {Array} array The array to iterate over.
         * @param {Function} callback The function that gets called for every array
         * item.
         * @returns {Array} A new array of values returned by the callback function.
         */


        function map(array, fn) {
          var length = array.length;
          var result = [];

          while (length--) {
            result[length] = fn(array[length]);
          }

          return result;
        }
        /**
         * A simple `Array#map`-like wrapper to work with domain name strings or email
         * addresses.
         * @private
         * @param {String} domain The domain name or email address.
         * @param {Function} callback The function that gets called for every
         * character.
         * @returns {Array} A new string of characters returned by the callback
         * function.
         */


        function mapDomain(string, fn) {
          var parts = string.split('@');
          var result = '';

          if (parts.length > 1) {
            // In email addresses, only the domain name should be punycoded. Leave
            // the local part (i.e. everything up to `@`) intact.
            result = parts[0] + '@';
            string = parts[1];
          } // Avoid `split(regex)` for IE8 compatibility. See #17.


          string = string.replace(regexSeparators, '\x2E');
          var labels = string.split('.');
          var encoded = map(labels, fn).join('.');
          return result + encoded;
        }
        /**
         * Creates an array containing the numeric code points of each Unicode
         * character in the string. While JavaScript uses UCS-2 internally,
         * this function will convert a pair of surrogate halves (each of which
         * UCS-2 exposes as separate characters) into a single code point,
         * matching UTF-16.
         * @see `punycode.ucs2.encode`
         * @see <https://mathiasbynens.be/notes/javascript-encoding>
         * @memberOf punycode.ucs2
         * @name decode
         * @param {String} string The Unicode input string (UCS-2).
         * @returns {Array} The new array of code points.
         */


        function ucs2decode(string) {
          var output = [],
              counter = 0,
              length = string.length,
              value,
              extra;

          while (counter < length) {
            value = string.charCodeAt(counter++);

            if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
              // high surrogate, and there is a next character
              extra = string.charCodeAt(counter++);

              if ((extra & 0xFC00) == 0xDC00) {
                // low surrogate
                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
              } else {
                // unmatched surrogate; only append this code unit, in case the next
                // code unit is the high surrogate of a surrogate pair
                output.push(value);
                counter--;
              }
            } else {
              output.push(value);
            }
          }

          return output;
        }
        /**
         * Creates a string based on an array of numeric code points.
         * @see `punycode.ucs2.decode`
         * @memberOf punycode.ucs2
         * @name encode
         * @param {Array} codePoints The array of numeric code points.
         * @returns {String} The new Unicode string (UCS-2).
         */


        function ucs2encode(array) {
          return map(array, function (value) {
            var output = '';

            if (value > 0xFFFF) {
              value -= 0x10000;
              output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
              value = 0xDC00 | value & 0x3FF;
            }

            output += stringFromCharCode(value);
            return output;
          }).join('');
        }
        /**
         * Converts a basic code point into a digit/integer.
         * @see `digitToBasic()`
         * @private
         * @param {Number} codePoint The basic numeric code point value.
         * @returns {Number} The numeric value of a basic code point (for use in
         * representing integers) in the range `0` to `base - 1`, or `base` if
         * the code point does not represent a value.
         */


        function basicToDigit(codePoint) {
          if (codePoint - 48 < 10) {
            return codePoint - 22;
          }

          if (codePoint - 65 < 26) {
            return codePoint - 65;
          }

          if (codePoint - 97 < 26) {
            return codePoint - 97;
          }

          return base;
        }
        /**
         * Converts a digit/integer into a basic code point.
         * @see `basicToDigit()`
         * @private
         * @param {Number} digit The numeric value of a basic code point.
         * @returns {Number} The basic code point whose value (when used for
         * representing integers) is `digit`, which needs to be in the range
         * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
         * used; else, the lowercase form is used. The behavior is undefined
         * if `flag` is non-zero and `digit` has no uppercase form.
         */


        function digitToBasic(digit, flag) {
          //  0..25 map to ASCII a..z or A..Z
          // 26..35 map to ASCII 0..9
          return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
        }
        /**
         * Bias adaptation function as per section 3.4 of RFC 3492.
         * http://tools.ietf.org/html/rfc3492#section-3.4
         * @private
         */


        function adapt(delta, numPoints, firstTime) {
          var k = 0;
          delta = firstTime ? floor(delta / damp) : delta >> 1;
          delta += floor(delta / numPoints);

          for (;
          /* no initialization */
          delta > baseMinusTMin * tMax >> 1; k += base) {
            delta = floor(delta / baseMinusTMin);
          }

          return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
        }
        /**
         * Converts a Punycode string of ASCII-only symbols to a string of Unicode
         * symbols.
         * @memberOf punycode
         * @param {String} input The Punycode string of ASCII-only symbols.
         * @returns {String} The resulting string of Unicode symbols.
         */


        function decode(input) {
          // Don't use UCS-2
          var output = [],
              inputLength = input.length,
              out,
              i = 0,
              n = initialN,
              bias = initialBias,
              basic,
              j,
              index,
              oldi,
              w,
              k,
              digit,
              t,

          /** Cached calculation results */
          baseMinusT; // Handle the basic code points: let `basic` be the number of input code
          // points before the last delimiter, or `0` if there is none, then copy
          // the first basic code points to the output.

          basic = input.lastIndexOf(delimiter);

          if (basic < 0) {
            basic = 0;
          }

          for (j = 0; j < basic; ++j) {
            // if it's not a basic code point
            if (input.charCodeAt(j) >= 0x80) {
              error('not-basic');
            }

            output.push(input.charCodeAt(j));
          } // Main decoding loop: start just after the last delimiter if any basic code
          // points were copied; start at the beginning otherwise.


          for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)
          /* no final expression */
          {
            // `index` is the index of the next character to be consumed.
            // Decode a generalized variable-length integer into `delta`,
            // which gets added to `i`. The overflow checking is easier
            // if we increase `i` as we go, then subtract off its starting
            // value at the end to obtain `delta`.
            for (oldi = i, w = 1, k = base;;
            /* no condition */
            k += base) {
              if (index >= inputLength) {
                error('invalid-input');
              }

              digit = basicToDigit(input.charCodeAt(index++));

              if (digit >= base || digit > floor((maxInt - i) / w)) {
                error('overflow');
              }

              i += digit * w;
              t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

              if (digit < t) {
                break;
              }

              baseMinusT = base - t;

              if (w > floor(maxInt / baseMinusT)) {
                error('overflow');
              }

              w *= baseMinusT;
            }

            out = output.length + 1;
            bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,
            // incrementing `n` each time, so we'll fix that now:

            if (floor(i / out) > maxInt - n) {
              error('overflow');
            }

            n += floor(i / out);
            i %= out; // Insert `n` at position `i` of the output

            output.splice(i++, 0, n);
          }

          return ucs2encode(output);
        }
        /**
         * Converts a string of Unicode symbols (e.g. a domain name label) to a
         * Punycode string of ASCII-only symbols.
         * @memberOf punycode
         * @param {String} input The string of Unicode symbols.
         * @returns {String} The resulting Punycode string of ASCII-only symbols.
         */


        function encode(input) {
          var n,
              delta,
              handledCPCount,
              basicLength,
              bias,
              j,
              m,
              q,
              k,
              t,
              currentValue,
              output = [],

          /** `inputLength` will hold the number of code points in `input`. */
          inputLength,

          /** Cached calculation results */
          handledCPCountPlusOne,
              baseMinusT,
              qMinusT; // Convert the input in UCS-2 to Unicode

          input = ucs2decode(input); // Cache the length

          inputLength = input.length; // Initialize the state

          n = initialN;
          delta = 0;
          bias = initialBias; // Handle the basic code points

          for (j = 0; j < inputLength; ++j) {
            currentValue = input[j];

            if (currentValue < 0x80) {
              output.push(stringFromCharCode(currentValue));
            }
          }

          handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;
          // `basicLength` is the number of basic code points.
          // Finish the basic string - if it is not empty - with a delimiter

          if (basicLength) {
            output.push(delimiter);
          } // Main encoding loop:


          while (handledCPCount < inputLength) {
            // All non-basic code points < n have been handled already. Find the next
            // larger one:
            for (m = maxInt, j = 0; j < inputLength; ++j) {
              currentValue = input[j];

              if (currentValue >= n && currentValue < m) {
                m = currentValue;
              }
            } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
            // but guard against overflow


            handledCPCountPlusOne = handledCPCount + 1;

            if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
              error('overflow');
            }

            delta += (m - n) * handledCPCountPlusOne;
            n = m;

            for (j = 0; j < inputLength; ++j) {
              currentValue = input[j];

              if (currentValue < n && ++delta > maxInt) {
                error('overflow');
              }

              if (currentValue == n) {
                // Represent delta as a generalized variable-length integer
                for (q = delta, k = base;;
                /* no condition */
                k += base) {
                  t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

                  if (q < t) {
                    break;
                  }

                  qMinusT = q - t;
                  baseMinusT = base - t;
                  output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
                  q = floor(qMinusT / baseMinusT);
                }

                output.push(stringFromCharCode(digitToBasic(q, 0)));
                bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
                delta = 0;
                ++handledCPCount;
              }
            }

            ++delta;
            ++n;
          }

          return output.join('');
        }
        /**
         * Converts a Punycode string representing a domain name or an email address
         * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
         * it doesn't matter if you call it on a string that has already been
         * converted to Unicode.
         * @memberOf punycode
         * @param {String} input The Punycoded domain name or email address to
         * convert to Unicode.
         * @returns {String} The Unicode representation of the given Punycode
         * string.
         */


        function toUnicode(input) {
          return mapDomain(input, function (string) {
            return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
          });
        }
        /**
         * Converts a Unicode string representing a domain name or an email address to
         * Punycode. Only the non-ASCII parts of the domain name will be converted,
         * i.e. it doesn't matter if you call it with a domain that's already in
         * ASCII.
         * @memberOf punycode
         * @param {String} input The domain name or email address to convert, as a
         * Unicode string.
         * @returns {String} The Punycode representation of the given domain name or
         * email address.
         */


        function toASCII(input) {
          return mapDomain(input, function (string) {
            return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
          });
        }
        /*--------------------------------------------------------------------------*/

        /** Define the public API */


        punycode = {
          /**
           * A string representing the current Punycode.js version number.
           * @memberOf punycode
           * @type String
           */
          'version': '1.3.2',

          /**
           * An object of methods to convert from JavaScript's internal character
           * representation (UCS-2) to Unicode code points, and back.
           * @see <https://mathiasbynens.be/notes/javascript-encoding>
           * @memberOf punycode
           * @type Object
           */
          'ucs2': {
            'decode': ucs2decode,
            'encode': ucs2encode
          },
          'decode': decode,
          'encode': encode,
          'toASCII': toASCII,
          'toUnicode': toUnicode
        };
        /** Expose `punycode` */
        // Some AMD build optimizers, like r.js, check for specific condition patterns
        // like the following:

        if (true) {
          !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
            return punycode;
          }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else {}
      })(this);
      /* WEBPACK VAR INJECTION */

    }).call(this, __webpack_require__(
    /*! ./../../../webpack/buildin/module.js */
    "./node_modules/webpack/buildin/module.js")(module));
    /***/
  },

  /***/
  "./node_modules/aws-sdk/node_modules/url/url.js":
  /*!******************************************************!*\
    !*** ./node_modules/aws-sdk/node_modules/url/url.js ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkNode_modulesUrlUrlJs(module, exports, __webpack_require__) {
    // Copyright Joyent, Inc. and other Node contributors.
    //
    // Permission is hereby granted, free of charge, to any person obtaining a
    // copy of this software and associated documentation files (the
    // "Software"), to deal in the Software without restriction, including
    // without limitation the rights to use, copy, modify, merge, publish,
    // distribute, sublicense, and/or sell copies of the Software, and to permit
    // persons to whom the Software is furnished to do so, subject to the
    // following conditions:
    //
    // The above copyright notice and this permission notice shall be included
    // in all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
    // USE OR OTHER DEALINGS IN THE SOFTWARE.
    var punycode = __webpack_require__(
    /*! punycode */
    "./node_modules/aws-sdk/node_modules/punycode/punycode.js");

    exports.parse = urlParse;
    exports.resolve = urlResolve;
    exports.resolveObject = urlResolveObject;
    exports.format = urlFormat;
    exports.Url = Url;

    function Url() {
      this.protocol = null;
      this.slashes = null;
      this.auth = null;
      this.host = null;
      this.port = null;
      this.hostname = null;
      this.hash = null;
      this.search = null;
      this.query = null;
      this.pathname = null;
      this.path = null;
      this.href = null;
    } // Reference: RFC 3986, RFC 1808, RFC 2396
    // define these here so at least they only have to be
    // compiled once on the first module load.


    var protocolPattern = /^([a-z0-9.+-]+:)/i,
        portPattern = /:[0-9]*$/,
        // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],
        // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),
        // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
        // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
        hostEndingChars = ['/', '?', '#'],
        hostnameMaxLen = 255,
        hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,
        hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,
        // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
        // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
        // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
        querystring = __webpack_require__(
    /*! querystring */
    "./node_modules/querystring/index.js");

    function urlParse(url, parseQueryString, slashesDenoteHost) {
      if (url && isObject(url) && url instanceof Url) return url;
      var u = new Url();
      u.parse(url, parseQueryString, slashesDenoteHost);
      return u;
    }

    Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {
      if (!isString(url)) {
        throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
      }

      var rest = url; // trim before proceeding.
      // This is to support parse stuff like "  http://foo.com  \n"

      rest = rest.trim();
      var proto = protocolPattern.exec(rest);

      if (proto) {
        proto = proto[0];
        var lowerProto = proto.toLowerCase();
        this.protocol = lowerProto;
        rest = rest.substr(proto.length);
      } // figure out if it's got a host
      // user@server is *always* interpreted as a hostname, and url
      // resolution will treat //foo/bar as host=foo,path=bar because that's
      // how the browser resolves relative URLs.


      if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
        var slashes = rest.substr(0, 2) === '//';

        if (slashes && !(proto && hostlessProtocol[proto])) {
          rest = rest.substr(2);
          this.slashes = true;
        }
      }

      if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
        // there's a hostname.
        // the first instance of /, ?, ;, or # ends the host.
        //
        // If there is an @ in the hostname, then non-host chars *are* allowed
        // to the left of the last @ sign, unless some host-ending character
        // comes *before* the @-sign.
        // URLs are obnoxious.
        //
        // ex:
        // http://a@b@c/ => user:a@b host:c
        // http://a@b?@c => user:a host:c path:/?@c
        // v0.12 TODO(isaacs): This is not quite how Chrome does things.
        // Review our test case against browsers more comprehensively.
        // find the first instance of any hostEndingChars
        var hostEnd = -1;

        for (var i = 0; i < hostEndingChars.length; i++) {
          var hec = rest.indexOf(hostEndingChars[i]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
        } // at this point, either we have an explicit point where the
        // auth portion cannot go past, or the last @ char is the decider.


        var auth, atSign;

        if (hostEnd === -1) {
          // atSign can be anywhere.
          atSign = rest.lastIndexOf('@');
        } else {
          // atSign must be in auth portion.
          // http://a@b/c@d => host:b auth:a path:/c@d
          atSign = rest.lastIndexOf('@', hostEnd);
        } // Now we have a portion which is definitely the auth.
        // Pull that off.


        if (atSign !== -1) {
          auth = rest.slice(0, atSign);
          rest = rest.slice(atSign + 1);
          this.auth = decodeURIComponent(auth);
        } // the host is the remaining to the left of the first non-host char


        hostEnd = -1;

        for (var i = 0; i < nonHostChars.length; i++) {
          var hec = rest.indexOf(nonHostChars[i]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
        } // if we still have not hit it, then the entire thing is a host.


        if (hostEnd === -1) hostEnd = rest.length;
        this.host = rest.slice(0, hostEnd);
        rest = rest.slice(hostEnd); // pull out port.

        this.parseHost(); // we've indicated that there is a hostname,
        // so even if it's empty, it has to be present.

        this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]
        // assume that it's an IPv6 address.

        var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.

        if (!ipv6Hostname) {
          var hostparts = this.hostname.split(/\./);

          for (var i = 0, l = hostparts.length; i < l; i++) {
            var part = hostparts[i];
            if (!part) continue;

            if (!part.match(hostnamePartPattern)) {
              var newpart = '';

              for (var j = 0, k = part.length; j < k; j++) {
                if (part.charCodeAt(j) > 127) {
                  // we replace non-ASCII char with a temporary placeholder
                  // we need this to make sure size of hostname is not
                  // broken by replacing non-ASCII by nothing
                  newpart += 'x';
                } else {
                  newpart += part[j];
                }
              } // we test again with ASCII char only


              if (!newpart.match(hostnamePartPattern)) {
                var validParts = hostparts.slice(0, i);
                var notHost = hostparts.slice(i + 1);
                var bit = part.match(hostnamePartStart);

                if (bit) {
                  validParts.push(bit[1]);
                  notHost.unshift(bit[2]);
                }

                if (notHost.length) {
                  rest = '/' + notHost.join('.') + rest;
                }

                this.hostname = validParts.join('.');
                break;
              }
            }
          }
        }

        if (this.hostname.length > hostnameMaxLen) {
          this.hostname = '';
        } else {
          // hostnames are always lower case.
          this.hostname = this.hostname.toLowerCase();
        }

        if (!ipv6Hostname) {
          // IDNA Support: Returns a puny coded representation of "domain".
          // It only converts the part of the domain name that
          // has non ASCII characters. I.e. it dosent matter if
          // you call it with a domain that already is in ASCII.
          var domainArray = this.hostname.split('.');
          var newOut = [];

          for (var i = 0; i < domainArray.length; ++i) {
            var s = domainArray[i];
            newOut.push(s.match(/[^A-Za-z0-9_-]/) ? 'xn--' + punycode.encode(s) : s);
          }

          this.hostname = newOut.join('.');
        }

        var p = this.port ? ':' + this.port : '';
        var h = this.hostname || '';
        this.host = h + p;
        this.href += this.host; // strip [ and ] from the hostname
        // the host field still retains them, though

        if (ipv6Hostname) {
          this.hostname = this.hostname.substr(1, this.hostname.length - 2);

          if (rest[0] !== '/') {
            rest = '/' + rest;
          }
        }
      } // now rest is set to the post-host stuff.
      // chop off any delim chars.


      if (!unsafeProtocol[lowerProto]) {
        // First, make 100% sure that any "autoEscape" chars get
        // escaped, even if encodeURIComponent doesn't think they
        // need to be.
        for (var i = 0, l = autoEscape.length; i < l; i++) {
          var ae = autoEscape[i];
          var esc = encodeURIComponent(ae);

          if (esc === ae) {
            esc = escape(ae);
          }

          rest = rest.split(ae).join(esc);
        }
      } // chop off from the tail first.


      var hash = rest.indexOf('#');

      if (hash !== -1) {
        // got a fragment string.
        this.hash = rest.substr(hash);
        rest = rest.slice(0, hash);
      }

      var qm = rest.indexOf('?');

      if (qm !== -1) {
        this.search = rest.substr(qm);
        this.query = rest.substr(qm + 1);

        if (parseQueryString) {
          this.query = querystring.parse(this.query);
        }

        rest = rest.slice(0, qm);
      } else if (parseQueryString) {
        // no query string, but parseQueryString still requested
        this.search = '';
        this.query = {};
      }

      if (rest) this.pathname = rest;

      if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
        this.pathname = '/';
      } //to support http.request


      if (this.pathname || this.search) {
        var p = this.pathname || '';
        var s = this.search || '';
        this.path = p + s;
      } // finally, reconstruct the href based on what has been validated.


      this.href = this.format();
      return this;
    }; // format a parsed object into a url string


    function urlFormat(obj) {
      // ensure it's an object, and not a string url.
      // If it's an obj, this is a no-op.
      // this way, you can call url_format() on strings
      // to clean up potentially wonky urls.
      if (isString(obj)) obj = urlParse(obj);
      if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
      return obj.format();
    }

    Url.prototype.format = function () {
      var auth = this.auth || '';

      if (auth) {
        auth = encodeURIComponent(auth);
        auth = auth.replace(/%3A/i, ':');
        auth += '@';
      }

      var protocol = this.protocol || '',
          pathname = this.pathname || '',
          hash = this.hash || '',
          host = false,
          query = '';

      if (this.host) {
        host = auth + this.host;
      } else if (this.hostname) {
        host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');

        if (this.port) {
          host += ':' + this.port;
        }
      }

      if (this.query && isObject(this.query) && Object.keys(this.query).length) {
        query = querystring.stringify(this.query);
      }

      var search = this.search || query && '?' + query || '';
      if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
      // unless they had them to begin with.

      if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
        host = '//' + (host || '');
        if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
      } else if (!host) {
        host = '';
      }

      if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
      if (search && search.charAt(0) !== '?') search = '?' + search;
      pathname = pathname.replace(/[?#]/g, function (match) {
        return encodeURIComponent(match);
      });
      search = search.replace('#', '%23');
      return protocol + host + pathname + search + hash;
    };

    function urlResolve(source, relative) {
      return urlParse(source, false, true).resolve(relative);
    }

    Url.prototype.resolve = function (relative) {
      return this.resolveObject(urlParse(relative, false, true)).format();
    };

    function urlResolveObject(source, relative) {
      if (!source) return relative;
      return urlParse(source, false, true).resolveObject(relative);
    }

    Url.prototype.resolveObject = function (relative) {
      if (isString(relative)) {
        var rel = new Url();
        rel.parse(relative, false, true);
        relative = rel;
      }

      var result = new Url();
      Object.keys(this).forEach(function (k) {
        result[k] = this[k];
      }, this); // hash is always overridden, no matter what.
      // even href="" will remove it.

      result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.

      if (relative.href === '') {
        result.href = result.format();
        return result;
      } // hrefs like //foo/bar always cut to the protocol.


      if (relative.slashes && !relative.protocol) {
        // take everything except the protocol from relative
        Object.keys(relative).forEach(function (k) {
          if (k !== 'protocol') result[k] = relative[k];
        }); //urlParse appends trailing / to urls like http://www.example.com

        if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
          result.path = result.pathname = '/';
        }

        result.href = result.format();
        return result;
      }

      if (relative.protocol && relative.protocol !== result.protocol) {
        // if it's a known url protocol, then changing
        // the protocol does weird things
        // first, if it's not file:, then we MUST have a host,
        // and if there was a path
        // to begin with, then we MUST have a path.
        // if it is file:, then the host is dropped,
        // because that's known to be hostless.
        // anything else is assumed to be absolute.
        if (!slashedProtocol[relative.protocol]) {
          Object.keys(relative).forEach(function (k) {
            result[k] = relative[k];
          });
          result.href = result.format();
          return result;
        }

        result.protocol = relative.protocol;

        if (!relative.host && !hostlessProtocol[relative.protocol]) {
          var relPath = (relative.pathname || '').split('/');

          while (relPath.length && !(relative.host = relPath.shift())) {
            ;
          }

          if (!relative.host) relative.host = '';
          if (!relative.hostname) relative.hostname = '';
          if (relPath[0] !== '') relPath.unshift('');
          if (relPath.length < 2) relPath.unshift('');
          result.pathname = relPath.join('/');
        } else {
          result.pathname = relative.pathname;
        }

        result.search = relative.search;
        result.query = relative.query;
        result.host = relative.host || '';
        result.auth = relative.auth;
        result.hostname = relative.hostname || relative.host;
        result.port = relative.port; // to support http.request

        if (result.pathname || result.search) {
          var p = result.pathname || '';
          var s = result.search || '';
          result.path = p + s;
        }

        result.slashes = result.slashes || relative.slashes;
        result.href = result.format();
        return result;
      }

      var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',
          isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',
          mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,
          removeAllDots = mustEndAbs,
          srcPath = result.pathname && result.pathname.split('/') || [],
          relPath = relative.pathname && relative.pathname.split('/') || [],
          psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative
      // links like ../.. should be able
      // to crawl up to the hostname, as well.  This is strange.
      // result.protocol has already been set by now.
      // Later on, put the first path part into the host field.

      if (psychotic) {
        result.hostname = '';
        result.port = null;

        if (result.host) {
          if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);
        }

        result.host = '';

        if (relative.protocol) {
          relative.hostname = null;
          relative.port = null;

          if (relative.host) {
            if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);
          }

          relative.host = null;
        }

        mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
      }

      if (isRelAbs) {
        // it's absolute.
        result.host = relative.host || relative.host === '' ? relative.host : result.host;
        result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;
        result.search = relative.search;
        result.query = relative.query;
        srcPath = relPath; // fall through to the dot-handling below.
      } else if (relPath.length) {
        // it's relative
        // throw away the existing file, and take the new path instead.
        if (!srcPath) srcPath = [];
        srcPath.pop();
        srcPath = srcPath.concat(relPath);
        result.search = relative.search;
        result.query = relative.query;
      } else if (!isNullOrUndefined(relative.search)) {
        // just pull out the search.
        // like href='?foo'.
        // Put this after the other two cases because it simplifies the booleans
        if (psychotic) {
          result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host
          //this especialy happens in cases like
          //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

          var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

          if (authInHost) {
            result.auth = authInHost.shift();
            result.host = result.hostname = authInHost.shift();
          }
        }

        result.search = relative.search;
        result.query = relative.query; //to support http.request

        if (!isNull(result.pathname) || !isNull(result.search)) {
          result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
        }

        result.href = result.format();
        return result;
      }

      if (!srcPath.length) {
        // no path at all.  easy.
        // we've already handled the other stuff above.
        result.pathname = null; //to support http.request

        if (result.search) {
          result.path = '/' + result.search;
        } else {
          result.path = null;
        }

        result.href = result.format();
        return result;
      } // if a url ENDs in . or .., then it must get a trailing slash.
      // however, if it ends in anything else non-slashy,
      // then it must NOT get a trailing slash.


      var last = srcPath.slice(-1)[0];
      var hasTrailingSlash = (result.host || relative.host) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir
      // if the path tries to go above the root, `up` ends up > 0

      var up = 0;

      for (var i = srcPath.length; i >= 0; i--) {
        last = srcPath[i];

        if (last == '.') {
          srcPath.splice(i, 1);
        } else if (last === '..') {
          srcPath.splice(i, 1);
          up++;
        } else if (up) {
          srcPath.splice(i, 1);
          up--;
        }
      } // if the path is allowed to go above the root, restore leading ..s


      if (!mustEndAbs && !removeAllDots) {
        for (; up--; up) {
          srcPath.unshift('..');
        }
      }

      if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
        srcPath.unshift('');
      }

      if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {
        srcPath.push('');
      }

      var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back

      if (psychotic) {
        result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host
        //this especialy happens in cases like
        //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

        var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

        if (authInHost) {
          result.auth = authInHost.shift();
          result.host = result.hostname = authInHost.shift();
        }
      }

      mustEndAbs = mustEndAbs || result.host && srcPath.length;

      if (mustEndAbs && !isAbsolute) {
        srcPath.unshift('');
      }

      if (!srcPath.length) {
        result.pathname = null;
        result.path = null;
      } else {
        result.pathname = srcPath.join('/');
      } //to support request.http


      if (!isNull(result.pathname) || !isNull(result.search)) {
        result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
      }

      result.auth = relative.auth || result.auth;
      result.slashes = result.slashes || relative.slashes;
      result.href = result.format();
      return result;
    };

    Url.prototype.parseHost = function () {
      var host = this.host;
      var port = portPattern.exec(host);

      if (port) {
        port = port[0];

        if (port !== ':') {
          this.port = port.substr(1);
        }

        host = host.substr(0, host.length - port.length);
      }

      if (host) this.hostname = host;
    };

    function isString(arg) {
      return typeof arg === "string";
    }

    function isObject(arg) {
      return typeof arg === 'object' && arg !== null;
    }

    function isNull(arg) {
      return arg === null;
    }

    function isNullOrUndefined(arg) {
      return arg == null;
    }
    /***/

  },

  /***/
  "./node_modules/aws-sdk/node_modules/uuid/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/aws-sdk/node_modules/uuid/index.js ***!
    \*********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkNode_modulesUuidIndexJs(module, exports, __webpack_require__) {
    var v1 = __webpack_require__(
    /*! ./v1 */
    "./node_modules/aws-sdk/node_modules/uuid/v1.js");

    var v4 = __webpack_require__(
    /*! ./v4 */
    "./node_modules/aws-sdk/node_modules/uuid/v4.js");

    var uuid = v4;
    uuid.v1 = v1;
    uuid.v4 = v4;
    module.exports = uuid;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/node_modules/uuid/lib/bytesToUuid.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/aws-sdk/node_modules/uuid/lib/bytesToUuid.js ***!
    \*******************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkNode_modulesUuidLibBytesToUuidJs(module, exports) {
    /**
     * Convert array of 16 byte values to UUID string format of the form:
     * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
     */
    var byteToHex = [];

    for (var i = 0; i < 256; ++i) {
      byteToHex[i] = (i + 0x100).toString(16).substr(1);
    }

    function bytesToUuid(buf, offset) {
      var i = offset || 0;
      var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4

      return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');
    }

    module.exports = bytesToUuid;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/node_modules/uuid/lib/rng-browser.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/aws-sdk/node_modules/uuid/lib/rng-browser.js ***!
    \*******************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkNode_modulesUuidLibRngBrowserJs(module, exports) {
    // Unique ID creation requires a high quality random # generator.  In the
    // browser this is a little complicated due to unknown quality of Math.random()
    // and inconsistent support for the `crypto` API.  We do the best we can via
    // feature-detection
    // getRandomValues needs to be invoked in a context where "this" is a Crypto
    // implementation. Also, find the complete implementation of crypto on IE11.
    var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);

    if (getRandomValues) {
      // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
      var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

      module.exports = function whatwgRNG() {
        getRandomValues(rnds8);
        return rnds8;
      };
    } else {
      // Math.random()-based (RNG)
      //
      // If all else fails, use Math.random().  It's fast, but is of unspecified
      // quality.
      var rnds = new Array(16);

      module.exports = function mathRNG() {
        for (var i = 0, r; i < 16; i++) {
          if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
          rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
        }

        return rnds;
      };
    }
    /***/

  },

  /***/
  "./node_modules/aws-sdk/node_modules/uuid/v1.js":
  /*!******************************************************!*\
    !*** ./node_modules/aws-sdk/node_modules/uuid/v1.js ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkNode_modulesUuidV1Js(module, exports, __webpack_require__) {
    var rng = __webpack_require__(
    /*! ./lib/rng */
    "./node_modules/aws-sdk/node_modules/uuid/lib/rng-browser.js");

    var bytesToUuid = __webpack_require__(
    /*! ./lib/bytesToUuid */
    "./node_modules/aws-sdk/node_modules/uuid/lib/bytesToUuid.js"); // **`v1()` - Generate time-based UUID**
    //
    // Inspired by https://github.com/LiosK/UUID.js
    // and http://docs.python.org/library/uuid.html


    var _nodeId;

    var _clockseq; // Previous uuid creation time


    var _lastMSecs = 0;
    var _lastNSecs = 0; // See https://github.com/broofa/node-uuid for API details

    function v1(options, buf, offset) {
      var i = buf && offset || 0;
      var b = buf || [];
      options = options || {};
      var node = options.node || _nodeId;
      var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
      // specified.  We do this lazily to minimize issues related to insufficient
      // system entropy.  See #189

      if (node == null || clockseq == null) {
        var seedBytes = rng();

        if (node == null) {
          // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
          node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
        }

        if (clockseq == null) {
          // Per 4.2.2, randomize (14 bit) clockseq
          clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
        }
      } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
      // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
      // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
      // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


      var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock
      // cycle to simulate higher resolution clock

      var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

      var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

      if (dt < 0 && options.clockseq === undefined) {
        clockseq = clockseq + 1 & 0x3fff;
      } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
      // time interval


      if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
        nsecs = 0;
      } // Per 4.2.1.2 Throw error if too many uuids are requested


      if (nsecs >= 10000) {
        throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
      }

      _lastMSecs = msecs;
      _lastNSecs = nsecs;
      _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

      msecs += 12219292800000; // `time_low`

      var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
      b[i++] = tl >>> 24 & 0xff;
      b[i++] = tl >>> 16 & 0xff;
      b[i++] = tl >>> 8 & 0xff;
      b[i++] = tl & 0xff; // `time_mid`

      var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
      b[i++] = tmh >>> 8 & 0xff;
      b[i++] = tmh & 0xff; // `time_high_and_version`

      b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

      b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

      b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

      b[i++] = clockseq & 0xff; // `node`

      for (var n = 0; n < 6; ++n) {
        b[i + n] = node[n];
      }

      return buf ? buf : bytesToUuid(b);
    }

    module.exports = v1;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/node_modules/uuid/v4.js":
  /*!******************************************************!*\
    !*** ./node_modules/aws-sdk/node_modules/uuid/v4.js ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkNode_modulesUuidV4Js(module, exports, __webpack_require__) {
    var rng = __webpack_require__(
    /*! ./lib/rng */
    "./node_modules/aws-sdk/node_modules/uuid/lib/rng-browser.js");

    var bytesToUuid = __webpack_require__(
    /*! ./lib/bytesToUuid */
    "./node_modules/aws-sdk/node_modules/uuid/lib/bytesToUuid.js");

    function v4(options, buf, offset) {
      var i = buf && offset || 0;

      if (typeof options == 'string') {
        buf = options === 'binary' ? new Array(16) : null;
        options = null;
      }

      options = options || {};
      var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

      rnds[6] = rnds[6] & 0x0f | 0x40;
      rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

      if (buf) {
        for (var ii = 0; ii < 16; ++ii) {
          buf[i + ii] = rnds[ii];
        }
      }

      return buf || bytesToUuid(rnds);
    }

    module.exports = v4;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/vendor/endpoint-cache/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/aws-sdk/vendor/endpoint-cache/index.js ***!
    \*************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkVendorEndpointCacheIndexJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var LRU_1 = __webpack_require__(
    /*! ./utils/LRU */
    "./node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js");

    var CACHE_SIZE = 1000;
    /**
     * Inspired node-lru-cache[https://github.com/isaacs/node-lru-cache]
     */

    var EndpointCache =
    /** @class */
    function () {
      function EndpointCache(maxSize) {
        if (maxSize === void 0) {
          maxSize = CACHE_SIZE;
        }

        this.maxSize = maxSize;
        this.cache = new LRU_1.LRUCache(maxSize);
      }

      ;
      Object.defineProperty(EndpointCache.prototype, "size", {
        get: function get() {
          return this.cache.length;
        },
        enumerable: true,
        configurable: true
      });

      EndpointCache.prototype.put = function (key, value) {
        var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;
        var endpointRecord = this.populateValue(value);
        this.cache.put(keyString, endpointRecord);
      };

      EndpointCache.prototype.get = function (key) {
        var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;
        var now = Date.now();
        var records = this.cache.get(keyString);

        if (records) {
          for (var i = 0; i < records.length; i++) {
            var record = records[i];

            if (record.Expire < now) {
              this.cache.remove(keyString);
              return undefined;
            }
          }
        }

        return records;
      };

      EndpointCache.getKeyString = function (key) {
        var identifiers = [];
        var identifierNames = Object.keys(key).sort();

        for (var i = 0; i < identifierNames.length; i++) {
          var identifierName = identifierNames[i];
          if (key[identifierName] === undefined) continue;
          identifiers.push(key[identifierName]);
        }

        return identifiers.join(' ');
      };

      EndpointCache.prototype.populateValue = function (endpoints) {
        var now = Date.now();
        return endpoints.map(function (endpoint) {
          return {
            Address: endpoint.Address || '',
            Expire: now + (endpoint.CachePeriodInMinutes || 1) * 60 * 1000
          };
        });
      };

      EndpointCache.prototype.empty = function () {
        this.cache.empty();
      };

      EndpointCache.prototype.remove = function (key) {
        var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;
        this.cache.remove(keyString);
      };

      return EndpointCache;
    }();

    exports.EndpointCache = EndpointCache;
    /***/
  },

  /***/
  "./node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js ***!
    \*****************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAwsSdkVendorEndpointCacheUtilsLRUJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var LinkedListNode =
    /** @class */
    function () {
      function LinkedListNode(key, value) {
        this.key = key;
        this.value = value;
      }

      return LinkedListNode;
    }();

    var LRUCache =
    /** @class */
    function () {
      function LRUCache(size) {
        this.nodeMap = {};
        this.size = 0;

        if (typeof size !== 'number' || size < 1) {
          throw new Error('Cache size can only be positive number');
        }

        this.sizeLimit = size;
      }

      Object.defineProperty(LRUCache.prototype, "length", {
        get: function get() {
          return this.size;
        },
        enumerable: true,
        configurable: true
      });

      LRUCache.prototype.prependToList = function (node) {
        if (!this.headerNode) {
          this.tailNode = node;
        } else {
          this.headerNode.prev = node;
          node.next = this.headerNode;
        }

        this.headerNode = node;
        this.size++;
      };

      LRUCache.prototype.removeFromTail = function () {
        if (!this.tailNode) {
          return undefined;
        }

        var node = this.tailNode;
        var prevNode = node.prev;

        if (prevNode) {
          prevNode.next = undefined;
        }

        node.prev = undefined;
        this.tailNode = prevNode;
        this.size--;
        return node;
      };

      LRUCache.prototype.detachFromList = function (node) {
        if (this.headerNode === node) {
          this.headerNode = node.next;
        }

        if (this.tailNode === node) {
          this.tailNode = node.prev;
        }

        if (node.prev) {
          node.prev.next = node.next;
        }

        if (node.next) {
          node.next.prev = node.prev;
        }

        node.next = undefined;
        node.prev = undefined;
        this.size--;
      };

      LRUCache.prototype.get = function (key) {
        if (this.nodeMap[key]) {
          var node = this.nodeMap[key];
          this.detachFromList(node);
          this.prependToList(node);
          return node.value;
        }
      };

      LRUCache.prototype.remove = function (key) {
        if (this.nodeMap[key]) {
          var node = this.nodeMap[key];
          this.detachFromList(node);
          delete this.nodeMap[key];
        }
      };

      LRUCache.prototype.put = function (key, value) {
        if (this.nodeMap[key]) {
          this.remove(key);
        } else if (this.size === this.sizeLimit) {
          var tailNode = this.removeFromTail();
          var key_1 = tailNode.key;
          delete this.nodeMap[key_1];
        }

        var newNode = new LinkedListNode(key, value);
        this.nodeMap[key] = newNode;
        this.prependToList(newNode);
      };

      LRUCache.prototype.empty = function () {
        var keys = Object.keys(this.nodeMap);

        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var node = this.nodeMap[key];
          this.detachFromList(node);
          delete this.nodeMap[key];
        }
      };

      return LRUCache;
    }();

    exports.LRUCache = LRUCache;
    /***/
  },

  /***/
  "./node_modules/base64-js/index.js":
  /*!*****************************************!*\
    !*** ./node_modules/base64-js/index.js ***!
    \*****************************************/

  /*! no static exports found */

  /***/
  function node_modulesBase64JsIndexJs(module, exports, __webpack_require__) {
    "use strict";

    exports.byteLength = byteLength;
    exports.toByteArray = toByteArray;
    exports.fromByteArray = fromByteArray;
    var lookup = [];
    var revLookup = [];
    var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
    var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

    for (var i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    } // Support decoding URL-safe base64 strings, as Node.js does.
    // See: https://en.wikipedia.org/wiki/Base64#URL_applications


    revLookup['-'.charCodeAt(0)] = 62;
    revLookup['_'.charCodeAt(0)] = 63;

    function getLens(b64) {
      var len = b64.length;

      if (len % 4 > 0) {
        throw new Error('Invalid string. Length must be a multiple of 4');
      } // Trim off extra bytes after placeholder bytes are found
      // See: https://github.com/beatgammit/base64-js/issues/42


      var validLen = b64.indexOf('=');
      if (validLen === -1) validLen = len;
      var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
      return [validLen, placeHoldersLen];
    } // base64 is 4/3 + up to two characters of the original data


    function byteLength(b64) {
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }

    function _byteLength(b64, validLen, placeHoldersLen) {
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }

    function toByteArray(b64) {
      var tmp;
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
      var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars

      var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
      var i;

      for (i = 0; i < len; i += 4) {
        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
        arr[curByte++] = tmp >> 16 & 0xFF;
        arr[curByte++] = tmp >> 8 & 0xFF;
        arr[curByte++] = tmp & 0xFF;
      }

      if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
        arr[curByte++] = tmp & 0xFF;
      }

      if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 0xFF;
        arr[curByte++] = tmp & 0xFF;
      }

      return arr;
    }

    function tripletToBase64(num) {
      return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
    }

    function encodeChunk(uint8, start, end) {
      var tmp;
      var output = [];

      for (var i = start; i < end; i += 3) {
        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
        output.push(tripletToBase64(tmp));
      }

      return output.join('');
    }

    function fromByteArray(uint8) {
      var tmp;
      var len = uint8.length;
      var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes

      var parts = [];
      var maxChunkLength = 16383; // must be multiple of 3
      // go through the array every three bytes, we'll deal with trailing stuff later

      for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
        parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
      } // pad the end with zeros, but make sure to not forget the extra bytes


      if (extraBytes === 1) {
        tmp = uint8[len - 1];
        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
      } else if (extraBytes === 2) {
        tmp = (uint8[len - 2] << 8) + uint8[len - 1];
        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
      }

      return parts.join('');
    }
    /***/

  },

  /***/
  "./node_modules/buffer/index.js":
  /*!**************************************!*\
    !*** ./node_modules/buffer/index.js ***!
    \**************************************/

  /*! no static exports found */

  /***/
  function node_modulesBufferIndexJs(module, exports, __webpack_require__) {
    "use strict";
    /*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <http://feross.org>
     * @license  MIT
     */

    /* eslint-disable no-proto */

    var base64 = __webpack_require__(
    /*! base64-js */
    "./node_modules/base64-js/index.js");

    var ieee754 = __webpack_require__(
    /*! ieee754 */
    "./node_modules/ieee754/index.js");

    var isArray = __webpack_require__(
    /*! isarray */
    "./node_modules/isarray/index.js");

    exports.Buffer = Buffer;
    exports.SlowBuffer = SlowBuffer;
    exports.INSPECT_MAX_BYTES = 50;
    /**
     * If `Buffer.TYPED_ARRAY_SUPPORT`:
     *   === true    Use Uint8Array implementation (fastest)
     *   === false   Use Object implementation (most compatible, even IE6)
     *
     * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
     * Opera 11.6+, iOS 4.2+.
     *
     * Due to various browser bugs, sometimes the Object implementation will be used even
     * when the browser supports typed arrays.
     *
     * Note:
     *
     *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
     *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
     *
     *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
     *
     *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
     *     incorrect length in some situations.
    
     * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
     * get the Object implementation, which is slower but behaves correctly.
     */

    Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();
    /*
     * Export kMaxLength after typed array support is determined.
     */

    exports.kMaxLength = kMaxLength();

    function typedArraySupport() {
      try {
        var arr = new Uint8Array(1);
        arr.__proto__ = {
          __proto__: Uint8Array.prototype,
          foo: function foo() {
            return 42;
          }
        };
        return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`
      } catch (e) {
        return false;
      }
    }

    function kMaxLength() {
      return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
    }

    function createBuffer(that, length) {
      if (kMaxLength() < length) {
        throw new RangeError('Invalid typed array length');
      }

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        // Return an augmented `Uint8Array` instance, for best performance
        that = new Uint8Array(length);
        that.__proto__ = Buffer.prototype;
      } else {
        // Fallback: Return an object instance of the Buffer class
        if (that === null) {
          that = new Buffer(length);
        }

        that.length = length;
      }

      return that;
    }
    /**
     * The Buffer constructor returns instances of `Uint8Array` that have their
     * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
     * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
     * and the `Uint8Array` methods. Square bracket notation works as expected -- it
     * returns a single octet.
     *
     * The `Uint8Array` prototype remains unmodified.
     */


    function Buffer(arg, encodingOrOffset, length) {
      if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
        return new Buffer(arg, encodingOrOffset, length);
      } // Common case.


      if (typeof arg === 'number') {
        if (typeof encodingOrOffset === 'string') {
          throw new Error('If encoding is specified then the first argument must be a string');
        }

        return allocUnsafe(this, arg);
      }

      return from(this, arg, encodingOrOffset, length);
    }

    Buffer.poolSize = 8192; // not used by this implementation
    // TODO: Legacy, not needed anymore. Remove in next major version.

    Buffer._augment = function (arr) {
      arr.__proto__ = Buffer.prototype;
      return arr;
    };

    function from(that, value, encodingOrOffset, length) {
      if (typeof value === 'number') {
        throw new TypeError('"value" argument must not be a number');
      }

      if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
        return fromArrayBuffer(that, value, encodingOrOffset, length);
      }

      if (typeof value === 'string') {
        return fromString(that, value, encodingOrOffset);
      }

      return fromObject(that, value);
    }
    /**
     * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
     * if value is a number.
     * Buffer.from(str[, encoding])
     * Buffer.from(array)
     * Buffer.from(buffer)
     * Buffer.from(arrayBuffer[, byteOffset[, length]])
     **/


    Buffer.from = function (value, encodingOrOffset, length) {
      return from(null, value, encodingOrOffset, length);
    };

    if (Buffer.TYPED_ARRAY_SUPPORT) {
      Buffer.prototype.__proto__ = Uint8Array.prototype;
      Buffer.__proto__ = Uint8Array;

      if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
        Object.defineProperty(Buffer, Symbol.species, {
          value: null,
          configurable: true
        });
      }
    }

    function assertSize(size) {
      if (typeof size !== 'number') {
        throw new TypeError('"size" argument must be a number');
      } else if (size < 0) {
        throw new RangeError('"size" argument must not be negative');
      }
    }

    function alloc(that, size, fill, encoding) {
      assertSize(size);

      if (size <= 0) {
        return createBuffer(that, size);
      }

      if (fill !== undefined) {
        // Only pay attention to encoding if it's a string. This
        // prevents accidentally sending in a number that would
        // be interpretted as a start offset.
        return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
      }

      return createBuffer(that, size);
    }
    /**
     * Creates a new filled Buffer instance.
     * alloc(size[, fill[, encoding]])
     **/


    Buffer.alloc = function (size, fill, encoding) {
      return alloc(null, size, fill, encoding);
    };

    function allocUnsafe(that, size) {
      assertSize(size);
      that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);

      if (!Buffer.TYPED_ARRAY_SUPPORT) {
        for (var i = 0; i < size; ++i) {
          that[i] = 0;
        }
      }

      return that;
    }
    /**
     * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
     * */


    Buffer.allocUnsafe = function (size) {
      return allocUnsafe(null, size);
    };
    /**
     * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
     */


    Buffer.allocUnsafeSlow = function (size) {
      return allocUnsafe(null, size);
    };

    function fromString(that, string, encoding) {
      if (typeof encoding !== 'string' || encoding === '') {
        encoding = 'utf8';
      }

      if (!Buffer.isEncoding(encoding)) {
        throw new TypeError('"encoding" must be a valid string encoding');
      }

      var length = byteLength(string, encoding) | 0;
      that = createBuffer(that, length);
      var actual = that.write(string, encoding);

      if (actual !== length) {
        // Writing a hex string, for example, that contains invalid characters will
        // cause everything after the first invalid character to be ignored. (e.g.
        // 'abxxcd' will be treated as 'ab')
        that = that.slice(0, actual);
      }

      return that;
    }

    function fromArrayLike(that, array) {
      var length = array.length < 0 ? 0 : checked(array.length) | 0;
      that = createBuffer(that, length);

      for (var i = 0; i < length; i += 1) {
        that[i] = array[i] & 255;
      }

      return that;
    }

    function fromArrayBuffer(that, array, byteOffset, length) {
      array.byteLength; // this throws if `array` is not a valid ArrayBuffer

      if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError('\'offset\' is out of bounds');
      }

      if (array.byteLength < byteOffset + (length || 0)) {
        throw new RangeError('\'length\' is out of bounds');
      }

      if (byteOffset === undefined && length === undefined) {
        array = new Uint8Array(array);
      } else if (length === undefined) {
        array = new Uint8Array(array, byteOffset);
      } else {
        array = new Uint8Array(array, byteOffset, length);
      }

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        // Return an augmented `Uint8Array` instance, for best performance
        that = array;
        that.__proto__ = Buffer.prototype;
      } else {
        // Fallback: Return an object instance of the Buffer class
        that = fromArrayLike(that, array);
      }

      return that;
    }

    function fromObject(that, obj) {
      if (Buffer.isBuffer(obj)) {
        var len = checked(obj.length) | 0;
        that = createBuffer(that, len);

        if (that.length === 0) {
          return that;
        }

        obj.copy(that, 0, 0, len);
        return that;
      }

      if (obj) {
        if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {
          if (typeof obj.length !== 'number' || isnan(obj.length)) {
            return createBuffer(that, 0);
          }

          return fromArrayLike(that, obj);
        }

        if (obj.type === 'Buffer' && isArray(obj.data)) {
          return fromArrayLike(that, obj.data);
        }
      }

      throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
    }

    function checked(length) {
      // Note: cannot use `length < kMaxLength()` here because that fails when
      // length is NaN (which is otherwise coerced to zero.)
      if (length >= kMaxLength()) {
        throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
      }

      return length | 0;
    }

    function SlowBuffer(length) {
      if (+length != length) {
        // eslint-disable-line eqeqeq
        length = 0;
      }

      return Buffer.alloc(+length);
    }

    Buffer.isBuffer = function isBuffer(b) {
      return !!(b != null && b._isBuffer);
    };

    Buffer.compare = function compare(a, b) {
      if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
        throw new TypeError('Arguments must be Buffers');
      }

      if (a === b) return 0;
      var x = a.length;
      var y = b.length;

      for (var i = 0, len = Math.min(x, y); i < len; ++i) {
        if (a[i] !== b[i]) {
          x = a[i];
          y = b[i];
          break;
        }
      }

      if (x < y) return -1;
      if (y < x) return 1;
      return 0;
    };

    Buffer.isEncoding = function isEncoding(encoding) {
      switch (String(encoding).toLowerCase()) {
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'latin1':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return true;

        default:
          return false;
      }
    };

    Buffer.concat = function concat(list, length) {
      if (!isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }

      if (list.length === 0) {
        return Buffer.alloc(0);
      }

      var i;

      if (length === undefined) {
        length = 0;

        for (i = 0; i < list.length; ++i) {
          length += list[i].length;
        }
      }

      var buffer = Buffer.allocUnsafe(length);
      var pos = 0;

      for (i = 0; i < list.length; ++i) {
        var buf = list[i];

        if (!Buffer.isBuffer(buf)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        }

        buf.copy(buffer, pos);
        pos += buf.length;
      }

      return buffer;
    };

    function byteLength(string, encoding) {
      if (Buffer.isBuffer(string)) {
        return string.length;
      }

      if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
        return string.byteLength;
      }

      if (typeof string !== 'string') {
        string = '' + string;
      }

      var len = string.length;
      if (len === 0) return 0; // Use a for loop to avoid recursion

      var loweredCase = false;

      for (;;) {
        switch (encoding) {
          case 'ascii':
          case 'latin1':
          case 'binary':
            return len;

          case 'utf8':
          case 'utf-8':
          case undefined:
            return utf8ToBytes(string).length;

          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return len * 2;

          case 'hex':
            return len >>> 1;

          case 'base64':
            return base64ToBytes(string).length;

          default:
            if (loweredCase) return utf8ToBytes(string).length; // assume utf8

            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    }

    Buffer.byteLength = byteLength;

    function slowToString(encoding, start, end) {
      var loweredCase = false; // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
      // property of a typed array.
      // This behaves neither like String nor Uint8Array in that we set start/end
      // to their upper/lower bounds if the value passed is out of range.
      // undefined is handled specially as per ECMA-262 6th Edition,
      // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.

      if (start === undefined || start < 0) {
        start = 0;
      } // Return early if start > this.length. Done here to prevent potential uint32
      // coercion fail below.


      if (start > this.length) {
        return '';
      }

      if (end === undefined || end > this.length) {
        end = this.length;
      }

      if (end <= 0) {
        return '';
      } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.


      end >>>= 0;
      start >>>= 0;

      if (end <= start) {
        return '';
      }

      if (!encoding) encoding = 'utf8';

      while (true) {
        switch (encoding) {
          case 'hex':
            return hexSlice(this, start, end);

          case 'utf8':
          case 'utf-8':
            return utf8Slice(this, start, end);

          case 'ascii':
            return asciiSlice(this, start, end);

          case 'latin1':
          case 'binary':
            return latin1Slice(this, start, end);

          case 'base64':
            return base64Slice(this, start, end);

          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return utf16leSlice(this, start, end);

          default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
            encoding = (encoding + '').toLowerCase();
            loweredCase = true;
        }
      }
    } // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
    // Buffer instances.


    Buffer.prototype._isBuffer = true;

    function swap(b, n, m) {
      var i = b[n];
      b[n] = b[m];
      b[m] = i;
    }

    Buffer.prototype.swap16 = function swap16() {
      var len = this.length;

      if (len % 2 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 16-bits');
      }

      for (var i = 0; i < len; i += 2) {
        swap(this, i, i + 1);
      }

      return this;
    };

    Buffer.prototype.swap32 = function swap32() {
      var len = this.length;

      if (len % 4 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 32-bits');
      }

      for (var i = 0; i < len; i += 4) {
        swap(this, i, i + 3);
        swap(this, i + 1, i + 2);
      }

      return this;
    };

    Buffer.prototype.swap64 = function swap64() {
      var len = this.length;

      if (len % 8 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 64-bits');
      }

      for (var i = 0; i < len; i += 8) {
        swap(this, i, i + 7);
        swap(this, i + 1, i + 6);
        swap(this, i + 2, i + 5);
        swap(this, i + 3, i + 4);
      }

      return this;
    };

    Buffer.prototype.toString = function toString() {
      var length = this.length | 0;
      if (length === 0) return '';
      if (arguments.length === 0) return utf8Slice(this, 0, length);
      return slowToString.apply(this, arguments);
    };

    Buffer.prototype.equals = function equals(b) {
      if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
      if (this === b) return true;
      return Buffer.compare(this, b) === 0;
    };

    Buffer.prototype.inspect = function inspect() {
      var str = '';
      var max = exports.INSPECT_MAX_BYTES;

      if (this.length > 0) {
        str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
        if (this.length > max) str += ' ... ';
      }

      return '<Buffer ' + str + '>';
    };

    Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
      if (!Buffer.isBuffer(target)) {
        throw new TypeError('Argument must be a Buffer');
      }

      if (start === undefined) {
        start = 0;
      }

      if (end === undefined) {
        end = target ? target.length : 0;
      }

      if (thisStart === undefined) {
        thisStart = 0;
      }

      if (thisEnd === undefined) {
        thisEnd = this.length;
      }

      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
        throw new RangeError('out of range index');
      }

      if (thisStart >= thisEnd && start >= end) {
        return 0;
      }

      if (thisStart >= thisEnd) {
        return -1;
      }

      if (start >= end) {
        return 1;
      }

      start >>>= 0;
      end >>>= 0;
      thisStart >>>= 0;
      thisEnd >>>= 0;
      if (this === target) return 0;
      var x = thisEnd - thisStart;
      var y = end - start;
      var len = Math.min(x, y);
      var thisCopy = this.slice(thisStart, thisEnd);
      var targetCopy = target.slice(start, end);

      for (var i = 0; i < len; ++i) {
        if (thisCopy[i] !== targetCopy[i]) {
          x = thisCopy[i];
          y = targetCopy[i];
          break;
        }
      }

      if (x < y) return -1;
      if (y < x) return 1;
      return 0;
    }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
    // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
    //
    // Arguments:
    // - buffer - a Buffer to search
    // - val - a string, Buffer, or number
    // - byteOffset - an index into `buffer`; will be clamped to an int32
    // - encoding - an optional encoding, relevant is val is a string
    // - dir - true for indexOf, false for lastIndexOf


    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
      // Empty buffer means no match
      if (buffer.length === 0) return -1; // Normalize byteOffset

      if (typeof byteOffset === 'string') {
        encoding = byteOffset;
        byteOffset = 0;
      } else if (byteOffset > 0x7fffffff) {
        byteOffset = 0x7fffffff;
      } else if (byteOffset < -0x80000000) {
        byteOffset = -0x80000000;
      }

      byteOffset = +byteOffset; // Coerce to Number.

      if (isNaN(byteOffset)) {
        // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
        byteOffset = dir ? 0 : buffer.length - 1;
      } // Normalize byteOffset: negative offsets start from the end of the buffer


      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

      if (byteOffset >= buffer.length) {
        if (dir) return -1;else byteOffset = buffer.length - 1;
      } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;else return -1;
      } // Normalize val


      if (typeof val === 'string') {
        val = Buffer.from(val, encoding);
      } // Finally, search either indexOf (if dir is true) or lastIndexOf


      if (Buffer.isBuffer(val)) {
        // Special case: looking for empty string/buffer always fails
        if (val.length === 0) {
          return -1;
        }

        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
      } else if (typeof val === 'number') {
        val = val & 0xFF; // Search for a byte value [0-255]

        if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
          if (dir) {
            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
          } else {
            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
          }
        }

        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
      }

      throw new TypeError('val must be string, number or Buffer');
    }

    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
      var indexSize = 1;
      var arrLength = arr.length;
      var valLength = val.length;

      if (encoding !== undefined) {
        encoding = String(encoding).toLowerCase();

        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
          if (arr.length < 2 || val.length < 2) {
            return -1;
          }

          indexSize = 2;
          arrLength /= 2;
          valLength /= 2;
          byteOffset /= 2;
        }
      }

      function read(buf, i) {
        if (indexSize === 1) {
          return buf[i];
        } else {
          return buf.readUInt16BE(i * indexSize);
        }
      }

      var i;

      if (dir) {
        var foundIndex = -1;

        for (i = byteOffset; i < arrLength; i++) {
          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
            if (foundIndex === -1) foundIndex = i;
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
          } else {
            if (foundIndex !== -1) i -= i - foundIndex;
            foundIndex = -1;
          }
        }
      } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

        for (i = byteOffset; i >= 0; i--) {
          var found = true;

          for (var j = 0; j < valLength; j++) {
            if (read(arr, i + j) !== read(val, j)) {
              found = false;
              break;
            }
          }

          if (found) return i;
        }
      }

      return -1;
    }

    Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
      return this.indexOf(val, byteOffset, encoding) !== -1;
    };

    Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
    };

    Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
    };

    function hexWrite(buf, string, offset, length) {
      offset = Number(offset) || 0;
      var remaining = buf.length - offset;

      if (!length) {
        length = remaining;
      } else {
        length = Number(length);

        if (length > remaining) {
          length = remaining;
        }
      } // must be an even number of digits


      var strLen = string.length;
      if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

      if (length > strLen / 2) {
        length = strLen / 2;
      }

      for (var i = 0; i < length; ++i) {
        var parsed = parseInt(string.substr(i * 2, 2), 16);
        if (isNaN(parsed)) return i;
        buf[offset + i] = parsed;
      }

      return i;
    }

    function utf8Write(buf, string, offset, length) {
      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
    }

    function asciiWrite(buf, string, offset, length) {
      return blitBuffer(asciiToBytes(string), buf, offset, length);
    }

    function latin1Write(buf, string, offset, length) {
      return asciiWrite(buf, string, offset, length);
    }

    function base64Write(buf, string, offset, length) {
      return blitBuffer(base64ToBytes(string), buf, offset, length);
    }

    function ucs2Write(buf, string, offset, length) {
      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
    }

    Buffer.prototype.write = function write(string, offset, length, encoding) {
      // Buffer#write(string)
      if (offset === undefined) {
        encoding = 'utf8';
        length = this.length;
        offset = 0; // Buffer#write(string, encoding)
      } else if (length === undefined && typeof offset === 'string') {
        encoding = offset;
        length = this.length;
        offset = 0; // Buffer#write(string, offset[, length][, encoding])
      } else if (isFinite(offset)) {
        offset = offset | 0;

        if (isFinite(length)) {
          length = length | 0;
          if (encoding === undefined) encoding = 'utf8';
        } else {
          encoding = length;
          length = undefined;
        } // legacy write(string, encoding, offset, length) - remove in v0.13

      } else {
        throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
      }

      var remaining = this.length - offset;
      if (length === undefined || length > remaining) length = remaining;

      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
        throw new RangeError('Attempt to write outside buffer bounds');
      }

      if (!encoding) encoding = 'utf8';
      var loweredCase = false;

      for (;;) {
        switch (encoding) {
          case 'hex':
            return hexWrite(this, string, offset, length);

          case 'utf8':
          case 'utf-8':
            return utf8Write(this, string, offset, length);

          case 'ascii':
            return asciiWrite(this, string, offset, length);

          case 'latin1':
          case 'binary':
            return latin1Write(this, string, offset, length);

          case 'base64':
            // Warning: maxLength not taken into account in base64Write
            return base64Write(this, string, offset, length);

          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return ucs2Write(this, string, offset, length);

          default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    };

    Buffer.prototype.toJSON = function toJSON() {
      return {
        type: 'Buffer',
        data: Array.prototype.slice.call(this._arr || this, 0)
      };
    };

    function base64Slice(buf, start, end) {
      if (start === 0 && end === buf.length) {
        return base64.fromByteArray(buf);
      } else {
        return base64.fromByteArray(buf.slice(start, end));
      }
    }

    function utf8Slice(buf, start, end) {
      end = Math.min(buf.length, end);
      var res = [];
      var i = start;

      while (i < end) {
        var firstByte = buf[i];
        var codePoint = null;
        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

        if (i + bytesPerSequence <= end) {
          var secondByte, thirdByte, fourthByte, tempCodePoint;

          switch (bytesPerSequence) {
            case 1:
              if (firstByte < 0x80) {
                codePoint = firstByte;
              }

              break;

            case 2:
              secondByte = buf[i + 1];

              if ((secondByte & 0xC0) === 0x80) {
                tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

                if (tempCodePoint > 0x7F) {
                  codePoint = tempCodePoint;
                }
              }

              break;

            case 3:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];

              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

                if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                  codePoint = tempCodePoint;
                }
              }

              break;

            case 4:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              fourthByte = buf[i + 3];

              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

                if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                  codePoint = tempCodePoint;
                }
              }

          }
        }

        if (codePoint === null) {
          // we did not generate a valid codePoint so insert a
          // replacement char (U+FFFD) and advance only 1 byte
          codePoint = 0xFFFD;
          bytesPerSequence = 1;
        } else if (codePoint > 0xFFFF) {
          // encode to utf16 (surrogate pair dance)
          codePoint -= 0x10000;
          res.push(codePoint >>> 10 & 0x3FF | 0xD800);
          codePoint = 0xDC00 | codePoint & 0x3FF;
        }

        res.push(codePoint);
        i += bytesPerSequence;
      }

      return decodeCodePointsArray(res);
    } // Based on http://stackoverflow.com/a/22747272/680742, the browser with
    // the lowest limit is Chrome, with 0x10000 args.
    // We go 1 magnitude less, for safety


    var MAX_ARGUMENTS_LENGTH = 0x1000;

    function decodeCodePointsArray(codePoints) {
      var len = codePoints.length;

      if (len <= MAX_ARGUMENTS_LENGTH) {
        return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
      } // Decode in chunks to avoid "call stack size exceeded".


      var res = '';
      var i = 0;

      while (i < len) {
        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
      }

      return res;
    }

    function asciiSlice(buf, start, end) {
      var ret = '';
      end = Math.min(buf.length, end);

      for (var i = start; i < end; ++i) {
        ret += String.fromCharCode(buf[i] & 0x7F);
      }

      return ret;
    }

    function latin1Slice(buf, start, end) {
      var ret = '';
      end = Math.min(buf.length, end);

      for (var i = start; i < end; ++i) {
        ret += String.fromCharCode(buf[i]);
      }

      return ret;
    }

    function hexSlice(buf, start, end) {
      var len = buf.length;
      if (!start || start < 0) start = 0;
      if (!end || end < 0 || end > len) end = len;
      var out = '';

      for (var i = start; i < end; ++i) {
        out += toHex(buf[i]);
      }

      return out;
    }

    function utf16leSlice(buf, start, end) {
      var bytes = buf.slice(start, end);
      var res = '';

      for (var i = 0; i < bytes.length; i += 2) {
        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
      }

      return res;
    }

    Buffer.prototype.slice = function slice(start, end) {
      var len = this.length;
      start = ~~start;
      end = end === undefined ? len : ~~end;

      if (start < 0) {
        start += len;
        if (start < 0) start = 0;
      } else if (start > len) {
        start = len;
      }

      if (end < 0) {
        end += len;
        if (end < 0) end = 0;
      } else if (end > len) {
        end = len;
      }

      if (end < start) end = start;
      var newBuf;

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        newBuf = this.subarray(start, end);
        newBuf.__proto__ = Buffer.prototype;
      } else {
        var sliceLen = end - start;
        newBuf = new Buffer(sliceLen, undefined);

        for (var i = 0; i < sliceLen; ++i) {
          newBuf[i] = this[i + start];
        }
      }

      return newBuf;
    };
    /*
     * Need to make sure that buffer isn't trying to write out of bounds.
     */


    function checkOffset(offset, ext, length) {
      if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
      if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
    }

    Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) checkOffset(offset, byteLength, this.length);
      var val = this[offset];
      var mul = 1;
      var i = 0;

      while (++i < byteLength && (mul *= 0x100)) {
        val += this[offset + i] * mul;
      }

      return val;
    };

    Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
      offset = offset | 0;
      byteLength = byteLength | 0;

      if (!noAssert) {
        checkOffset(offset, byteLength, this.length);
      }

      var val = this[offset + --byteLength];
      var mul = 1;

      while (byteLength > 0 && (mul *= 0x100)) {
        val += this[offset + --byteLength] * mul;
      }

      return val;
    };

    Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 1, this.length);
      return this[offset];
    };

    Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] | this[offset + 1] << 8;
    };

    Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] << 8 | this[offset + 1];
    };

    Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);
      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
    };

    Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
    };

    Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) checkOffset(offset, byteLength, this.length);
      var val = this[offset];
      var mul = 1;
      var i = 0;

      while (++i < byteLength && (mul *= 0x100)) {
        val += this[offset + i] * mul;
      }

      mul *= 0x80;
      if (val >= mul) val -= Math.pow(2, 8 * byteLength);
      return val;
    };

    Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) checkOffset(offset, byteLength, this.length);
      var i = byteLength;
      var mul = 1;
      var val = this[offset + --i];

      while (i > 0 && (mul *= 0x100)) {
        val += this[offset + --i] * mul;
      }

      mul *= 0x80;
      if (val >= mul) val -= Math.pow(2, 8 * byteLength);
      return val;
    };

    Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 1, this.length);
      if (!(this[offset] & 0x80)) return this[offset];
      return (0xff - this[offset] + 1) * -1;
    };

    Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 2, this.length);
      var val = this[offset] | this[offset + 1] << 8;
      return val & 0x8000 ? val | 0xFFFF0000 : val;
    };

    Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 2, this.length);
      var val = this[offset + 1] | this[offset] << 8;
      return val & 0x8000 ? val | 0xFFFF0000 : val;
    };

    Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
    };

    Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
    };

    Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, true, 23, 4);
    };

    Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, false, 23, 4);
    };

    Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, true, 52, 8);
    };

    Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
      if (!noAssert) checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, false, 52, 8);
    };

    function checkInt(buf, value, offset, ext, max, min) {
      if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
      if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
      if (offset + ext > buf.length) throw new RangeError('Index out of range');
    }

    Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
      value = +value;
      offset = offset | 0;
      byteLength = byteLength | 0;

      if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        checkInt(this, value, offset, byteLength, maxBytes, 0);
      }

      var mul = 1;
      var i = 0;
      this[offset] = value & 0xFF;

      while (++i < byteLength && (mul *= 0x100)) {
        this[offset + i] = value / mul & 0xFF;
      }

      return offset + byteLength;
    };

    Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
      value = +value;
      offset = offset | 0;
      byteLength = byteLength | 0;

      if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        checkInt(this, value, offset, byteLength, maxBytes, 0);
      }

      var i = byteLength - 1;
      var mul = 1;
      this[offset + i] = value & 0xFF;

      while (--i >= 0 && (mul *= 0x100)) {
        this[offset + i] = value / mul & 0xFF;
      }

      return offset + byteLength;
    };

    Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
      this[offset] = value & 0xff;
      return offset + 1;
    };

    function objectWriteUInt16(buf, value, offset, littleEndian) {
      if (value < 0) value = 0xffff + value + 1;

      for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
        buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;
      }
    }

    Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = value & 0xff;
        this[offset + 1] = value >>> 8;
      } else {
        objectWriteUInt16(this, value, offset, true);
      }

      return offset + 2;
    };

    Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = value >>> 8;
        this[offset + 1] = value & 0xff;
      } else {
        objectWriteUInt16(this, value, offset, false);
      }

      return offset + 2;
    };

    function objectWriteUInt32(buf, value, offset, littleEndian) {
      if (value < 0) value = 0xffffffff + value + 1;

      for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
        buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;
      }
    }

    Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset + 3] = value >>> 24;
        this[offset + 2] = value >>> 16;
        this[offset + 1] = value >>> 8;
        this[offset] = value & 0xff;
      } else {
        objectWriteUInt32(this, value, offset, true);
      }

      return offset + 4;
    };

    Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = value >>> 24;
        this[offset + 1] = value >>> 16;
        this[offset + 2] = value >>> 8;
        this[offset + 3] = value & 0xff;
      } else {
        objectWriteUInt32(this, value, offset, false);
      }

      return offset + 4;
    };

    Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
      value = +value;
      offset = offset | 0;

      if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);
        checkInt(this, value, offset, byteLength, limit - 1, -limit);
      }

      var i = 0;
      var mul = 1;
      var sub = 0;
      this[offset] = value & 0xFF;

      while (++i < byteLength && (mul *= 0x100)) {
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
          sub = 1;
        }

        this[offset + i] = (value / mul >> 0) - sub & 0xFF;
      }

      return offset + byteLength;
    };

    Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
      value = +value;
      offset = offset | 0;

      if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);
        checkInt(this, value, offset, byteLength, limit - 1, -limit);
      }

      var i = byteLength - 1;
      var mul = 1;
      var sub = 0;
      this[offset + i] = value & 0xFF;

      while (--i >= 0 && (mul *= 0x100)) {
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
          sub = 1;
        }

        this[offset + i] = (value / mul >> 0) - sub & 0xFF;
      }

      return offset + byteLength;
    };

    Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
      if (value < 0) value = 0xff + value + 1;
      this[offset] = value & 0xff;
      return offset + 1;
    };

    Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = value & 0xff;
        this[offset + 1] = value >>> 8;
      } else {
        objectWriteUInt16(this, value, offset, true);
      }

      return offset + 2;
    };

    Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = value >>> 8;
        this[offset + 1] = value & 0xff;
      } else {
        objectWriteUInt16(this, value, offset, false);
      }

      return offset + 2;
    };

    Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = value & 0xff;
        this[offset + 1] = value >>> 8;
        this[offset + 2] = value >>> 16;
        this[offset + 3] = value >>> 24;
      } else {
        objectWriteUInt32(this, value, offset, true);
      }

      return offset + 4;
    };

    Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
      if (value < 0) value = 0xffffffff + value + 1;

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = value >>> 24;
        this[offset + 1] = value >>> 16;
        this[offset + 2] = value >>> 8;
        this[offset + 3] = value & 0xff;
      } else {
        objectWriteUInt32(this, value, offset, false);
      }

      return offset + 4;
    };

    function checkIEEE754(buf, value, offset, ext, max, min) {
      if (offset + ext > buf.length) throw new RangeError('Index out of range');
      if (offset < 0) throw new RangeError('Index out of range');
    }

    function writeFloat(buf, value, offset, littleEndian, noAssert) {
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
      }

      ieee754.write(buf, value, offset, littleEndian, 23, 4);
      return offset + 4;
    }

    Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
      return writeFloat(this, value, offset, true, noAssert);
    };

    Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
      return writeFloat(this, value, offset, false, noAssert);
    };

    function writeDouble(buf, value, offset, littleEndian, noAssert) {
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
      }

      ieee754.write(buf, value, offset, littleEndian, 52, 8);
      return offset + 8;
    }

    Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
      return writeDouble(this, value, offset, true, noAssert);
    };

    Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
      return writeDouble(this, value, offset, false, noAssert);
    }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)


    Buffer.prototype.copy = function copy(target, targetStart, start, end) {
      if (!start) start = 0;
      if (!end && end !== 0) end = this.length;
      if (targetStart >= target.length) targetStart = target.length;
      if (!targetStart) targetStart = 0;
      if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done

      if (end === start) return 0;
      if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions

      if (targetStart < 0) {
        throw new RangeError('targetStart out of bounds');
      }

      if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');
      if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?

      if (end > this.length) end = this.length;

      if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
      }

      var len = end - start;
      var i;

      if (this === target && start < targetStart && targetStart < end) {
        // descending copy from end
        for (i = len - 1; i >= 0; --i) {
          target[i + targetStart] = this[i + start];
        }
      } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
        // ascending copy from start
        for (i = 0; i < len; ++i) {
          target[i + targetStart] = this[i + start];
        }
      } else {
        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
      }

      return len;
    }; // Usage:
    //    buffer.fill(number[, offset[, end]])
    //    buffer.fill(buffer[, offset[, end]])
    //    buffer.fill(string[, offset[, end]][, encoding])


    Buffer.prototype.fill = function fill(val, start, end, encoding) {
      // Handle string cases:
      if (typeof val === 'string') {
        if (typeof start === 'string') {
          encoding = start;
          start = 0;
          end = this.length;
        } else if (typeof end === 'string') {
          encoding = end;
          end = this.length;
        }

        if (val.length === 1) {
          var code = val.charCodeAt(0);

          if (code < 256) {
            val = code;
          }
        }

        if (encoding !== undefined && typeof encoding !== 'string') {
          throw new TypeError('encoding must be a string');
        }

        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
          throw new TypeError('Unknown encoding: ' + encoding);
        }
      } else if (typeof val === 'number') {
        val = val & 255;
      } // Invalid ranges are not set to a default, so can range check early.


      if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError('Out of range index');
      }

      if (end <= start) {
        return this;
      }

      start = start >>> 0;
      end = end === undefined ? this.length : end >>> 0;
      if (!val) val = 0;
      var i;

      if (typeof val === 'number') {
        for (i = start; i < end; ++i) {
          this[i] = val;
        }
      } else {
        var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
        var len = bytes.length;

        for (i = 0; i < end - start; ++i) {
          this[i + start] = bytes[i % len];
        }
      }

      return this;
    }; // HELPER FUNCTIONS
    // ================


    var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

    function base64clean(str) {
      // Node strips out invalid characters like \n and \t from the string, base64-js does not
      str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''

      if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not

      while (str.length % 4 !== 0) {
        str = str + '=';
      }

      return str;
    }

    function stringtrim(str) {
      if (str.trim) return str.trim();
      return str.replace(/^\s+|\s+$/g, '');
    }

    function toHex(n) {
      if (n < 16) return '0' + n.toString(16);
      return n.toString(16);
    }

    function utf8ToBytes(string, units) {
      units = units || Infinity;
      var codePoint;
      var length = string.length;
      var leadSurrogate = null;
      var bytes = [];

      for (var i = 0; i < length; ++i) {
        codePoint = string.charCodeAt(i); // is surrogate component

        if (codePoint > 0xD7FF && codePoint < 0xE000) {
          // last char was a lead
          if (!leadSurrogate) {
            // no lead yet
            if (codePoint > 0xDBFF) {
              // unexpected trail
              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
              continue;
            } else if (i + 1 === length) {
              // unpaired lead
              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
              continue;
            } // valid lead


            leadSurrogate = codePoint;
            continue;
          } // 2 leads in a row


          if (codePoint < 0xDC00) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            leadSurrogate = codePoint;
            continue;
          } // valid surrogate pair


          codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
        } else if (leadSurrogate) {
          // valid bmp char, but last char was a lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        }

        leadSurrogate = null; // encode utf8

        if (codePoint < 0x80) {
          if ((units -= 1) < 0) break;
          bytes.push(codePoint);
        } else if (codePoint < 0x800) {
          if ((units -= 2) < 0) break;
          bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
        } else if (codePoint < 0x10000) {
          if ((units -= 3) < 0) break;
          bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
        } else if (codePoint < 0x110000) {
          if ((units -= 4) < 0) break;
          bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
        } else {
          throw new Error('Invalid code point');
        }
      }

      return bytes;
    }

    function asciiToBytes(str) {
      var byteArray = [];

      for (var i = 0; i < str.length; ++i) {
        // Node's code seems to be doing this and not & 0x7F..
        byteArray.push(str.charCodeAt(i) & 0xFF);
      }

      return byteArray;
    }

    function utf16leToBytes(str, units) {
      var c, hi, lo;
      var byteArray = [];

      for (var i = 0; i < str.length; ++i) {
        if ((units -= 2) < 0) break;
        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
      }

      return byteArray;
    }

    function base64ToBytes(str) {
      return base64.toByteArray(base64clean(str));
    }

    function blitBuffer(src, dst, offset, length) {
      for (var i = 0; i < length; ++i) {
        if (i + offset >= dst.length || i >= src.length) break;
        dst[i + offset] = src[i];
      }

      return i;
    }

    function isnan(val) {
      return val !== val; // eslint-disable-line no-self-compare
    }
    /***/

  },

  /***/
  "./node_modules/ieee754/index.js":
  /*!***************************************!*\
    !*** ./node_modules/ieee754/index.js ***!
    \***************************************/

  /*! no static exports found */

  /***/
  function node_modulesIeee754IndexJs(module, exports) {
    exports.read = function (buffer, offset, isLE, mLen, nBytes) {
      var e, m;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var nBits = -7;
      var i = isLE ? nBytes - 1 : 0;
      var d = isLE ? -1 : 1;
      var s = buffer[offset + i];
      i += d;
      e = s & (1 << -nBits) - 1;
      s >>= -nBits;
      nBits += eLen;

      for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

      m = e & (1 << -nBits) - 1;
      e >>= -nBits;
      nBits += mLen;

      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

      if (e === 0) {
        e = 1 - eBias;
      } else if (e === eMax) {
        return m ? NaN : (s ? -1 : 1) * Infinity;
      } else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
      }

      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
    };

    exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
      var e, m, c;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
      var i = isLE ? 0 : nBytes - 1;
      var d = isLE ? 1 : -1;
      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
      value = Math.abs(value);

      if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
      } else {
        e = Math.floor(Math.log(value) / Math.LN2);

        if (value * (c = Math.pow(2, -e)) < 1) {
          e--;
          c *= 2;
        }

        if (e + eBias >= 1) {
          value += rt / c;
        } else {
          value += rt * Math.pow(2, 1 - eBias);
        }

        if (value * c >= 2) {
          e++;
          c /= 2;
        }

        if (e + eBias >= eMax) {
          m = 0;
          e = eMax;
        } else if (e + eBias >= 1) {
          m = (value * c - 1) * Math.pow(2, mLen);
          e = e + eBias;
        } else {
          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
          e = 0;
        }
      }

      for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

      e = e << mLen | m;
      eLen += mLen;

      for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

      buffer[offset + i - d] |= s * 128;
    };
    /***/

  },

  /***/
  "./node_modules/isarray/index.js":
  /*!***************************************!*\
    !*** ./node_modules/isarray/index.js ***!
    \***************************************/

  /*! no static exports found */

  /***/
  function node_modulesIsarrayIndexJs(module, exports) {
    var toString = {}.toString;

    module.exports = Array.isArray || function (arr) {
      return toString.call(arr) == '[object Array]';
    };
    /***/

  },

  /***/
  "./node_modules/jmespath/jmespath.js":
  /*!*******************************************!*\
    !*** ./node_modules/jmespath/jmespath.js ***!
    \*******************************************/

  /*! no static exports found */

  /***/
  function node_modulesJmespathJmespathJs(module, exports, __webpack_require__) {
    (function (exports) {
      "use strict";

      function isArray(obj) {
        if (obj !== null) {
          return Object.prototype.toString.call(obj) === "[object Array]";
        } else {
          return false;
        }
      }

      function isObject(obj) {
        if (obj !== null) {
          return Object.prototype.toString.call(obj) === "[object Object]";
        } else {
          return false;
        }
      }

      function strictDeepEqual(first, second) {
        // Check the scalar case first.
        if (first === second) {
          return true;
        } // Check if they are the same type.


        var firstType = Object.prototype.toString.call(first);

        if (firstType !== Object.prototype.toString.call(second)) {
          return false;
        } // We know that first and second have the same type so we can just check the
        // first type from now on.


        if (isArray(first) === true) {
          // Short circuit if they're not the same length;
          if (first.length !== second.length) {
            return false;
          }

          for (var i = 0; i < first.length; i++) {
            if (strictDeepEqual(first[i], second[i]) === false) {
              return false;
            }
          }

          return true;
        }

        if (isObject(first) === true) {
          // An object is equal if it has the same key/value pairs.
          var keysSeen = {};

          for (var key in first) {
            if (hasOwnProperty.call(first, key)) {
              if (strictDeepEqual(first[key], second[key]) === false) {
                return false;
              }

              keysSeen[key] = true;
            }
          } // Now check that there aren't any keys in second that weren't
          // in first.


          for (var key2 in second) {
            if (hasOwnProperty.call(second, key2)) {
              if (keysSeen[key2] !== true) {
                return false;
              }
            }
          }

          return true;
        }

        return false;
      }

      function isFalse(obj) {
        // From the spec:
        // A false value corresponds to the following values:
        // Empty list
        // Empty object
        // Empty string
        // False boolean
        // null value
        // First check the scalar values.
        if (obj === "" || obj === false || obj === null) {
          return true;
        } else if (isArray(obj) && obj.length === 0) {
          // Check for an empty array.
          return true;
        } else if (isObject(obj)) {
          // Check for an empty object.
          for (var key in obj) {
            // If there are any keys, then
            // the object is not empty so the object
            // is not false.
            if (obj.hasOwnProperty(key)) {
              return false;
            }
          }

          return true;
        } else {
          return false;
        }
      }

      function objValues(obj) {
        var keys = Object.keys(obj);
        var values = [];

        for (var i = 0; i < keys.length; i++) {
          values.push(obj[keys[i]]);
        }

        return values;
      }

      function merge(a, b) {
        var merged = {};

        for (var key in a) {
          merged[key] = a[key];
        }

        for (var key2 in b) {
          merged[key2] = b[key2];
        }

        return merged;
      }

      var trimLeft;

      if (typeof String.prototype.trimLeft === "function") {
        trimLeft = function trimLeft(str) {
          return str.trimLeft();
        };
      } else {
        trimLeft = function trimLeft(str) {
          return str.match(/^\s*(.*)/)[1];
        };
      } // Type constants used to define functions.


      var TYPE_NUMBER = 0;
      var TYPE_ANY = 1;
      var TYPE_STRING = 2;
      var TYPE_ARRAY = 3;
      var TYPE_OBJECT = 4;
      var TYPE_BOOLEAN = 5;
      var TYPE_EXPREF = 6;
      var TYPE_NULL = 7;
      var TYPE_ARRAY_NUMBER = 8;
      var TYPE_ARRAY_STRING = 9;
      var TOK_EOF = "EOF";
      var TOK_UNQUOTEDIDENTIFIER = "UnquotedIdentifier";
      var TOK_QUOTEDIDENTIFIER = "QuotedIdentifier";
      var TOK_RBRACKET = "Rbracket";
      var TOK_RPAREN = "Rparen";
      var TOK_COMMA = "Comma";
      var TOK_COLON = "Colon";
      var TOK_RBRACE = "Rbrace";
      var TOK_NUMBER = "Number";
      var TOK_CURRENT = "Current";
      var TOK_EXPREF = "Expref";
      var TOK_PIPE = "Pipe";
      var TOK_OR = "Or";
      var TOK_AND = "And";
      var TOK_EQ = "EQ";
      var TOK_GT = "GT";
      var TOK_LT = "LT";
      var TOK_GTE = "GTE";
      var TOK_LTE = "LTE";
      var TOK_NE = "NE";
      var TOK_FLATTEN = "Flatten";
      var TOK_STAR = "Star";
      var TOK_FILTER = "Filter";
      var TOK_DOT = "Dot";
      var TOK_NOT = "Not";
      var TOK_LBRACE = "Lbrace";
      var TOK_LBRACKET = "Lbracket";
      var TOK_LPAREN = "Lparen";
      var TOK_LITERAL = "Literal"; // The "&", "[", "<", ">" tokens
      // are not in basicToken because
      // there are two token variants
      // ("&&", "[?", "<=", ">=").  This is specially handled
      // below.

      var basicTokens = {
        ".": TOK_DOT,
        "*": TOK_STAR,
        ",": TOK_COMMA,
        ":": TOK_COLON,
        "{": TOK_LBRACE,
        "}": TOK_RBRACE,
        "]": TOK_RBRACKET,
        "(": TOK_LPAREN,
        ")": TOK_RPAREN,
        "@": TOK_CURRENT
      };
      var operatorStartToken = {
        "<": true,
        ">": true,
        "=": true,
        "!": true
      };
      var skipChars = {
        " ": true,
        "\t": true,
        "\n": true
      };

      function isAlpha(ch) {
        return ch >= "a" && ch <= "z" || ch >= "A" && ch <= "Z" || ch === "_";
      }

      function isNum(ch) {
        return ch >= "0" && ch <= "9" || ch === "-";
      }

      function isAlphaNum(ch) {
        return ch >= "a" && ch <= "z" || ch >= "A" && ch <= "Z" || ch >= "0" && ch <= "9" || ch === "_";
      }

      function Lexer() {}

      Lexer.prototype = {
        tokenize: function tokenize(stream) {
          var tokens = [];
          this._current = 0;
          var start;
          var identifier;
          var token;

          while (this._current < stream.length) {
            if (isAlpha(stream[this._current])) {
              start = this._current;
              identifier = this._consumeUnquotedIdentifier(stream);
              tokens.push({
                type: TOK_UNQUOTEDIDENTIFIER,
                value: identifier,
                start: start
              });
            } else if (basicTokens[stream[this._current]] !== undefined) {
              tokens.push({
                type: basicTokens[stream[this._current]],
                value: stream[this._current],
                start: this._current
              });
              this._current++;
            } else if (isNum(stream[this._current])) {
              token = this._consumeNumber(stream);
              tokens.push(token);
            } else if (stream[this._current] === "[") {
              // No need to increment this._current.  This happens
              // in _consumeLBracket
              token = this._consumeLBracket(stream);
              tokens.push(token);
            } else if (stream[this._current] === "\"") {
              start = this._current;
              identifier = this._consumeQuotedIdentifier(stream);
              tokens.push({
                type: TOK_QUOTEDIDENTIFIER,
                value: identifier,
                start: start
              });
            } else if (stream[this._current] === "'") {
              start = this._current;
              identifier = this._consumeRawStringLiteral(stream);
              tokens.push({
                type: TOK_LITERAL,
                value: identifier,
                start: start
              });
            } else if (stream[this._current] === "`") {
              start = this._current;

              var literal = this._consumeLiteral(stream);

              tokens.push({
                type: TOK_LITERAL,
                value: literal,
                start: start
              });
            } else if (operatorStartToken[stream[this._current]] !== undefined) {
              tokens.push(this._consumeOperator(stream));
            } else if (skipChars[stream[this._current]] !== undefined) {
              // Ignore whitespace.
              this._current++;
            } else if (stream[this._current] === "&") {
              start = this._current;
              this._current++;

              if (stream[this._current] === "&") {
                this._current++;
                tokens.push({
                  type: TOK_AND,
                  value: "&&",
                  start: start
                });
              } else {
                tokens.push({
                  type: TOK_EXPREF,
                  value: "&",
                  start: start
                });
              }
            } else if (stream[this._current] === "|") {
              start = this._current;
              this._current++;

              if (stream[this._current] === "|") {
                this._current++;
                tokens.push({
                  type: TOK_OR,
                  value: "||",
                  start: start
                });
              } else {
                tokens.push({
                  type: TOK_PIPE,
                  value: "|",
                  start: start
                });
              }
            } else {
              var error = new Error("Unknown character:" + stream[this._current]);
              error.name = "LexerError";
              throw error;
            }
          }

          return tokens;
        },
        _consumeUnquotedIdentifier: function _consumeUnquotedIdentifier(stream) {
          var start = this._current;
          this._current++;

          while (this._current < stream.length && isAlphaNum(stream[this._current])) {
            this._current++;
          }

          return stream.slice(start, this._current);
        },
        _consumeQuotedIdentifier: function _consumeQuotedIdentifier(stream) {
          var start = this._current;
          this._current++;
          var maxLength = stream.length;

          while (stream[this._current] !== "\"" && this._current < maxLength) {
            // You can escape a double quote and you can escape an escape.
            var current = this._current;

            if (stream[current] === "\\" && (stream[current + 1] === "\\" || stream[current + 1] === "\"")) {
              current += 2;
            } else {
              current++;
            }

            this._current = current;
          }

          this._current++;
          return JSON.parse(stream.slice(start, this._current));
        },
        _consumeRawStringLiteral: function _consumeRawStringLiteral(stream) {
          var start = this._current;
          this._current++;
          var maxLength = stream.length;

          while (stream[this._current] !== "'" && this._current < maxLength) {
            // You can escape a single quote and you can escape an escape.
            var current = this._current;

            if (stream[current] === "\\" && (stream[current + 1] === "\\" || stream[current + 1] === "'")) {
              current += 2;
            } else {
              current++;
            }

            this._current = current;
          }

          this._current++;
          var literal = stream.slice(start + 1, this._current - 1);
          return literal.replace("\\'", "'");
        },
        _consumeNumber: function _consumeNumber(stream) {
          var start = this._current;
          this._current++;
          var maxLength = stream.length;

          while (isNum(stream[this._current]) && this._current < maxLength) {
            this._current++;
          }

          var value = parseInt(stream.slice(start, this._current));
          return {
            type: TOK_NUMBER,
            value: value,
            start: start
          };
        },
        _consumeLBracket: function _consumeLBracket(stream) {
          var start = this._current;
          this._current++;

          if (stream[this._current] === "?") {
            this._current++;
            return {
              type: TOK_FILTER,
              value: "[?",
              start: start
            };
          } else if (stream[this._current] === "]") {
            this._current++;
            return {
              type: TOK_FLATTEN,
              value: "[]",
              start: start
            };
          } else {
            return {
              type: TOK_LBRACKET,
              value: "[",
              start: start
            };
          }
        },
        _consumeOperator: function _consumeOperator(stream) {
          var start = this._current;
          var startingChar = stream[start];
          this._current++;

          if (startingChar === "!") {
            if (stream[this._current] === "=") {
              this._current++;
              return {
                type: TOK_NE,
                value: "!=",
                start: start
              };
            } else {
              return {
                type: TOK_NOT,
                value: "!",
                start: start
              };
            }
          } else if (startingChar === "<") {
            if (stream[this._current] === "=") {
              this._current++;
              return {
                type: TOK_LTE,
                value: "<=",
                start: start
              };
            } else {
              return {
                type: TOK_LT,
                value: "<",
                start: start
              };
            }
          } else if (startingChar === ">") {
            if (stream[this._current] === "=") {
              this._current++;
              return {
                type: TOK_GTE,
                value: ">=",
                start: start
              };
            } else {
              return {
                type: TOK_GT,
                value: ">",
                start: start
              };
            }
          } else if (startingChar === "=") {
            if (stream[this._current] === "=") {
              this._current++;
              return {
                type: TOK_EQ,
                value: "==",
                start: start
              };
            }
          }
        },
        _consumeLiteral: function _consumeLiteral(stream) {
          this._current++;
          var start = this._current;
          var maxLength = stream.length;
          var literal;

          while (stream[this._current] !== "`" && this._current < maxLength) {
            // You can escape a literal char or you can escape the escape.
            var current = this._current;

            if (stream[current] === "\\" && (stream[current + 1] === "\\" || stream[current + 1] === "`")) {
              current += 2;
            } else {
              current++;
            }

            this._current = current;
          }

          var literalString = trimLeft(stream.slice(start, this._current));
          literalString = literalString.replace("\\`", "`");

          if (this._looksLikeJSON(literalString)) {
            literal = JSON.parse(literalString);
          } else {
            // Try to JSON parse it as "<literal>"
            literal = JSON.parse("\"" + literalString + "\"");
          } // +1 gets us to the ending "`", +1 to move on to the next char.


          this._current++;
          return literal;
        },
        _looksLikeJSON: function _looksLikeJSON(literalString) {
          var startingChars = "[{\"";
          var jsonLiterals = ["true", "false", "null"];
          var numberLooking = "-0123456789";

          if (literalString === "") {
            return false;
          } else if (startingChars.indexOf(literalString[0]) >= 0) {
            return true;
          } else if (jsonLiterals.indexOf(literalString) >= 0) {
            return true;
          } else if (numberLooking.indexOf(literalString[0]) >= 0) {
            try {
              JSON.parse(literalString);
              return true;
            } catch (ex) {
              return false;
            }
          } else {
            return false;
          }
        }
      };
      var bindingPower = {};
      bindingPower[TOK_EOF] = 0;
      bindingPower[TOK_UNQUOTEDIDENTIFIER] = 0;
      bindingPower[TOK_QUOTEDIDENTIFIER] = 0;
      bindingPower[TOK_RBRACKET] = 0;
      bindingPower[TOK_RPAREN] = 0;
      bindingPower[TOK_COMMA] = 0;
      bindingPower[TOK_RBRACE] = 0;
      bindingPower[TOK_NUMBER] = 0;
      bindingPower[TOK_CURRENT] = 0;
      bindingPower[TOK_EXPREF] = 0;
      bindingPower[TOK_PIPE] = 1;
      bindingPower[TOK_OR] = 2;
      bindingPower[TOK_AND] = 3;
      bindingPower[TOK_EQ] = 5;
      bindingPower[TOK_GT] = 5;
      bindingPower[TOK_LT] = 5;
      bindingPower[TOK_GTE] = 5;
      bindingPower[TOK_LTE] = 5;
      bindingPower[TOK_NE] = 5;
      bindingPower[TOK_FLATTEN] = 9;
      bindingPower[TOK_STAR] = 20;
      bindingPower[TOK_FILTER] = 21;
      bindingPower[TOK_DOT] = 40;
      bindingPower[TOK_NOT] = 45;
      bindingPower[TOK_LBRACE] = 50;
      bindingPower[TOK_LBRACKET] = 55;
      bindingPower[TOK_LPAREN] = 60;

      function Parser() {}

      Parser.prototype = {
        parse: function parse(expression) {
          this._loadTokens(expression);

          this.index = 0;
          var ast = this.expression(0);

          if (this._lookahead(0) !== TOK_EOF) {
            var t = this._lookaheadToken(0);

            var error = new Error("Unexpected token type: " + t.type + ", value: " + t.value);
            error.name = "ParserError";
            throw error;
          }

          return ast;
        },
        _loadTokens: function _loadTokens(expression) {
          var lexer = new Lexer();
          var tokens = lexer.tokenize(expression);
          tokens.push({
            type: TOK_EOF,
            value: "",
            start: expression.length
          });
          this.tokens = tokens;
        },
        expression: function expression(rbp) {
          var leftToken = this._lookaheadToken(0);

          this._advance();

          var left = this.nud(leftToken);

          var currentToken = this._lookahead(0);

          while (rbp < bindingPower[currentToken]) {
            this._advance();

            left = this.led(currentToken, left);
            currentToken = this._lookahead(0);
          }

          return left;
        },
        _lookahead: function _lookahead(number) {
          return this.tokens[this.index + number].type;
        },
        _lookaheadToken: function _lookaheadToken(number) {
          return this.tokens[this.index + number];
        },
        _advance: function _advance() {
          this.index++;
        },
        nud: function nud(token) {
          var left;
          var right;
          var expression;

          switch (token.type) {
            case TOK_LITERAL:
              return {
                type: "Literal",
                value: token.value
              };

            case TOK_UNQUOTEDIDENTIFIER:
              return {
                type: "Field",
                name: token.value
              };

            case TOK_QUOTEDIDENTIFIER:
              var node = {
                type: "Field",
                name: token.value
              };

              if (this._lookahead(0) === TOK_LPAREN) {
                throw new Error("Quoted identifier not allowed for function names.");
              } else {
                return node;
              }

              break;

            case TOK_NOT:
              right = this.expression(bindingPower.Not);
              return {
                type: "NotExpression",
                children: [right]
              };

            case TOK_STAR:
              left = {
                type: "Identity"
              };
              right = null;

              if (this._lookahead(0) === TOK_RBRACKET) {
                // This can happen in a multiselect,
                // [a, b, *]
                right = {
                  type: "Identity"
                };
              } else {
                right = this._parseProjectionRHS(bindingPower.Star);
              }

              return {
                type: "ValueProjection",
                children: [left, right]
              };

            case TOK_FILTER:
              return this.led(token.type, {
                type: "Identity"
              });

            case TOK_LBRACE:
              return this._parseMultiselectHash();

            case TOK_FLATTEN:
              left = {
                type: TOK_FLATTEN,
                children: [{
                  type: "Identity"
                }]
              };
              right = this._parseProjectionRHS(bindingPower.Flatten);
              return {
                type: "Projection",
                children: [left, right]
              };

            case TOK_LBRACKET:
              if (this._lookahead(0) === TOK_NUMBER || this._lookahead(0) === TOK_COLON) {
                right = this._parseIndexExpression();
                return this._projectIfSlice({
                  type: "Identity"
                }, right);
              } else if (this._lookahead(0) === TOK_STAR && this._lookahead(1) === TOK_RBRACKET) {
                this._advance();

                this._advance();

                right = this._parseProjectionRHS(bindingPower.Star);
                return {
                  type: "Projection",
                  children: [{
                    type: "Identity"
                  }, right]
                };
              } else {
                return this._parseMultiselectList();
              }

              break;

            case TOK_CURRENT:
              return {
                type: TOK_CURRENT
              };

            case TOK_EXPREF:
              expression = this.expression(bindingPower.Expref);
              return {
                type: "ExpressionReference",
                children: [expression]
              };

            case TOK_LPAREN:
              var args = [];

              while (this._lookahead(0) !== TOK_RPAREN) {
                if (this._lookahead(0) === TOK_CURRENT) {
                  expression = {
                    type: TOK_CURRENT
                  };

                  this._advance();
                } else {
                  expression = this.expression(0);
                }

                args.push(expression);
              }

              this._match(TOK_RPAREN);

              return args[0];

            default:
              this._errorToken(token);

          }
        },
        led: function led(tokenName, left) {
          var right;

          switch (tokenName) {
            case TOK_DOT:
              var rbp = bindingPower.Dot;

              if (this._lookahead(0) !== TOK_STAR) {
                right = this._parseDotRHS(rbp);
                return {
                  type: "Subexpression",
                  children: [left, right]
                };
              } else {
                // Creating a projection.
                this._advance();

                right = this._parseProjectionRHS(rbp);
                return {
                  type: "ValueProjection",
                  children: [left, right]
                };
              }

              break;

            case TOK_PIPE:
              right = this.expression(bindingPower.Pipe);
              return {
                type: TOK_PIPE,
                children: [left, right]
              };

            case TOK_OR:
              right = this.expression(bindingPower.Or);
              return {
                type: "OrExpression",
                children: [left, right]
              };

            case TOK_AND:
              right = this.expression(bindingPower.And);
              return {
                type: "AndExpression",
                children: [left, right]
              };

            case TOK_LPAREN:
              var name = left.name;
              var args = [];
              var expression, node;

              while (this._lookahead(0) !== TOK_RPAREN) {
                if (this._lookahead(0) === TOK_CURRENT) {
                  expression = {
                    type: TOK_CURRENT
                  };

                  this._advance();
                } else {
                  expression = this.expression(0);
                }

                if (this._lookahead(0) === TOK_COMMA) {
                  this._match(TOK_COMMA);
                }

                args.push(expression);
              }

              this._match(TOK_RPAREN);

              node = {
                type: "Function",
                name: name,
                children: args
              };
              return node;

            case TOK_FILTER:
              var condition = this.expression(0);

              this._match(TOK_RBRACKET);

              if (this._lookahead(0) === TOK_FLATTEN) {
                right = {
                  type: "Identity"
                };
              } else {
                right = this._parseProjectionRHS(bindingPower.Filter);
              }

              return {
                type: "FilterProjection",
                children: [left, right, condition]
              };

            case TOK_FLATTEN:
              var leftNode = {
                type: TOK_FLATTEN,
                children: [left]
              };

              var rightNode = this._parseProjectionRHS(bindingPower.Flatten);

              return {
                type: "Projection",
                children: [leftNode, rightNode]
              };

            case TOK_EQ:
            case TOK_NE:
            case TOK_GT:
            case TOK_GTE:
            case TOK_LT:
            case TOK_LTE:
              return this._parseComparator(left, tokenName);

            case TOK_LBRACKET:
              var token = this._lookaheadToken(0);

              if (token.type === TOK_NUMBER || token.type === TOK_COLON) {
                right = this._parseIndexExpression();
                return this._projectIfSlice(left, right);
              } else {
                this._match(TOK_STAR);

                this._match(TOK_RBRACKET);

                right = this._parseProjectionRHS(bindingPower.Star);
                return {
                  type: "Projection",
                  children: [left, right]
                };
              }

              break;

            default:
              this._errorToken(this._lookaheadToken(0));

          }
        },
        _match: function _match(tokenType) {
          if (this._lookahead(0) === tokenType) {
            this._advance();
          } else {
            var t = this._lookaheadToken(0);

            var error = new Error("Expected " + tokenType + ", got: " + t.type);
            error.name = "ParserError";
            throw error;
          }
        },
        _errorToken: function _errorToken(token) {
          var error = new Error("Invalid token (" + token.type + "): \"" + token.value + "\"");
          error.name = "ParserError";
          throw error;
        },
        _parseIndexExpression: function _parseIndexExpression() {
          if (this._lookahead(0) === TOK_COLON || this._lookahead(1) === TOK_COLON) {
            return this._parseSliceExpression();
          } else {
            var node = {
              type: "Index",
              value: this._lookaheadToken(0).value
            };

            this._advance();

            this._match(TOK_RBRACKET);

            return node;
          }
        },
        _projectIfSlice: function _projectIfSlice(left, right) {
          var indexExpr = {
            type: "IndexExpression",
            children: [left, right]
          };

          if (right.type === "Slice") {
            return {
              type: "Projection",
              children: [indexExpr, this._parseProjectionRHS(bindingPower.Star)]
            };
          } else {
            return indexExpr;
          }
        },
        _parseSliceExpression: function _parseSliceExpression() {
          // [start:end:step] where each part is optional, as well as the last
          // colon.
          var parts = [null, null, null];
          var index = 0;

          var currentToken = this._lookahead(0);

          while (currentToken !== TOK_RBRACKET && index < 3) {
            if (currentToken === TOK_COLON) {
              index++;

              this._advance();
            } else if (currentToken === TOK_NUMBER) {
              parts[index] = this._lookaheadToken(0).value;

              this._advance();
            } else {
              var t = this._lookahead(0);

              var error = new Error("Syntax error, unexpected token: " + t.value + "(" + t.type + ")");
              error.name = "Parsererror";
              throw error;
            }

            currentToken = this._lookahead(0);
          }

          this._match(TOK_RBRACKET);

          return {
            type: "Slice",
            children: parts
          };
        },
        _parseComparator: function _parseComparator(left, comparator) {
          var right = this.expression(bindingPower[comparator]);
          return {
            type: "Comparator",
            name: comparator,
            children: [left, right]
          };
        },
        _parseDotRHS: function _parseDotRHS(rbp) {
          var lookahead = this._lookahead(0);

          var exprTokens = [TOK_UNQUOTEDIDENTIFIER, TOK_QUOTEDIDENTIFIER, TOK_STAR];

          if (exprTokens.indexOf(lookahead) >= 0) {
            return this.expression(rbp);
          } else if (lookahead === TOK_LBRACKET) {
            this._match(TOK_LBRACKET);

            return this._parseMultiselectList();
          } else if (lookahead === TOK_LBRACE) {
            this._match(TOK_LBRACE);

            return this._parseMultiselectHash();
          }
        },
        _parseProjectionRHS: function _parseProjectionRHS(rbp) {
          var right;

          if (bindingPower[this._lookahead(0)] < 10) {
            right = {
              type: "Identity"
            };
          } else if (this._lookahead(0) === TOK_LBRACKET) {
            right = this.expression(rbp);
          } else if (this._lookahead(0) === TOK_FILTER) {
            right = this.expression(rbp);
          } else if (this._lookahead(0) === TOK_DOT) {
            this._match(TOK_DOT);

            right = this._parseDotRHS(rbp);
          } else {
            var t = this._lookaheadToken(0);

            var error = new Error("Sytanx error, unexpected token: " + t.value + "(" + t.type + ")");
            error.name = "ParserError";
            throw error;
          }

          return right;
        },
        _parseMultiselectList: function _parseMultiselectList() {
          var expressions = [];

          while (this._lookahead(0) !== TOK_RBRACKET) {
            var expression = this.expression(0);
            expressions.push(expression);

            if (this._lookahead(0) === TOK_COMMA) {
              this._match(TOK_COMMA);

              if (this._lookahead(0) === TOK_RBRACKET) {
                throw new Error("Unexpected token Rbracket");
              }
            }
          }

          this._match(TOK_RBRACKET);

          return {
            type: "MultiSelectList",
            children: expressions
          };
        },
        _parseMultiselectHash: function _parseMultiselectHash() {
          var pairs = [];
          var identifierTypes = [TOK_UNQUOTEDIDENTIFIER, TOK_QUOTEDIDENTIFIER];
          var keyToken, keyName, value, node;

          for (;;) {
            keyToken = this._lookaheadToken(0);

            if (identifierTypes.indexOf(keyToken.type) < 0) {
              throw new Error("Expecting an identifier token, got: " + keyToken.type);
            }

            keyName = keyToken.value;

            this._advance();

            this._match(TOK_COLON);

            value = this.expression(0);
            node = {
              type: "KeyValuePair",
              name: keyName,
              value: value
            };
            pairs.push(node);

            if (this._lookahead(0) === TOK_COMMA) {
              this._match(TOK_COMMA);
            } else if (this._lookahead(0) === TOK_RBRACE) {
              this._match(TOK_RBRACE);

              break;
            }
          }

          return {
            type: "MultiSelectHash",
            children: pairs
          };
        }
      };

      function TreeInterpreter(runtime) {
        this.runtime = runtime;
      }

      TreeInterpreter.prototype = {
        search: function search(node, value) {
          return this.visit(node, value);
        },
        visit: function visit(node, value) {
          var matched, current, result, first, second, field, left, right, collected, i;

          switch (node.type) {
            case "Field":
              if (value === null) {
                return null;
              } else if (isObject(value)) {
                field = value[node.name];

                if (field === undefined) {
                  return null;
                } else {
                  return field;
                }
              } else {
                return null;
              }

              break;

            case "Subexpression":
              result = this.visit(node.children[0], value);

              for (i = 1; i < node.children.length; i++) {
                result = this.visit(node.children[1], result);

                if (result === null) {
                  return null;
                }
              }

              return result;

            case "IndexExpression":
              left = this.visit(node.children[0], value);
              right = this.visit(node.children[1], left);
              return right;

            case "Index":
              if (!isArray(value)) {
                return null;
              }

              var index = node.value;

              if (index < 0) {
                index = value.length + index;
              }

              result = value[index];

              if (result === undefined) {
                result = null;
              }

              return result;

            case "Slice":
              if (!isArray(value)) {
                return null;
              }

              var sliceParams = node.children.slice(0);
              var computed = this.computeSliceParams(value.length, sliceParams);
              var start = computed[0];
              var stop = computed[1];
              var step = computed[2];
              result = [];

              if (step > 0) {
                for (i = start; i < stop; i += step) {
                  result.push(value[i]);
                }
              } else {
                for (i = start; i > stop; i += step) {
                  result.push(value[i]);
                }
              }

              return result;

            case "Projection":
              // Evaluate left child.
              var base = this.visit(node.children[0], value);

              if (!isArray(base)) {
                return null;
              }

              collected = [];

              for (i = 0; i < base.length; i++) {
                current = this.visit(node.children[1], base[i]);

                if (current !== null) {
                  collected.push(current);
                }
              }

              return collected;

            case "ValueProjection":
              // Evaluate left child.
              base = this.visit(node.children[0], value);

              if (!isObject(base)) {
                return null;
              }

              collected = [];
              var values = objValues(base);

              for (i = 0; i < values.length; i++) {
                current = this.visit(node.children[1], values[i]);

                if (current !== null) {
                  collected.push(current);
                }
              }

              return collected;

            case "FilterProjection":
              base = this.visit(node.children[0], value);

              if (!isArray(base)) {
                return null;
              }

              var filtered = [];
              var finalResults = [];

              for (i = 0; i < base.length; i++) {
                matched = this.visit(node.children[2], base[i]);

                if (!isFalse(matched)) {
                  filtered.push(base[i]);
                }
              }

              for (var j = 0; j < filtered.length; j++) {
                current = this.visit(node.children[1], filtered[j]);

                if (current !== null) {
                  finalResults.push(current);
                }
              }

              return finalResults;

            case "Comparator":
              first = this.visit(node.children[0], value);
              second = this.visit(node.children[1], value);

              switch (node.name) {
                case TOK_EQ:
                  result = strictDeepEqual(first, second);
                  break;

                case TOK_NE:
                  result = !strictDeepEqual(first, second);
                  break;

                case TOK_GT:
                  result = first > second;
                  break;

                case TOK_GTE:
                  result = first >= second;
                  break;

                case TOK_LT:
                  result = first < second;
                  break;

                case TOK_LTE:
                  result = first <= second;
                  break;

                default:
                  throw new Error("Unknown comparator: " + node.name);
              }

              return result;

            case TOK_FLATTEN:
              var original = this.visit(node.children[0], value);

              if (!isArray(original)) {
                return null;
              }

              var merged = [];

              for (i = 0; i < original.length; i++) {
                current = original[i];

                if (isArray(current)) {
                  merged.push.apply(merged, current);
                } else {
                  merged.push(current);
                }
              }

              return merged;

            case "Identity":
              return value;

            case "MultiSelectList":
              if (value === null) {
                return null;
              }

              collected = [];

              for (i = 0; i < node.children.length; i++) {
                collected.push(this.visit(node.children[i], value));
              }

              return collected;

            case "MultiSelectHash":
              if (value === null) {
                return null;
              }

              collected = {};
              var child;

              for (i = 0; i < node.children.length; i++) {
                child = node.children[i];
                collected[child.name] = this.visit(child.value, value);
              }

              return collected;

            case "OrExpression":
              matched = this.visit(node.children[0], value);

              if (isFalse(matched)) {
                matched = this.visit(node.children[1], value);
              }

              return matched;

            case "AndExpression":
              first = this.visit(node.children[0], value);

              if (isFalse(first) === true) {
                return first;
              }

              return this.visit(node.children[1], value);

            case "NotExpression":
              first = this.visit(node.children[0], value);
              return isFalse(first);

            case "Literal":
              return node.value;

            case TOK_PIPE:
              left = this.visit(node.children[0], value);
              return this.visit(node.children[1], left);

            case TOK_CURRENT:
              return value;

            case "Function":
              var resolvedArgs = [];

              for (i = 0; i < node.children.length; i++) {
                resolvedArgs.push(this.visit(node.children[i], value));
              }

              return this.runtime.callFunction(node.name, resolvedArgs);

            case "ExpressionReference":
              var refNode = node.children[0]; // Tag the node with a specific attribute so the type
              // checker verify the type.

              refNode.jmespathType = TOK_EXPREF;
              return refNode;

            default:
              throw new Error("Unknown node type: " + node.type);
          }
        },
        computeSliceParams: function computeSliceParams(arrayLength, sliceParams) {
          var start = sliceParams[0];
          var stop = sliceParams[1];
          var step = sliceParams[2];
          var computed = [null, null, null];

          if (step === null) {
            step = 1;
          } else if (step === 0) {
            var error = new Error("Invalid slice, step cannot be 0");
            error.name = "RuntimeError";
            throw error;
          }

          var stepValueNegative = step < 0 ? true : false;

          if (start === null) {
            start = stepValueNegative ? arrayLength - 1 : 0;
          } else {
            start = this.capSliceRange(arrayLength, start, step);
          }

          if (stop === null) {
            stop = stepValueNegative ? -1 : arrayLength;
          } else {
            stop = this.capSliceRange(arrayLength, stop, step);
          }

          computed[0] = start;
          computed[1] = stop;
          computed[2] = step;
          return computed;
        },
        capSliceRange: function capSliceRange(arrayLength, actualValue, step) {
          if (actualValue < 0) {
            actualValue += arrayLength;

            if (actualValue < 0) {
              actualValue = step < 0 ? -1 : 0;
            }
          } else if (actualValue >= arrayLength) {
            actualValue = step < 0 ? arrayLength - 1 : arrayLength;
          }

          return actualValue;
        }
      };

      function Runtime(interpreter) {
        this._interpreter = interpreter;
        this.functionTable = {
          // name: [function, <signature>]
          // The <signature> can be:
          //
          // {
          //   args: [[type1, type2], [type1, type2]],
          //   variadic: true|false
          // }
          //
          // Each arg in the arg list is a list of valid types
          // (if the function is overloaded and supports multiple
          // types.  If the type is "any" then no type checking
          // occurs on the argument.  Variadic is optional
          // and if not provided is assumed to be false.
          abs: {
            _func: this._functionAbs,
            _signature: [{
              types: [TYPE_NUMBER]
            }]
          },
          avg: {
            _func: this._functionAvg,
            _signature: [{
              types: [TYPE_ARRAY_NUMBER]
            }]
          },
          ceil: {
            _func: this._functionCeil,
            _signature: [{
              types: [TYPE_NUMBER]
            }]
          },
          contains: {
            _func: this._functionContains,
            _signature: [{
              types: [TYPE_STRING, TYPE_ARRAY]
            }, {
              types: [TYPE_ANY]
            }]
          },
          "ends_with": {
            _func: this._functionEndsWith,
            _signature: [{
              types: [TYPE_STRING]
            }, {
              types: [TYPE_STRING]
            }]
          },
          floor: {
            _func: this._functionFloor,
            _signature: [{
              types: [TYPE_NUMBER]
            }]
          },
          length: {
            _func: this._functionLength,
            _signature: [{
              types: [TYPE_STRING, TYPE_ARRAY, TYPE_OBJECT]
            }]
          },
          map: {
            _func: this._functionMap,
            _signature: [{
              types: [TYPE_EXPREF]
            }, {
              types: [TYPE_ARRAY]
            }]
          },
          max: {
            _func: this._functionMax,
            _signature: [{
              types: [TYPE_ARRAY_NUMBER, TYPE_ARRAY_STRING]
            }]
          },
          "merge": {
            _func: this._functionMerge,
            _signature: [{
              types: [TYPE_OBJECT],
              variadic: true
            }]
          },
          "max_by": {
            _func: this._functionMaxBy,
            _signature: [{
              types: [TYPE_ARRAY]
            }, {
              types: [TYPE_EXPREF]
            }]
          },
          sum: {
            _func: this._functionSum,
            _signature: [{
              types: [TYPE_ARRAY_NUMBER]
            }]
          },
          "starts_with": {
            _func: this._functionStartsWith,
            _signature: [{
              types: [TYPE_STRING]
            }, {
              types: [TYPE_STRING]
            }]
          },
          min: {
            _func: this._functionMin,
            _signature: [{
              types: [TYPE_ARRAY_NUMBER, TYPE_ARRAY_STRING]
            }]
          },
          "min_by": {
            _func: this._functionMinBy,
            _signature: [{
              types: [TYPE_ARRAY]
            }, {
              types: [TYPE_EXPREF]
            }]
          },
          type: {
            _func: this._functionType,
            _signature: [{
              types: [TYPE_ANY]
            }]
          },
          keys: {
            _func: this._functionKeys,
            _signature: [{
              types: [TYPE_OBJECT]
            }]
          },
          values: {
            _func: this._functionValues,
            _signature: [{
              types: [TYPE_OBJECT]
            }]
          },
          sort: {
            _func: this._functionSort,
            _signature: [{
              types: [TYPE_ARRAY_STRING, TYPE_ARRAY_NUMBER]
            }]
          },
          "sort_by": {
            _func: this._functionSortBy,
            _signature: [{
              types: [TYPE_ARRAY]
            }, {
              types: [TYPE_EXPREF]
            }]
          },
          join: {
            _func: this._functionJoin,
            _signature: [{
              types: [TYPE_STRING]
            }, {
              types: [TYPE_ARRAY_STRING]
            }]
          },
          reverse: {
            _func: this._functionReverse,
            _signature: [{
              types: [TYPE_STRING, TYPE_ARRAY]
            }]
          },
          "to_array": {
            _func: this._functionToArray,
            _signature: [{
              types: [TYPE_ANY]
            }]
          },
          "to_string": {
            _func: this._functionToString,
            _signature: [{
              types: [TYPE_ANY]
            }]
          },
          "to_number": {
            _func: this._functionToNumber,
            _signature: [{
              types: [TYPE_ANY]
            }]
          },
          "not_null": {
            _func: this._functionNotNull,
            _signature: [{
              types: [TYPE_ANY],
              variadic: true
            }]
          }
        };
      }

      Runtime.prototype = {
        callFunction: function callFunction(name, resolvedArgs) {
          var functionEntry = this.functionTable[name];

          if (functionEntry === undefined) {
            throw new Error("Unknown function: " + name + "()");
          }

          this._validateArgs(name, resolvedArgs, functionEntry._signature);

          return functionEntry._func.call(this, resolvedArgs);
        },
        _validateArgs: function _validateArgs(name, args, signature) {
          // Validating the args requires validating
          // the correct arity and the correct type of each arg.
          // If the last argument is declared as variadic, then we need
          // a minimum number of args to be required.  Otherwise it has to
          // be an exact amount.
          var pluralized;

          if (signature[signature.length - 1].variadic) {
            if (args.length < signature.length) {
              pluralized = signature.length === 1 ? " argument" : " arguments";
              throw new Error("ArgumentError: " + name + "() " + "takes at least" + signature.length + pluralized + " but received " + args.length);
            }
          } else if (args.length !== signature.length) {
            pluralized = signature.length === 1 ? " argument" : " arguments";
            throw new Error("ArgumentError: " + name + "() " + "takes " + signature.length + pluralized + " but received " + args.length);
          }

          var currentSpec;
          var actualType;
          var typeMatched;

          for (var i = 0; i < signature.length; i++) {
            typeMatched = false;
            currentSpec = signature[i].types;
            actualType = this._getTypeName(args[i]);

            for (var j = 0; j < currentSpec.length; j++) {
              if (this._typeMatches(actualType, currentSpec[j], args[i])) {
                typeMatched = true;
                break;
              }
            }

            if (!typeMatched) {
              throw new Error("TypeError: " + name + "() " + "expected argument " + (i + 1) + " to be type " + currentSpec + " but received type " + actualType + " instead.");
            }
          }
        },
        _typeMatches: function _typeMatches(actual, expected, argValue) {
          if (expected === TYPE_ANY) {
            return true;
          }

          if (expected === TYPE_ARRAY_STRING || expected === TYPE_ARRAY_NUMBER || expected === TYPE_ARRAY) {
            // The expected type can either just be array,
            // or it can require a specific subtype (array of numbers).
            //
            // The simplest case is if "array" with no subtype is specified.
            if (expected === TYPE_ARRAY) {
              return actual === TYPE_ARRAY;
            } else if (actual === TYPE_ARRAY) {
              // Otherwise we need to check subtypes.
              // I think this has potential to be improved.
              var subtype;

              if (expected === TYPE_ARRAY_NUMBER) {
                subtype = TYPE_NUMBER;
              } else if (expected === TYPE_ARRAY_STRING) {
                subtype = TYPE_STRING;
              }

              for (var i = 0; i < argValue.length; i++) {
                if (!this._typeMatches(this._getTypeName(argValue[i]), subtype, argValue[i])) {
                  return false;
                }
              }

              return true;
            }
          } else {
            return actual === expected;
          }
        },
        _getTypeName: function _getTypeName(obj) {
          switch (Object.prototype.toString.call(obj)) {
            case "[object String]":
              return TYPE_STRING;

            case "[object Number]":
              return TYPE_NUMBER;

            case "[object Array]":
              return TYPE_ARRAY;

            case "[object Boolean]":
              return TYPE_BOOLEAN;

            case "[object Null]":
              return TYPE_NULL;

            case "[object Object]":
              // Check if it's an expref.  If it has, it's been
              // tagged with a jmespathType attr of 'Expref';
              if (obj.jmespathType === TOK_EXPREF) {
                return TYPE_EXPREF;
              } else {
                return TYPE_OBJECT;
              }

          }
        },
        _functionStartsWith: function _functionStartsWith(resolvedArgs) {
          return resolvedArgs[0].lastIndexOf(resolvedArgs[1]) === 0;
        },
        _functionEndsWith: function _functionEndsWith(resolvedArgs) {
          var searchStr = resolvedArgs[0];
          var suffix = resolvedArgs[1];
          return searchStr.indexOf(suffix, searchStr.length - suffix.length) !== -1;
        },
        _functionReverse: function _functionReverse(resolvedArgs) {
          var typeName = this._getTypeName(resolvedArgs[0]);

          if (typeName === TYPE_STRING) {
            var originalStr = resolvedArgs[0];
            var reversedStr = "";

            for (var i = originalStr.length - 1; i >= 0; i--) {
              reversedStr += originalStr[i];
            }

            return reversedStr;
          } else {
            var reversedArray = resolvedArgs[0].slice(0);
            reversedArray.reverse();
            return reversedArray;
          }
        },
        _functionAbs: function _functionAbs(resolvedArgs) {
          return Math.abs(resolvedArgs[0]);
        },
        _functionCeil: function _functionCeil(resolvedArgs) {
          return Math.ceil(resolvedArgs[0]);
        },
        _functionAvg: function _functionAvg(resolvedArgs) {
          var sum = 0;
          var inputArray = resolvedArgs[0];

          for (var i = 0; i < inputArray.length; i++) {
            sum += inputArray[i];
          }

          return sum / inputArray.length;
        },
        _functionContains: function _functionContains(resolvedArgs) {
          return resolvedArgs[0].indexOf(resolvedArgs[1]) >= 0;
        },
        _functionFloor: function _functionFloor(resolvedArgs) {
          return Math.floor(resolvedArgs[0]);
        },
        _functionLength: function _functionLength(resolvedArgs) {
          if (!isObject(resolvedArgs[0])) {
            return resolvedArgs[0].length;
          } else {
            // As far as I can tell, there's no way to get the length
            // of an object without O(n) iteration through the object.
            return Object.keys(resolvedArgs[0]).length;
          }
        },
        _functionMap: function _functionMap(resolvedArgs) {
          var mapped = [];
          var interpreter = this._interpreter;
          var exprefNode = resolvedArgs[0];
          var elements = resolvedArgs[1];

          for (var i = 0; i < elements.length; i++) {
            mapped.push(interpreter.visit(exprefNode, elements[i]));
          }

          return mapped;
        },
        _functionMerge: function _functionMerge(resolvedArgs) {
          var merged = {};

          for (var i = 0; i < resolvedArgs.length; i++) {
            var current = resolvedArgs[i];

            for (var key in current) {
              merged[key] = current[key];
            }
          }

          return merged;
        },
        _functionMax: function _functionMax(resolvedArgs) {
          if (resolvedArgs[0].length > 0) {
            var typeName = this._getTypeName(resolvedArgs[0][0]);

            if (typeName === TYPE_NUMBER) {
              return Math.max.apply(Math, resolvedArgs[0]);
            } else {
              var elements = resolvedArgs[0];
              var maxElement = elements[0];

              for (var i = 1; i < elements.length; i++) {
                if (maxElement.localeCompare(elements[i]) < 0) {
                  maxElement = elements[i];
                }
              }

              return maxElement;
            }
          } else {
            return null;
          }
        },
        _functionMin: function _functionMin(resolvedArgs) {
          if (resolvedArgs[0].length > 0) {
            var typeName = this._getTypeName(resolvedArgs[0][0]);

            if (typeName === TYPE_NUMBER) {
              return Math.min.apply(Math, resolvedArgs[0]);
            } else {
              var elements = resolvedArgs[0];
              var minElement = elements[0];

              for (var i = 1; i < elements.length; i++) {
                if (elements[i].localeCompare(minElement) < 0) {
                  minElement = elements[i];
                }
              }

              return minElement;
            }
          } else {
            return null;
          }
        },
        _functionSum: function _functionSum(resolvedArgs) {
          var sum = 0;
          var listToSum = resolvedArgs[0];

          for (var i = 0; i < listToSum.length; i++) {
            sum += listToSum[i];
          }

          return sum;
        },
        _functionType: function _functionType(resolvedArgs) {
          switch (this._getTypeName(resolvedArgs[0])) {
            case TYPE_NUMBER:
              return "number";

            case TYPE_STRING:
              return "string";

            case TYPE_ARRAY:
              return "array";

            case TYPE_OBJECT:
              return "object";

            case TYPE_BOOLEAN:
              return "boolean";

            case TYPE_EXPREF:
              return "expref";

            case TYPE_NULL:
              return "null";
          }
        },
        _functionKeys: function _functionKeys(resolvedArgs) {
          return Object.keys(resolvedArgs[0]);
        },
        _functionValues: function _functionValues(resolvedArgs) {
          var obj = resolvedArgs[0];
          var keys = Object.keys(obj);
          var values = [];

          for (var i = 0; i < keys.length; i++) {
            values.push(obj[keys[i]]);
          }

          return values;
        },
        _functionJoin: function _functionJoin(resolvedArgs) {
          var joinChar = resolvedArgs[0];
          var listJoin = resolvedArgs[1];
          return listJoin.join(joinChar);
        },
        _functionToArray: function _functionToArray(resolvedArgs) {
          if (this._getTypeName(resolvedArgs[0]) === TYPE_ARRAY) {
            return resolvedArgs[0];
          } else {
            return [resolvedArgs[0]];
          }
        },
        _functionToString: function _functionToString(resolvedArgs) {
          if (this._getTypeName(resolvedArgs[0]) === TYPE_STRING) {
            return resolvedArgs[0];
          } else {
            return JSON.stringify(resolvedArgs[0]);
          }
        },
        _functionToNumber: function _functionToNumber(resolvedArgs) {
          var typeName = this._getTypeName(resolvedArgs[0]);

          var convertedValue;

          if (typeName === TYPE_NUMBER) {
            return resolvedArgs[0];
          } else if (typeName === TYPE_STRING) {
            convertedValue = +resolvedArgs[0];

            if (!isNaN(convertedValue)) {
              return convertedValue;
            }
          }

          return null;
        },
        _functionNotNull: function _functionNotNull(resolvedArgs) {
          for (var i = 0; i < resolvedArgs.length; i++) {
            if (this._getTypeName(resolvedArgs[i]) !== TYPE_NULL) {
              return resolvedArgs[i];
            }
          }

          return null;
        },
        _functionSort: function _functionSort(resolvedArgs) {
          var sortedArray = resolvedArgs[0].slice(0);
          sortedArray.sort();
          return sortedArray;
        },
        _functionSortBy: function _functionSortBy(resolvedArgs) {
          var sortedArray = resolvedArgs[0].slice(0);

          if (sortedArray.length === 0) {
            return sortedArray;
          }

          var interpreter = this._interpreter;
          var exprefNode = resolvedArgs[1];

          var requiredType = this._getTypeName(interpreter.visit(exprefNode, sortedArray[0]));

          if ([TYPE_NUMBER, TYPE_STRING].indexOf(requiredType) < 0) {
            throw new Error("TypeError");
          }

          var that = this; // In order to get a stable sort out of an unstable
          // sort algorithm, we decorate/sort/undecorate (DSU)
          // by creating a new list of [index, element] pairs.
          // In the cmp function, if the evaluated elements are
          // equal, then the index will be used as the tiebreaker.
          // After the decorated list has been sorted, it will be
          // undecorated to extract the original elements.

          var decorated = [];

          for (var i = 0; i < sortedArray.length; i++) {
            decorated.push([i, sortedArray[i]]);
          }

          decorated.sort(function (a, b) {
            var exprA = interpreter.visit(exprefNode, a[1]);
            var exprB = interpreter.visit(exprefNode, b[1]);

            if (that._getTypeName(exprA) !== requiredType) {
              throw new Error("TypeError: expected " + requiredType + ", received " + that._getTypeName(exprA));
            } else if (that._getTypeName(exprB) !== requiredType) {
              throw new Error("TypeError: expected " + requiredType + ", received " + that._getTypeName(exprB));
            }

            if (exprA > exprB) {
              return 1;
            } else if (exprA < exprB) {
              return -1;
            } else {
              // If they're equal compare the items by their
              // order to maintain relative order of equal keys
              // (i.e. to get a stable sort).
              return a[0] - b[0];
            }
          }); // Undecorate: extract out the original list elements.

          for (var j = 0; j < decorated.length; j++) {
            sortedArray[j] = decorated[j][1];
          }

          return sortedArray;
        },
        _functionMaxBy: function _functionMaxBy(resolvedArgs) {
          var exprefNode = resolvedArgs[1];
          var resolvedArray = resolvedArgs[0];
          var keyFunction = this.createKeyFunction(exprefNode, [TYPE_NUMBER, TYPE_STRING]);
          var maxNumber = -Infinity;
          var maxRecord;
          var current;

          for (var i = 0; i < resolvedArray.length; i++) {
            current = keyFunction(resolvedArray[i]);

            if (current > maxNumber) {
              maxNumber = current;
              maxRecord = resolvedArray[i];
            }
          }

          return maxRecord;
        },
        _functionMinBy: function _functionMinBy(resolvedArgs) {
          var exprefNode = resolvedArgs[1];
          var resolvedArray = resolvedArgs[0];
          var keyFunction = this.createKeyFunction(exprefNode, [TYPE_NUMBER, TYPE_STRING]);
          var minNumber = Infinity;
          var minRecord;
          var current;

          for (var i = 0; i < resolvedArray.length; i++) {
            current = keyFunction(resolvedArray[i]);

            if (current < minNumber) {
              minNumber = current;
              minRecord = resolvedArray[i];
            }
          }

          return minRecord;
        },
        createKeyFunction: function createKeyFunction(exprefNode, allowedTypes) {
          var that = this;
          var interpreter = this._interpreter;

          var keyFunc = function keyFunc(x) {
            var current = interpreter.visit(exprefNode, x);

            if (allowedTypes.indexOf(that._getTypeName(current)) < 0) {
              var msg = "TypeError: expected one of " + allowedTypes + ", received " + that._getTypeName(current);

              throw new Error(msg);
            }

            return current;
          };

          return keyFunc;
        }
      };

      function compile(stream) {
        var parser = new Parser();
        var ast = parser.parse(stream);
        return ast;
      }

      function tokenize(stream) {
        var lexer = new Lexer();
        return lexer.tokenize(stream);
      }

      function search(data, expression) {
        var parser = new Parser(); // This needs to be improved.  Both the interpreter and runtime depend on
        // each other.  The runtime needs the interpreter to support exprefs.
        // There's likely a clean way to avoid the cyclic dependency.

        var runtime = new Runtime();
        var interpreter = new TreeInterpreter(runtime);
        runtime._interpreter = interpreter;
        var node = parser.parse(expression);
        return interpreter.search(node, data);
      }

      exports.tokenize = tokenize;
      exports.compile = compile;
      exports.search = search;
      exports.strictDeepEqual = strictDeepEqual;
    })(false ? undefined : exports);
    /***/

  },

  /***/
  "./node_modules/querystring/decode.js":
  /*!********************************************!*\
    !*** ./node_modules/querystring/decode.js ***!
    \********************************************/

  /*! no static exports found */

  /***/
  function node_modulesQuerystringDecodeJs(module, exports, __webpack_require__) {
    "use strict"; // Copyright Joyent, Inc. and other Node contributors.
    //
    // Permission is hereby granted, free of charge, to any person obtaining a
    // copy of this software and associated documentation files (the
    // "Software"), to deal in the Software without restriction, including
    // without limitation the rights to use, copy, modify, merge, publish,
    // distribute, sublicense, and/or sell copies of the Software, and to permit
    // persons to whom the Software is furnished to do so, subject to the
    // following conditions:
    //
    // The above copyright notice and this permission notice shall be included
    // in all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
    // USE OR OTHER DEALINGS IN THE SOFTWARE.
    // If obj.hasOwnProperty has been overridden, then calling
    // obj.hasOwnProperty(prop) will break.
    // See: https://github.com/joyent/node/issues/1707

    function hasOwnProperty(obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    }

    module.exports = function (qs, sep, eq, options) {
      sep = sep || '&';
      eq = eq || '=';
      var obj = {};

      if (typeof qs !== 'string' || qs.length === 0) {
        return obj;
      }

      var regexp = /\+/g;
      qs = qs.split(sep);
      var maxKeys = 1000;

      if (options && typeof options.maxKeys === 'number') {
        maxKeys = options.maxKeys;
      }

      var len = qs.length; // maxKeys <= 0 means that we should not limit keys count

      if (maxKeys > 0 && len > maxKeys) {
        len = maxKeys;
      }

      for (var i = 0; i < len; ++i) {
        var x = qs[i].replace(regexp, '%20'),
            idx = x.indexOf(eq),
            kstr,
            vstr,
            k,
            v;

        if (idx >= 0) {
          kstr = x.substr(0, idx);
          vstr = x.substr(idx + 1);
        } else {
          kstr = x;
          vstr = '';
        }

        k = decodeURIComponent(kstr);
        v = decodeURIComponent(vstr);

        if (!hasOwnProperty(obj, k)) {
          obj[k] = v;
        } else if (Array.isArray(obj[k])) {
          obj[k].push(v);
        } else {
          obj[k] = [obj[k], v];
        }
      }

      return obj;
    };
    /***/

  },

  /***/
  "./node_modules/querystring/encode.js":
  /*!********************************************!*\
    !*** ./node_modules/querystring/encode.js ***!
    \********************************************/

  /*! no static exports found */

  /***/
  function node_modulesQuerystringEncodeJs(module, exports, __webpack_require__) {
    "use strict"; // Copyright Joyent, Inc. and other Node contributors.
    //
    // Permission is hereby granted, free of charge, to any person obtaining a
    // copy of this software and associated documentation files (the
    // "Software"), to deal in the Software without restriction, including
    // without limitation the rights to use, copy, modify, merge, publish,
    // distribute, sublicense, and/or sell copies of the Software, and to permit
    // persons to whom the Software is furnished to do so, subject to the
    // following conditions:
    //
    // The above copyright notice and this permission notice shall be included
    // in all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
    // USE OR OTHER DEALINGS IN THE SOFTWARE.

    var stringifyPrimitive = function stringifyPrimitive(v) {
      switch (typeof v) {
        case 'string':
          return v;

        case 'boolean':
          return v ? 'true' : 'false';

        case 'number':
          return isFinite(v) ? v : '';

        default:
          return '';
      }
    };

    module.exports = function (obj, sep, eq, name) {
      sep = sep || '&';
      eq = eq || '=';

      if (obj === null) {
        obj = undefined;
      }

      if (typeof obj === 'object') {
        return Object.keys(obj).map(function (k) {
          var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;

          if (Array.isArray(obj[k])) {
            return obj[k].map(function (v) {
              return ks + encodeURIComponent(stringifyPrimitive(v));
            }).join(sep);
          } else {
            return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
          }
        }).join(sep);
      }

      if (!name) return '';
      return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
    };
    /***/

  },

  /***/
  "./node_modules/querystring/index.js":
  /*!*******************************************!*\
    !*** ./node_modules/querystring/index.js ***!
    \*******************************************/

  /*! no static exports found */

  /***/
  function node_modulesQuerystringIndexJs(module, exports, __webpack_require__) {
    "use strict";

    exports.decode = exports.parse = __webpack_require__(
    /*! ./decode */
    "./node_modules/querystring/decode.js");
    exports.encode = exports.stringify = __webpack_require__(
    /*! ./encode */
    "./node_modules/querystring/encode.js");
    /***/
  },

  /***/
  "./node_modules/util/node_modules/inherits/inherits_browser.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/util/node_modules/inherits/inherits_browser.js ***!
    \*********************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesUtilNode_modulesInheritsInherits_browserJs(module, exports) {
    if (typeof Object.create === 'function') {
      // implementation from standard node.js 'util' module
      module.exports = function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      };
    } else {
      // old school shim for old browsers
      module.exports = function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;

        var TempCtor = function TempCtor() {};

        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      };
    }
    /***/

  },

  /***/
  "./node_modules/util/support/isBufferBrowser.js":
  /*!******************************************************!*\
    !*** ./node_modules/util/support/isBufferBrowser.js ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function node_modulesUtilSupportIsBufferBrowserJs(module, exports) {
    module.exports = function isBuffer(arg) {
      return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';
    };
    /***/

  },

  /***/
  "./node_modules/util/util.js":
  /*!***********************************!*\
    !*** ./node_modules/util/util.js ***!
    \***********************************/

  /*! no static exports found */

  /***/
  function node_modulesUtilUtilJs(module, exports, __webpack_require__) {
    // Copyright Joyent, Inc. and other Node contributors.
    //
    // Permission is hereby granted, free of charge, to any person obtaining a
    // copy of this software and associated documentation files (the
    // "Software"), to deal in the Software without restriction, including
    // without limitation the rights to use, copy, modify, merge, publish,
    // distribute, sublicense, and/or sell copies of the Software, and to permit
    // persons to whom the Software is furnished to do so, subject to the
    // following conditions:
    //
    // The above copyright notice and this permission notice shall be included
    // in all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
    // USE OR OTHER DEALINGS IN THE SOFTWARE.
    var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {
      var keys = Object.keys(obj);
      var descriptors = {};

      for (var i = 0; i < keys.length; i++) {
        descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
      }

      return descriptors;
    };

    var formatRegExp = /%[sdj%]/g;

    exports.format = function (f) {
      if (!isString(f)) {
        var objects = [];

        for (var i = 0; i < arguments.length; i++) {
          objects.push(inspect(arguments[i]));
        }

        return objects.join(' ');
      }

      var i = 1;
      var args = arguments;
      var len = args.length;
      var str = String(f).replace(formatRegExp, function (x) {
        if (x === '%%') return '%';
        if (i >= len) return x;

        switch (x) {
          case '%s':
            return String(args[i++]);

          case '%d':
            return Number(args[i++]);

          case '%j':
            try {
              return JSON.stringify(args[i++]);
            } catch (_) {
              return '[Circular]';
            }

          default:
            return x;
        }
      });

      for (var x = args[i]; i < len; x = args[++i]) {
        if (isNull(x) || !isObject(x)) {
          str += ' ' + x;
        } else {
          str += ' ' + inspect(x);
        }
      }

      return str;
    }; // Mark that a method should not be used.
    // Returns a modified function which warns once by default.
    // If --no-deprecation is set, then it is a no-op.


    exports.deprecate = function (fn, msg) {
      if (typeof process !== 'undefined' && process.noDeprecation === true) {
        return fn;
      } // Allow for deprecating things in the process of starting up.


      if (typeof process === 'undefined') {
        return function () {
          return exports.deprecate(fn, msg).apply(this, arguments);
        };
      }

      var warned = false;

      function deprecated() {
        if (!warned) {
          if (process.throwDeprecation) {
            throw new Error(msg);
          } else if (process.traceDeprecation) {
            console.trace(msg);
          } else {
            console.error(msg);
          }

          warned = true;
        }

        return fn.apply(this, arguments);
      }

      return deprecated;
    };

    var debugs = {};
    var debugEnviron;

    exports.debuglog = function (set) {
      if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';
      set = set.toUpperCase();

      if (!debugs[set]) {
        if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
          var pid = process.pid;

          debugs[set] = function () {
            var msg = exports.format.apply(exports, arguments);
            console.error('%s %d: %s', set, pid, msg);
          };
        } else {
          debugs[set] = function () {};
        }
      }

      return debugs[set];
    };
    /**
     * Echos the value of a value. Trys to print the value out
     * in the best way possible given the different types.
     *
     * @param {Object} obj The object to print out.
     * @param {Object} opts Optional options object that alters the output.
     */

    /* legacy: obj, showHidden, depth, colors*/


    function inspect(obj, opts) {
      // default options
      var ctx = {
        seen: [],
        stylize: stylizeNoColor
      }; // legacy...

      if (arguments.length >= 3) ctx.depth = arguments[2];
      if (arguments.length >= 4) ctx.colors = arguments[3];

      if (isBoolean(opts)) {
        // legacy...
        ctx.showHidden = opts;
      } else if (opts) {
        // got an "options" object
        exports._extend(ctx, opts);
      } // set default options


      if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
      if (isUndefined(ctx.depth)) ctx.depth = 2;
      if (isUndefined(ctx.colors)) ctx.colors = false;
      if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
      if (ctx.colors) ctx.stylize = stylizeWithColor;
      return formatValue(ctx, obj, ctx.depth);
    }

    exports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics

    inspect.colors = {
      'bold': [1, 22],
      'italic': [3, 23],
      'underline': [4, 24],
      'inverse': [7, 27],
      'white': [37, 39],
      'grey': [90, 39],
      'black': [30, 39],
      'blue': [34, 39],
      'cyan': [36, 39],
      'green': [32, 39],
      'magenta': [35, 39],
      'red': [31, 39],
      'yellow': [33, 39]
    }; // Don't use 'blue' not visible on cmd.exe

    inspect.styles = {
      'special': 'cyan',
      'number': 'yellow',
      'boolean': 'yellow',
      'undefined': 'grey',
      'null': 'bold',
      'string': 'green',
      'date': 'magenta',
      // "name": intentionally not styling
      'regexp': 'red'
    };

    function stylizeWithColor(str, styleType) {
      var style = inspect.styles[styleType];

      if (style) {
        return "\x1B[" + inspect.colors[style][0] + 'm' + str + "\x1B[" + inspect.colors[style][1] + 'm';
      } else {
        return str;
      }
    }

    function stylizeNoColor(str, styleType) {
      return str;
    }

    function arrayToHash(array) {
      var hash = {};
      array.forEach(function (val, idx) {
        hash[val] = true;
      });
      return hash;
    }

    function formatValue(ctx, value, recurseTimes) {
      // Provide a hook for user-specified inspect functions.
      // Check that value is an object with an inspect function on it
      if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
        var ret = value.inspect(recurseTimes, ctx);

        if (!isString(ret)) {
          ret = formatValue(ctx, ret, recurseTimes);
        }

        return ret;
      } // Primitive types cannot have properties


      var primitive = formatPrimitive(ctx, value);

      if (primitive) {
        return primitive;
      } // Look up the keys of the object.


      var keys = Object.keys(value);
      var visibleKeys = arrayToHash(keys);

      if (ctx.showHidden) {
        keys = Object.getOwnPropertyNames(value);
      } // IE doesn't make error fields non-enumerable
      // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx


      if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
        return formatError(value);
      } // Some type of object without properties can be shortcutted.


      if (keys.length === 0) {
        if (isFunction(value)) {
          var name = value.name ? ': ' + value.name : '';
          return ctx.stylize('[Function' + name + ']', 'special');
        }

        if (isRegExp(value)) {
          return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
        }

        if (isDate(value)) {
          return ctx.stylize(Date.prototype.toString.call(value), 'date');
        }

        if (isError(value)) {
          return formatError(value);
        }
      }

      var base = '',
          array = false,
          braces = ['{', '}']; // Make Array say that they are Array

      if (isArray(value)) {
        array = true;
        braces = ['[', ']'];
      } // Make functions say that they are functions


      if (isFunction(value)) {
        var n = value.name ? ': ' + value.name : '';
        base = ' [Function' + n + ']';
      } // Make RegExps say that they are RegExps


      if (isRegExp(value)) {
        base = ' ' + RegExp.prototype.toString.call(value);
      } // Make dates with properties first say the date


      if (isDate(value)) {
        base = ' ' + Date.prototype.toUTCString.call(value);
      } // Make error with message first say the error


      if (isError(value)) {
        base = ' ' + formatError(value);
      }

      if (keys.length === 0 && (!array || value.length == 0)) {
        return braces[0] + base + braces[1];
      }

      if (recurseTimes < 0) {
        if (isRegExp(value)) {
          return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
        } else {
          return ctx.stylize('[Object]', 'special');
        }
      }

      ctx.seen.push(value);
      var output;

      if (array) {
        output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
      } else {
        output = keys.map(function (key) {
          return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
        });
      }

      ctx.seen.pop();
      return reduceToSingleString(output, base, braces);
    }

    function formatPrimitive(ctx, value) {
      if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');

      if (isString(value)) {
        var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
        return ctx.stylize(simple, 'string');
      }

      if (isNumber(value)) return ctx.stylize('' + value, 'number');
      if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is "object", so special case here.

      if (isNull(value)) return ctx.stylize('null', 'null');
    }

    function formatError(value) {
      return '[' + Error.prototype.toString.call(value) + ']';
    }

    function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
      var output = [];

      for (var i = 0, l = value.length; i < l; ++i) {
        if (hasOwnProperty(value, String(i))) {
          output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
        } else {
          output.push('');
        }
      }

      keys.forEach(function (key) {
        if (!key.match(/^\d+$/)) {
          output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
        }
      });
      return output;
    }

    function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
      var name, str, desc;
      desc = Object.getOwnPropertyDescriptor(value, key) || {
        value: value[key]
      };

      if (desc.get) {
        if (desc.set) {
          str = ctx.stylize('[Getter/Setter]', 'special');
        } else {
          str = ctx.stylize('[Getter]', 'special');
        }
      } else {
        if (desc.set) {
          str = ctx.stylize('[Setter]', 'special');
        }
      }

      if (!hasOwnProperty(visibleKeys, key)) {
        name = '[' + key + ']';
      }

      if (!str) {
        if (ctx.seen.indexOf(desc.value) < 0) {
          if (isNull(recurseTimes)) {
            str = formatValue(ctx, desc.value, null);
          } else {
            str = formatValue(ctx, desc.value, recurseTimes - 1);
          }

          if (str.indexOf('\n') > -1) {
            if (array) {
              str = str.split('\n').map(function (line) {
                return '  ' + line;
              }).join('\n').substr(2);
            } else {
              str = '\n' + str.split('\n').map(function (line) {
                return '   ' + line;
              }).join('\n');
            }
          }
        } else {
          str = ctx.stylize('[Circular]', 'special');
        }
      }

      if (isUndefined(name)) {
        if (array && key.match(/^\d+$/)) {
          return str;
        }

        name = JSON.stringify('' + key);

        if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
          name = name.substr(1, name.length - 2);
          name = ctx.stylize(name, 'name');
        } else {
          name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
          name = ctx.stylize(name, 'string');
        }
      }

      return name + ': ' + str;
    }

    function reduceToSingleString(output, base, braces) {
      var numLinesEst = 0;
      var length = output.reduce(function (prev, cur) {
        numLinesEst++;
        if (cur.indexOf('\n') >= 0) numLinesEst++;
        return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
      }, 0);

      if (length > 60) {
        return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
      }

      return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
    } // NOTE: These type checking functions intentionally don't use `instanceof`
    // because it is fragile and can be easily faked with `Object.create()`.


    function isArray(ar) {
      return Array.isArray(ar);
    }

    exports.isArray = isArray;

    function isBoolean(arg) {
      return typeof arg === 'boolean';
    }

    exports.isBoolean = isBoolean;

    function isNull(arg) {
      return arg === null;
    }

    exports.isNull = isNull;

    function isNullOrUndefined(arg) {
      return arg == null;
    }

    exports.isNullOrUndefined = isNullOrUndefined;

    function isNumber(arg) {
      return typeof arg === 'number';
    }

    exports.isNumber = isNumber;

    function isString(arg) {
      return typeof arg === 'string';
    }

    exports.isString = isString;

    function isSymbol(arg) {
      return typeof arg === 'symbol';
    }

    exports.isSymbol = isSymbol;

    function isUndefined(arg) {
      return arg === void 0;
    }

    exports.isUndefined = isUndefined;

    function isRegExp(re) {
      return isObject(re) && objectToString(re) === '[object RegExp]';
    }

    exports.isRegExp = isRegExp;

    function isObject(arg) {
      return typeof arg === 'object' && arg !== null;
    }

    exports.isObject = isObject;

    function isDate(d) {
      return isObject(d) && objectToString(d) === '[object Date]';
    }

    exports.isDate = isDate;

    function isError(e) {
      return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
    }

    exports.isError = isError;

    function isFunction(arg) {
      return typeof arg === 'function';
    }

    exports.isFunction = isFunction;

    function isPrimitive(arg) {
      return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
      typeof arg === 'undefined';
    }

    exports.isPrimitive = isPrimitive;
    exports.isBuffer = __webpack_require__(
    /*! ./support/isBuffer */
    "./node_modules/util/support/isBufferBrowser.js");

    function objectToString(o) {
      return Object.prototype.toString.call(o);
    }

    function pad(n) {
      return n < 10 ? '0' + n.toString(10) : n.toString(10);
    }

    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34

    function timestamp() {
      var d = new Date();
      var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
      return [d.getDate(), months[d.getMonth()], time].join(' ');
    } // log is just a thin wrapper to console.log that prepends a timestamp


    exports.log = function () {
      console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
    };
    /**
     * Inherit the prototype methods from one constructor into another.
     *
     * The Function.prototype.inherits from lang.js rewritten as a standalone
     * function (not on Function.prototype). NOTE: If this file is to be loaded
     * during bootstrapping this function needs to be rewritten using some native
     * functions as prototype setup using normal JavaScript does not work as
     * expected during bootstrapping (see mirror.js in r114903).
     *
     * @param {function} ctor Constructor function which needs to inherit the
     *     prototype.
     * @param {function} superCtor Constructor function to inherit prototype from.
     */


    exports.inherits = __webpack_require__(
    /*! inherits */
    "./node_modules/util/node_modules/inherits/inherits_browser.js");

    exports._extend = function (origin, add) {
      // Don't do anything if add isn't an object
      if (!add || !isObject(add)) return origin;
      var keys = Object.keys(add);
      var i = keys.length;

      while (i--) {
        origin[keys[i]] = add[keys[i]];
      }

      return origin;
    };

    function hasOwnProperty(obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    }

    var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

    exports.promisify = function promisify(original) {
      if (typeof original !== 'function') throw new TypeError('The "original" argument must be of type Function');

      if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
        var fn = original[kCustomPromisifiedSymbol];

        if (typeof fn !== 'function') {
          throw new TypeError('The "util.promisify.custom" argument must be of type Function');
        }

        Object.defineProperty(fn, kCustomPromisifiedSymbol, {
          value: fn,
          enumerable: false,
          writable: false,
          configurable: true
        });
        return fn;
      }

      function fn() {
        var promiseResolve, promiseReject;
        var promise = new Promise(function (resolve, reject) {
          promiseResolve = resolve;
          promiseReject = reject;
        });
        var args = [];

        for (var i = 0; i < arguments.length; i++) {
          args.push(arguments[i]);
        }

        args.push(function (err, value) {
          if (err) {
            promiseReject(err);
          } else {
            promiseResolve(value);
          }
        });

        try {
          original.apply(this, args);
        } catch (err) {
          promiseReject(err);
        }

        return promise;
      }

      Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
      if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
        value: fn,
        enumerable: false,
        writable: false,
        configurable: true
      });
      return Object.defineProperties(fn, getOwnPropertyDescriptors(original));
    };

    exports.promisify.custom = kCustomPromisifiedSymbol;

    function callbackifyOnRejected(reason, cb) {
      // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
      // Because `null` is a special error value in callbacks which means "no error
      // occurred", we error-wrap so the callback consumer can distinguish between
      // "the promise rejected with null" or "the promise fulfilled with undefined".
      if (!reason) {
        var newReason = new Error('Promise was rejected with a falsy value');
        newReason.reason = reason;
        reason = newReason;
      }

      return cb(reason);
    }

    function callbackify(original) {
      if (typeof original !== 'function') {
        throw new TypeError('The "original" argument must be of type Function');
      } // We DO NOT return the promise as it gives the user a false sense that
      // the promise is actually somehow related to the callback's execution
      // and that the callback throwing will reject the promise.


      function callbackified() {
        var args = [];

        for (var i = 0; i < arguments.length; i++) {
          args.push(arguments[i]);
        }

        var maybeCb = args.pop();

        if (typeof maybeCb !== 'function') {
          throw new TypeError('The last argument must be of type Function');
        }

        var self = this;

        var cb = function cb() {
          return maybeCb.apply(self, arguments);
        }; // In true node style we process the callback on `nextTick` with all the
        // implications (stack, `uncaughtException`, `async_hooks`)


        original.apply(this, args).then(function (ret) {
          process.nextTick(cb, null, ret);
        }, function (rej) {
          process.nextTick(callbackifyOnRejected, rej, cb);
        });
      }

      Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
      Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));
      return callbackified;
    }

    exports.callbackify = callbackify;
    /***/
  },

  /***/
  "./src/app/admin-dashboard/admin-dashboard-routing.module.ts":
  /*!*******************************************************************!*\
    !*** ./src/app/admin-dashboard/admin-dashboard-routing.module.ts ***!
    \*******************************************************************/

  /*! exports provided: AdminDashboardRoutingModule */

  /***/
  function srcAppAdminDashboardAdminDashboardRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminDashboardRoutingModule", function () {
      return AdminDashboardRoutingModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _admin_dashboard_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./admin-dashboard.component */
    "./src/app/admin-dashboard/admin-dashboard.component.ts");
    /* harmony import */


    var _components_classes_page_classes_page_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./components/classes-page/classes-page.component */
    "./src/app/admin-dashboard/components/classes-page/classes-page.component.ts");
    /* harmony import */


    var _components_videos_page_videos_page_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./components/videos-page/videos-page.component */
    "./src/app/admin-dashboard/components/videos-page/videos-page.component.ts");
    /* harmony import */


    var _components_chapters_page_chapters_page_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./components/chapters-page/chapters-page.component */
    "./src/app/admin-dashboard/components/chapters-page/chapters-page.component.ts");
    /* harmony import */


    var _components_subjects_page_subjects_page_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./components/subjects-page/subjects-page.component */
    "./src/app/admin-dashboard/components/subjects-page/subjects-page.component.ts");
    /* harmony import */


    var _components_public_room_public_room_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./components/public-room/public-room.component */
    "./src/app/admin-dashboard/components/public-room/public-room.component.ts");
    /* harmony import */


    var _components_private_room_private_room_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./components/private-room/private-room.component */
    "./src/app/admin-dashboard/components/private-room/private-room.component.ts");
    /* harmony import */


    var _shared_components_users_page_users_page_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../shared/components/users-page/users-page.component */
    "./src/app/shared/components/users-page/users-page.component.ts");
    /* harmony import */


    var _shared_shared_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../shared/shared.module */
    "./src/app/shared/shared.module.ts");
    /* harmony import */


    var _components_documents_page_documents_page_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./components/documents-page/documents-page.component */
    "./src/app/admin-dashboard/components/documents-page/documents-page.component.ts");
    /* harmony import */


    var _components_upload_document_upload_document_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./components/upload-document/upload-document.component */
    "./src/app/admin-dashboard/components/upload-document/upload-document.component.ts");
    /* harmony import */


    var _components_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./components/dashboard/dashboard.component */
    "./src/app/admin-dashboard/components/dashboard/dashboard.component.ts");
    /* harmony import */


    var _shared_components_suggestion_questions_suggestion_questions_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../shared/components/suggestion-questions/suggestion-questions.component */
    "./src/app/shared/components/suggestion-questions/suggestion-questions.component.ts");
    /* harmony import */


    var _shared_components_answers_answers_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ../shared/components/answers/answers.component */
    "./src/app/shared/components/answers/answers.component.ts");
    /* harmony import */


    var _components_send_messages_send_messages_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./components/send-messages/send-messages.component */
    "./src/app/admin-dashboard/components/send-messages/send-messages.component.ts");

    var routes = [{
      path: '',
      component: _admin_dashboard_component__WEBPACK_IMPORTED_MODULE_2__["AdminDashboardComponent"],
      children: [{
        path: '',
        pathMatch: 'full',
        component: _components_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_13__["DashboardComponent"]
      }, {
        path: 'subject',
        component: _components_subjects_page_subjects_page_component__WEBPACK_IMPORTED_MODULE_6__["SubjectsPageComponent"]
      }, {
        path: 'classes',
        component: _components_classes_page_classes_page_component__WEBPACK_IMPORTED_MODULE_3__["ClassesPageComponent"]
      }, {
        path: 'chapter',
        component: _components_chapters_page_chapters_page_component__WEBPACK_IMPORTED_MODULE_5__["ChaptersPageComponent"]
      }, {
        path: 'users',
        component: _shared_components_users_page_users_page_component__WEBPACK_IMPORTED_MODULE_9__["UsersPageComponent"]
      }, {
        path: 'videos',
        component: _components_videos_page_videos_page_component__WEBPACK_IMPORTED_MODULE_4__["VideosPageComponent"]
      }, {
        path: 'public-room',
        component: _components_public_room_public_room_component__WEBPACK_IMPORTED_MODULE_7__["PublicRoomComponent"]
      }, {
        path: 'private-room',
        component: _components_private_room_private_room_component__WEBPACK_IMPORTED_MODULE_8__["PrivateRoomComponent"]
      }, {
        path: 'documents',
        component: _components_documents_page_documents_page_component__WEBPACK_IMPORTED_MODULE_11__["DocumentsPageComponent"]
      }, {
        path: 'upload-document',
        component: _components_upload_document_upload_document_component__WEBPACK_IMPORTED_MODULE_12__["UploadDocumentComponent"]
      }, {
        path: 'messages',
        component: _components_send_messages_send_messages_component__WEBPACK_IMPORTED_MODULE_16__["SendMessagesComponent"]
      }, {
        path: 'suggestions',
        component: _shared_components_suggestion_questions_suggestion_questions_component__WEBPACK_IMPORTED_MODULE_14__["SuggestionQuestionsComponent"]
      }, {
        path: 'suggestions/:questionId/answers',
        component: _shared_components_answers_answers_component__WEBPACK_IMPORTED_MODULE_15__["AnswersComponent"]
      }]
    }];

    var AdminDashboardRoutingModule = function AdminDashboardRoutingModule() {
      _classCallCheck(this, AdminDashboardRoutingModule);
    };

    AdminDashboardRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: AdminDashboardRoutingModule
    });
    AdminDashboardRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function AdminDashboardRoutingModule_Factory(t) {
        return new (t || AdminDashboardRoutingModule)();
      },
      imports: [[_shared_shared_module__WEBPACK_IMPORTED_MODULE_10__["SharedModule"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AdminDashboardRoutingModule, {
        imports: [_shared_shared_module__WEBPACK_IMPORTED_MODULE_10__["SharedModule"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AdminDashboardRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          imports: [_shared_shared_module__WEBPACK_IMPORTED_MODULE_10__["SharedModule"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
          exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        }]
      }], null, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/admin-dashboard.component.ts":
  /*!**************************************************************!*\
    !*** ./src/app/admin-dashboard/admin-dashboard.component.ts ***!
    \**************************************************************/

  /*! exports provided: AdminDashboardComponent */

  /***/
  function srcAppAdminDashboardAdminDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminDashboardComponent", function () {
      return AdminDashboardComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _auth_services_auth_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../auth/services/auth.service */
    "./src/app/auth/services/auth.service.ts");
    /* harmony import */


    var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/toolbar */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material/sidenav */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js");
    /* harmony import */


    var _shared_components_side_menu_side_menu_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../shared/components/side-menu/side-menu.component */
    "./src/app/shared/components/side-menu/side-menu.component.ts");

    var AdminDashboardComponent =
    /*#__PURE__*/
    function () {
      function AdminDashboardComponent(authService) {
        _classCallCheck(this, AdminDashboardComponent);

        this.authService = authService;
        this.menuList = [{
          link: '/dashboard',
          title: 'Dashboard',
          icon: 'dashboard'
        }, {
          link: '/dashboard/users',
          title: 'Manage Users',
          icon: 'supervised_user_circle'
        }, {
          link: '/dashboard/public-room',
          title: 'Live Stream',
          icon: 'live_tv'
        }, {
          link: '/dashboard/private-room',
          title: 'Private Room',
          icon: 'video_call'
        }, {
          link: '/dashboard/documents',
          title: 'Upload Documents',
          icon: 'attach_file'
        }, {
          link: '/dashboard/suggestions',
          title: ' Manage Suggestions',
          icon: 'question_answer'
        }, {
          link: '/dashboard/messages',
          title: 'Send messages',
          icon: 'message'
        }];
        this.showFiller = false;
      }

      _createClass(AdminDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onLogout",
        value: function onLogout() {
          this.authService.logout();
        }
      }]);

      return AdminDashboardComponent;
    }();

    AdminDashboardComponent.ɵfac = function AdminDashboardComponent_Factory(t) {
      return new (t || AdminDashboardComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_1__["AuthService"]));
    };

    AdminDashboardComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: AdminDashboardComponent,
      selectors: [["app-admin-dashboard"]],
      decls: 10,
      vars: 1,
      consts: [["routerLink", "/dashboard"], [1, "example-container"], ["mode", "side", "opened", "", 1, "example-sidenav"], ["drawer", ""], [3, "menuList"], [1, "dashboard-container"]],
      template: function AdminDashboardComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-toolbar");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-toolbar-row");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "a", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Admin Dashboard");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "mat-drawer-container", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mat-drawer", 2, 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "app-side-menu", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "router-outlet");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("menuList", ctx.menuList);
        }
      },
      directives: [_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_2__["MatToolbar"], _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_2__["MatToolbarRow"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterLinkWithHref"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_4__["MatDrawerContainer"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_4__["MatDrawer"], _shared_components_side_menu_side_menu_component__WEBPACK_IMPORTED_MODULE_5__["SideMenuComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterOutlet"]],
      styles: [".example-container[_ngcontent-%COMP%] {\n  width: 100%;\n  height: calc(100% - 64px);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n}\n\n.dashboard-container[_ngcontent-%COMP%] {\n  height: calc(100% - 64px);\n}\n\n.mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n  height: 64px;\n  background: #4CAF50;\n  text-align: center;\n  color: #fff;\n}\n\nmat-toolbar-row[_ngcontent-%COMP%] {\n  justify-content: center;\n}\n\n.mat-list-item-content.active[_ngcontent-%COMP%] {\n  background: #4caf50;\n  color: #fff;\n}\n\n.example-sidenav-content[_ngcontent-%COMP%] {\n  display: flex;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n}\n\n.example-sidenav[_ngcontent-%COMP%] {\n  width: 223px;\n}\n\n.dashboard-container[_ngcontent-%COMP%] {\n  padding: 16px;\n  padding-top: 24px;\n}\n\na[_ngcontent-%COMP%] {\n  text-decoration: none;\n  color: inherit;\n}\n\n.example-spacer[_ngcontent-%COMP%] {\n  flex: 1 1 auto;\n}\n\n.logout-button[_ngcontent-%COMP%] {\n  cursor: pointer;\n}\n\n.logout-button[_ngcontent-%COMP%]:hover {\n  color: #2B78FE;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSx5QkFBQTtFQUNBLG9DQUFBO0FDQ0Y7O0FERUE7RUFDRSx5QkFBQTtBQ0NGOztBREVBO0VBQ0ksWUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0FDQ0o7O0FEQ0E7RUFDRSx1QkFBQTtBQ0VGOztBREFBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDR0o7O0FEQUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUNHRjs7QURBQTtFQUNFLFlBQUE7QUNHRjs7QURBQTtFQUNFLGFBQUE7RUFDQSxpQkFBQTtBQ0dGOztBREFBO0VBQ0UscUJBQUE7RUFDQSxjQUFBO0FDR0Y7O0FEQUE7RUFDRSxjQUFBO0FDR0Y7O0FEQUE7RUFDRSxlQUFBO0FDR0Y7O0FEQUE7RUFDRSxjQUFBO0FDR0YiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvYWRtaW4tZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gNjRweCk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLmRhc2hib2FyZC1jb250YWluZXIge1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDY0cHgpO1xufVxuXG4ubWF0LXRvb2xiYXItcm93LCAubWF0LXRvb2xiYXItc2luZ2xlLXJvdyB7XG4gICAgaGVpZ2h0OiA2NHB4O1xuICAgIGJhY2tncm91bmQ6ICM0Q0FGNTA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAjZmZmO1xufVxubWF0LXRvb2xiYXItcm93IHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4ubWF0LWxpc3QtaXRlbS1jb250ZW50LmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZDogIzRjYWY1MDtcbiAgICBjb2xvcjogI2ZmZjtcbn1cblxuLmV4YW1wbGUtc2lkZW5hdi1jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmV4YW1wbGUtc2lkZW5hdiB7XG4gIHdpZHRoOiAyMjNweDtcbn1cblxuLmRhc2hib2FyZC1jb250YWluZXIge1xuICBwYWRkaW5nOiAxNnB4O1xuICBwYWRkaW5nLXRvcDoyNHB4O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn0gXG5cbi5leGFtcGxlLXNwYWNlciB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4ubG9nb3V0LWJ1dHRvbiB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmxvZ291dC1idXR0b246aG92ZXIge1xuICBjb2xvcjogIzJCNzhGRTtcbn1cbiIsIi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDY0cHgpO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbi5kYXNoYm9hcmQtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA2NHB4KTtcbn1cblxuLm1hdC10b29sYmFyLXJvdywgLm1hdC10b29sYmFyLXNpbmdsZS1yb3cge1xuICBoZWlnaHQ6IDY0cHg7XG4gIGJhY2tncm91bmQ6ICM0Q0FGNTA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNmZmY7XG59XG5cbm1hdC10b29sYmFyLXJvdyB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubWF0LWxpc3QtaXRlbS1jb250ZW50LmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICM0Y2FmNTA7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uZXhhbXBsZS1zaWRlbmF2LWNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZXhhbXBsZS1zaWRlbmF2IHtcbiAgd2lkdGg6IDIyM3B4O1xufVxuXG4uZGFzaGJvYXJkLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLmV4YW1wbGUtc3BhY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi5sb2dvdXQtYnV0dG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ubG9nb3V0LWJ1dHRvbjpob3ZlciB7XG4gIGNvbG9yOiAjMkI3OEZFO1xufSJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AdminDashboardComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-admin-dashboard',
          templateUrl: './admin-dashboard.component.html',
          styleUrls: ['./admin-dashboard.component.scss']
        }]
      }], function () {
        return [{
          type: _auth_services_auth_service__WEBPACK_IMPORTED_MODULE_1__["AuthService"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/admin-dashboard.module.ts":
  /*!***********************************************************!*\
    !*** ./src/app/admin-dashboard/admin-dashboard.module.ts ***!
    \***********************************************************/

  /*! exports provided: AdminDashboardModule */

  /***/
  function srcAppAdminDashboardAdminDashboardModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminDashboardModule", function () {
      return AdminDashboardModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _admin_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./admin-dashboard-routing.module */
    "./src/app/admin-dashboard/admin-dashboard-routing.module.ts");
    /* harmony import */


    var _admin_dashboard_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./admin-dashboard.component */
    "./src/app/admin-dashboard/admin-dashboard.component.ts");
    /* harmony import */


    var _components_resource_resource_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./components/resource/resource.component */
    "./src/app/admin-dashboard/components/resource/resource.component.ts");
    /* harmony import */


    var _components_resource_actions_resource_actions_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./components/resource-actions/resource-actions.component */
    "./src/app/admin-dashboard/components/resource-actions/resource-actions.component.ts");
    /* harmony import */


    var _components_create_resource_create_resource_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./components/create-resource/create-resource.component */
    "./src/app/admin-dashboard/components/create-resource/create-resource.component.ts");
    /* harmony import */


    var _components_create_resource_form_create_resource_form_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./components/create-resource-form/create-resource-form.component */
    "./src/app/admin-dashboard/components/create-resource-form/create-resource-form.component.ts");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _components_update_resource_form_update_resource_form_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./components/update-resource-form/update-resource-form.component */
    "./src/app/admin-dashboard/components/update-resource-form/update-resource-form.component.ts");
    /* harmony import */


    var _components_update_resource_dialog_update_resource_dialog_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./components/update-resource-dialog/update-resource-dialog.component */
    "./src/app/admin-dashboard/components/update-resource-dialog/update-resource-dialog.component.ts");
    /* harmony import */


    var _components_classes_page_classes_page_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./components/classes-page/classes-page.component */
    "./src/app/admin-dashboard/components/classes-page/classes-page.component.ts");
    /* harmony import */


    var _components_videos_page_videos_page_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./components/videos-page/videos-page.component */
    "./src/app/admin-dashboard/components/videos-page/videos-page.component.ts");
    /* harmony import */


    var _components_boolean_boolean_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./components/boolean/boolean.component */
    "./src/app/admin-dashboard/components/boolean/boolean.component.ts");
    /* harmony import */


    var _components_create_video_form_create_video_form_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./components/create-video-form/create-video-form.component */
    "./src/app/admin-dashboard/components/create-video-form/create-video-form.component.ts");
    /* harmony import */


    var _components_chapters_page_chapters_page_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./components/chapters-page/chapters-page.component */
    "./src/app/admin-dashboard/components/chapters-page/chapters-page.component.ts");
    /* harmony import */


    var _components_create_chapter_form_create_chapter_form_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./components/create-chapter-form/create-chapter-form.component */
    "./src/app/admin-dashboard/components/create-chapter-form/create-chapter-form.component.ts");
    /* harmony import */


    var _components_subjects_page_subjects_page_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./components/subjects-page/subjects-page.component */
    "./src/app/admin-dashboard/components/subjects-page/subjects-page.component.ts");
    /* harmony import */


    var _components_create_subject_form_create_subject_form_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./components/create-subject-form/create-subject-form.component */
    "./src/app/admin-dashboard/components/create-subject-form/create-subject-form.component.ts");
    /* harmony import */


    var _components_create_class_form_create_class_form_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./components/create-class-form/create-class-form.component */
    "./src/app/admin-dashboard/components/create-class-form/create-class-form.component.ts");
    /* harmony import */


    var _components_live_stream_live_stream_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./components/live-stream/live-stream.component */
    "./src/app/admin-dashboard/components/live-stream/live-stream.component.ts");
    /* harmony import */


    var _components_private_room_private_room_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./components/private-room/private-room.component */
    "./src/app/admin-dashboard/components/private-room/private-room.component.ts");
    /* harmony import */


    var _components_public_room_public_room_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./components/public-room/public-room.component */
    "./src/app/admin-dashboard/components/public-room/public-room.component.ts");
    /* harmony import */


    var _components_live_streamer_live_streamer_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./components/live-streamer/live-streamer.component */
    "./src/app/admin-dashboard/components/live-streamer/live-streamer.component.ts");
    /* harmony import */


    var _shared_shared_module__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ../shared/shared.module */
    "./src/app/shared/shared.module.ts");
    /* harmony import */


    var _components_documents_page_documents_page_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./components/documents-page/documents-page.component */
    "./src/app/admin-dashboard/components/documents-page/documents-page.component.ts");
    /* harmony import */


    var _components_upload_document_upload_document_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./components/upload-document/upload-document.component */
    "./src/app/admin-dashboard/components/upload-document/upload-document.component.ts");
    /* harmony import */


    var _components_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./components/dashboard/dashboard.component */
    "./src/app/admin-dashboard/components/dashboard/dashboard.component.ts");
    /* harmony import */


    var _components_send_messages_send_messages_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./components/send-messages/send-messages.component */
    "./src/app/admin-dashboard/components/send-messages/send-messages.component.ts");
    /* harmony import */


    var _components_multi_select_multi_select_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! ./components/multi-select/multi-select.component */
    "./src/app/admin-dashboard/components/multi-select/multi-select.component.ts");

    var AdminDashboardModule = function AdminDashboardModule() {
      _classCallCheck(this, AdminDashboardModule);
    };

    AdminDashboardModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: AdminDashboardModule
    });
    AdminDashboardModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function AdminDashboardModule_Factory(t) {
        return new (t || AdminDashboardModule)();
      },
      imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _shared_shared_module__WEBPACK_IMPORTED_MODULE_24__["SharedModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__["ReactiveFormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormsModule"], _admin_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_2__["AdminDashboardRoutingModule"]]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AdminDashboardModule, {
        declarations: [_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_3__["AdminDashboardComponent"], _components_resource_resource_component__WEBPACK_IMPORTED_MODULE_4__["ResourceComponent"], _components_resource_actions_resource_actions_component__WEBPACK_IMPORTED_MODULE_5__["ResourceActionsComponent"], _components_create_resource_create_resource_component__WEBPACK_IMPORTED_MODULE_6__["CreateResourceComponent"], _components_create_resource_form_create_resource_form_component__WEBPACK_IMPORTED_MODULE_7__["CreateResourceFormComponent"], _components_update_resource_form_update_resource_form_component__WEBPACK_IMPORTED_MODULE_9__["UpdateResourceFormComponent"], _components_update_resource_dialog_update_resource_dialog_component__WEBPACK_IMPORTED_MODULE_10__["UpdateResourceDialogComponent"], _components_classes_page_classes_page_component__WEBPACK_IMPORTED_MODULE_11__["ClassesPageComponent"], _components_videos_page_videos_page_component__WEBPACK_IMPORTED_MODULE_12__["VideosPageComponent"], _components_boolean_boolean_component__WEBPACK_IMPORTED_MODULE_13__["BooleanComponent"], _components_create_video_form_create_video_form_component__WEBPACK_IMPORTED_MODULE_14__["CreateVideoFormComponent"], _components_chapters_page_chapters_page_component__WEBPACK_IMPORTED_MODULE_15__["ChaptersPageComponent"], _components_create_chapter_form_create_chapter_form_component__WEBPACK_IMPORTED_MODULE_16__["CreateChapterFormComponent"], _components_subjects_page_subjects_page_component__WEBPACK_IMPORTED_MODULE_17__["SubjectsPageComponent"], _components_create_subject_form_create_subject_form_component__WEBPACK_IMPORTED_MODULE_18__["CreateSubjectFormComponent"], _components_create_class_form_create_class_form_component__WEBPACK_IMPORTED_MODULE_19__["CreateClassFormComponent"], _components_live_stream_live_stream_component__WEBPACK_IMPORTED_MODULE_20__["LiveStreamComponent"], _components_private_room_private_room_component__WEBPACK_IMPORTED_MODULE_21__["PrivateRoomComponent"], _components_public_room_public_room_component__WEBPACK_IMPORTED_MODULE_22__["PublicRoomComponent"], _components_live_streamer_live_streamer_component__WEBPACK_IMPORTED_MODULE_23__["LiveStreamerComponent"], _components_documents_page_documents_page_component__WEBPACK_IMPORTED_MODULE_25__["DocumentsPageComponent"], _components_upload_document_upload_document_component__WEBPACK_IMPORTED_MODULE_26__["UploadDocumentComponent"], _components_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_27__["DashboardComponent"], _components_send_messages_send_messages_component__WEBPACK_IMPORTED_MODULE_28__["SendMessagesComponent"], _components_multi_select_multi_select_component__WEBPACK_IMPORTED_MODULE_29__["MultiSelectComponent"]],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _shared_shared_module__WEBPACK_IMPORTED_MODULE_24__["SharedModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__["ReactiveFormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormsModule"], _admin_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_2__["AdminDashboardRoutingModule"]]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AdminDashboardModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          declarations: [_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_3__["AdminDashboardComponent"], _components_resource_resource_component__WEBPACK_IMPORTED_MODULE_4__["ResourceComponent"], _components_resource_actions_resource_actions_component__WEBPACK_IMPORTED_MODULE_5__["ResourceActionsComponent"], _components_create_resource_create_resource_component__WEBPACK_IMPORTED_MODULE_6__["CreateResourceComponent"], _components_create_resource_form_create_resource_form_component__WEBPACK_IMPORTED_MODULE_7__["CreateResourceFormComponent"], _components_update_resource_form_update_resource_form_component__WEBPACK_IMPORTED_MODULE_9__["UpdateResourceFormComponent"], _components_update_resource_dialog_update_resource_dialog_component__WEBPACK_IMPORTED_MODULE_10__["UpdateResourceDialogComponent"], _components_classes_page_classes_page_component__WEBPACK_IMPORTED_MODULE_11__["ClassesPageComponent"], _components_videos_page_videos_page_component__WEBPACK_IMPORTED_MODULE_12__["VideosPageComponent"], _components_boolean_boolean_component__WEBPACK_IMPORTED_MODULE_13__["BooleanComponent"], _components_create_video_form_create_video_form_component__WEBPACK_IMPORTED_MODULE_14__["CreateVideoFormComponent"], _components_chapters_page_chapters_page_component__WEBPACK_IMPORTED_MODULE_15__["ChaptersPageComponent"], _components_create_chapter_form_create_chapter_form_component__WEBPACK_IMPORTED_MODULE_16__["CreateChapterFormComponent"], _components_subjects_page_subjects_page_component__WEBPACK_IMPORTED_MODULE_17__["SubjectsPageComponent"], _components_create_subject_form_create_subject_form_component__WEBPACK_IMPORTED_MODULE_18__["CreateSubjectFormComponent"], _components_create_class_form_create_class_form_component__WEBPACK_IMPORTED_MODULE_19__["CreateClassFormComponent"], _components_live_stream_live_stream_component__WEBPACK_IMPORTED_MODULE_20__["LiveStreamComponent"], _components_private_room_private_room_component__WEBPACK_IMPORTED_MODULE_21__["PrivateRoomComponent"], _components_public_room_public_room_component__WEBPACK_IMPORTED_MODULE_22__["PublicRoomComponent"], _components_live_streamer_live_streamer_component__WEBPACK_IMPORTED_MODULE_23__["LiveStreamerComponent"], _components_documents_page_documents_page_component__WEBPACK_IMPORTED_MODULE_25__["DocumentsPageComponent"], _components_upload_document_upload_document_component__WEBPACK_IMPORTED_MODULE_26__["UploadDocumentComponent"], _components_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_27__["DashboardComponent"], _components_send_messages_send_messages_component__WEBPACK_IMPORTED_MODULE_28__["SendMessagesComponent"], _components_multi_select_multi_select_component__WEBPACK_IMPORTED_MODULE_29__["MultiSelectComponent"]],
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _shared_shared_module__WEBPACK_IMPORTED_MODULE_24__["SharedModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__["ReactiveFormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormsModule"], _admin_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_2__["AdminDashboardRoutingModule"]]
        }]
      }], null, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/boolean/boolean.component.ts":
  /*!*************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/boolean/boolean.component.ts ***!
    \*************************************************************************/

  /*! exports provided: BooleanComponent */

  /***/
  function srcAppAdminDashboardComponentsBooleanBooleanComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BooleanComponent", function () {
      return BooleanComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");

    function BooleanComponent_button_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "check");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BooleanComponent_button_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "clear");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    var BooleanComponent =
    /*#__PURE__*/
    function () {
      function BooleanComponent() {
        _classCallCheck(this, BooleanComponent);
      }

      _createClass(BooleanComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return BooleanComponent;
    }();

    BooleanComponent.ɵfac = function BooleanComponent_Factory(t) {
      return new (t || BooleanComponent)();
    };

    BooleanComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: BooleanComponent,
      selectors: [["app-boolean"]],
      inputs: {
        isValue: "isValue"
      },
      decls: 2,
      vars: 2,
      consts: [["mat-icon-button", "", "color", "success", "aria-label", "Example icon button with a home icon", 4, "ngIf"], ["mat-icon-button", "", "color", "warn", "aria-label", "Example icon button with a home icon", 4, "ngIf"], ["mat-icon-button", "", "color", "success", "aria-label", "Example icon button with a home icon"], ["mat-icon-button", "", "color", "warn", "aria-label", "Example icon button with a home icon"]],
      template: function BooleanComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, BooleanComponent_button_0_Template, 3, 0, "button", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BooleanComponent_button_1_Template, 3, 0, "button", 1);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isValue);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.isValue);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_2__["MatButton"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_3__["MatIcon"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2Jvb2xlYW4vYm9vbGVhbi5jb21wb25lbnQuc2NzcyJ9 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BooleanComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-boolean',
          templateUrl: './boolean.component.html',
          styleUrls: ['./boolean.component.scss']
        }]
      }], function () {
        return [];
      }, {
        isValue: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/chapters-page/chapters-page.component.ts":
  /*!*************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/chapters-page/chapters-page.component.ts ***!
    \*************************************************************************************/

  /*! exports provided: ChaptersPageComponent */

  /***/
  function srcAppAdminDashboardComponentsChaptersPageChaptersPageComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChaptersPageComponent", function () {
      return ChaptersPageComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var _create_chapter_form_create_chapter_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../create-chapter-form/create-chapter-form.component */
    "./src/app/admin-dashboard/components/create-chapter-form/create-chapter-form.component.ts");
    /* harmony import */


    var _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../shared/services/resource.service */
    "./src/app/shared/services/resource.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function ChaptersPageComponent_th_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Title ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ChaptersPageComponent_td_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r250 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", element_r250.title, " ");
      }
    }

    function ChaptersPageComponent_th_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Description ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ChaptersPageComponent_td_13_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r251 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", element_r251.description, " ");
      }
    }

    function ChaptersPageComponent_th_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Class ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ChaptersPageComponent_td_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r252 = ctx.$implicit;

        var ctx_r239 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r239.getClassName(element_r252["class"]), " ");
      }
    }

    function ChaptersPageComponent_th_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Subject ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ChaptersPageComponent_td_19_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r253 = ctx.$implicit;

        var ctx_r241 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r241.getSubjectName(element_r253.subject), " ");
      }
    }

    function ChaptersPageComponent_th_21_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Created on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ChaptersPageComponent_td_22_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r254 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r254.createdAt), " ");
      }
    }

    function ChaptersPageComponent_th_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Update on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ChaptersPageComponent_td_25_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r255 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r255.updatedAt), " ");
      }
    }

    function ChaptersPageComponent_th_27_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Actions ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ChaptersPageComponent_td_28_Template(rf, ctx) {
      if (rf & 1) {
        var _r258 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "button", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ChaptersPageComponent_td_28_Template_button_click_2_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r258);

          var element_r256 = ctx.$implicit;

          var ctx_r257 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r257.onEdit(element_r256);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4, "create");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "button", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ChaptersPageComponent_td_28_Template_button_click_5_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r258);

          var element_r256 = ctx.$implicit;

          var ctx_r259 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r259.onDelete(element_r256);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](7, "delete");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ChaptersPageComponent_tr_29_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 22);
      }
    }

    function ChaptersPageComponent_tr_30_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 23);
      }
    }

    var _c0 = function _c0() {
      return [5, 10, 20];
    };

    var ChaptersPageComponent =
    /*#__PURE__*/
    function () {
      function ChaptersPageComponent(resourceService, dialog) {
        _classCallCheck(this, ChaptersPageComponent);

        this.resourceService = resourceService;
        this.dialog = dialog;
        this.resourceUrl = '/chapters';
      }

      _createClass(ChaptersPageComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee() {
            var classesResponse, subjectsResponse, list;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return this.resourceService.fetchAll('/classes').toPromise();

                  case 2:
                    classesResponse = _context.sent;
                    this.classList = classesResponse['data'];
                    this.classMap = new Map(classesResponse['data'].map(function (clas) {
                      return [clas._id, clas.name];
                    }));
                    _context.next = 7;
                    return this.resourceService.fetchAll('/subjects').toPromise();

                  case 7:
                    subjectsResponse = _context.sent;
                    this.subjectList = subjectsResponse['data'];
                    this.subjectMap = new Map(subjectsResponse['data'].map(function (clas) {
                      return [clas._id, clas.title];
                    }));
                    _context.next = 12;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 12:
                    list = _context.sent;
                    this.displayedColumns = ['title', 'description', 'class', 'subject', 'createdAt', 'updatedAt', 'action'];
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](list['data']);
                    this.dataSource.paginator = this.paginator;

                  case 16:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this);
          }));
        }
      }, {
        key: "reFetchResourceList",
        value: function reFetchResourceList() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee2() {
            var list;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 2:
                    list = _context2.sent;
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](list['data']);

                  case 4:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2, this);
          }));
        }
      }, {
        key: "getClassName",
        value: function getClassName(classId) {
          console.log(this.classMap[classId]);
          return this.classMap.get(classId) || 'Class has been deleted';
        }
      }, {
        key: "getSubjectName",
        value: function getSubjectName(classId) {
          console.log(this.subjectMap[classId]);
          return this.subjectMap.get(classId) || 'Subject has been deleted';
        }
      }, {
        key: "openDialogue",
        value: function openDialogue(chapter) {
          var _this = this;

          var dialogRef = this.dialog.open(_create_chapter_form_create_chapter_form_component__WEBPACK_IMPORTED_MODULE_4__["CreateChapterFormComponent"], {
            width: '600px',
            data: {
              resourceUrl: this.resourceUrl,
              classList: this.classList,
              subjectList: this.subjectList,
              chapter: chapter
            }
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this.reFetchResourceList();
          });
        }
      }, {
        key: "onAddResource",
        value: function onAddResource() {
          var video = {
            _id: '',
            title: '',
            description: '',
            "class": '',
            subject: ''
          };
          this.openDialogue(video);
        }
      }, {
        key: "onUpdate",
        value: function onUpdate() {
          this.reFetchResourceList();
        }
      }, {
        key: "onDelete",
        value: function onDelete(resource) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee3() {
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    _context3.next = 2;
                    return this.resourceService["delete"](this.resourceUrl, resource).toPromise();

                  case 2:
                    this.reFetchResourceList();

                  case 3:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3, this);
          }));
        }
      }, {
        key: "onEdit",
        value: function onEdit(element) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee4() {
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    this.openDialogue(element);

                  case 1:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4, this);
          }));
        }
      }]);

      return ChaptersPageComponent;
    }();

    ChaptersPageComponent.ɵfac = function ChaptersPageComponent_Factory(t) {
      return new (t || ChaptersPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]));
    };

    ChaptersPageComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: ChaptersPageComponent,
      selectors: [["app-chapters-page"]],
      viewQuery: function ChaptersPageComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstaticViewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
        }
      },
      inputs: {
        resourceUrl: "resourceUrl"
      },
      decls: 32,
      vars: 5,
      consts: [[1, "mat-elevation-z8"], [1, "resource-actions-panel"], [1, "table-heading"], ["mat-icon-button", "", "color", "warn", "mat-mini-fab", "", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-table", "", 3, "dataSource"], ["matColumnDef", "title"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "description"], ["matColumnDef", "class"], ["matColumnDef", "subject"], ["matColumnDef", "createdAt"], ["matColumnDef", "updatedAt"], ["matColumnDef", "action", "sticky", "true"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["mat-header-cell", ""], ["mat-cell", ""], [1, "example-flex-container2"], ["mat-icon-button", "", "color", "primary", "aria-label", "Example icon button with a vertical three dot icon", 3, "click"], ["mat-icon-button", "", "color", "warn", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-header-row", ""], ["mat-row", ""]],
      template: function ChaptersPageComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "h3", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, " Chapters ");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "button", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ChaptersPageComponent_Template_button_click_4_listener() {
            return ctx.onAddResource();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "add");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "table", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](8, 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, ChaptersPageComponent_th_9_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](10, ChaptersPageComponent_td_10_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](11, 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](12, ChaptersPageComponent_th_12_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](13, ChaptersPageComponent_td_13_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](14, 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, ChaptersPageComponent_th_15_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](16, ChaptersPageComponent_td_16_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](17, 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](18, ChaptersPageComponent_th_18_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](19, ChaptersPageComponent_td_19_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](20, 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](21, ChaptersPageComponent_th_21_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](22, ChaptersPageComponent_td_22_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](23, 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](24, ChaptersPageComponent_th_24_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](25, ChaptersPageComponent_td_25_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](26, 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](27, ChaptersPageComponent_th_27_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](28, ChaptersPageComponent_td_28_Template, 8, 0, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](29, ChaptersPageComponent_tr_29_Template, 1, 0, "tr", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](30, ChaptersPageComponent_tr_30_Template, 1, 0, "tr", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](31, "mat-paginator", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("dataSource", ctx.dataSource);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](22);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](4, _c0));
        }
      },
      directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_7__["MatButton"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__["MatIcon"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRow"]],
      pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"]],
      styles: ["table[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.resource-actions-panel[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY2hhcHRlcnMtcGFnZS9jaGFwdGVycy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9jaGFwdGVycy1wYWdlL2NoYXB0ZXJzLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxrQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY2hhcHRlcnMtcGFnZS9jaGFwdGVycy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnJlc291cmNlLWFjdGlvbnMtcGFuZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbn1cbiIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5yZXNvdXJjZS1hY3Rpb25zLXBhbmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG59Il19 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](ChaptersPageComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-chapters-page',
          templateUrl: './chapters-page.component.html',
          styleUrls: ['./chapters-page.component.scss']
        }]
      }], function () {
        return [{
          type: _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
        }];
      }, {
        resourceUrl: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        paginator: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"],
          args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
            "static": true
          }]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/classes-page/classes-page.component.ts":
  /*!***********************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/classes-page/classes-page.component.ts ***!
    \***********************************************************************************/

  /*! exports provided: ClassesPageComponent */

  /***/
  function srcAppAdminDashboardComponentsClassesPageClassesPageComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ClassesPageComponent", function () {
      return ClassesPageComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var _create_class_form_create_class_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../create-class-form/create-class-form.component */
    "./src/app/admin-dashboard/components/create-class-form/create-class-form.component.ts");
    /* harmony import */


    var _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../shared/services/resource.service */
    "./src/app/shared/services/resource.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function ClassesPageComponent_th_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Name ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ClassesPageComponent_td_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r161 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", element_r161.name, " ");
      }
    }

    function ClassesPageComponent_th_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Created on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ClassesPageComponent_td_13_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r162 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r162.createdAt), " ");
      }
    }

    function ClassesPageComponent_th_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Update on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ClassesPageComponent_td_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r163 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r163.updatedAt), " ");
      }
    }

    function ClassesPageComponent_th_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Actions ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ClassesPageComponent_td_19_Template(rf, ctx) {
      if (rf & 1) {
        var _r166 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "button", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ClassesPageComponent_td_19_Template_button_click_2_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r166);

          var element_r164 = ctx.$implicit;

          var ctx_r165 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r165.onEdit(element_r164);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4, "create");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "button", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ClassesPageComponent_td_19_Template_button_click_5_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r166);

          var element_r164 = ctx.$implicit;

          var ctx_r167 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r167.onDelete(element_r164);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](7, "delete");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ClassesPageComponent_tr_20_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 19);
      }
    }

    function ClassesPageComponent_tr_21_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 20);
      }
    }

    var _c0 = function _c0() {
      return [5, 10, 20];
    };

    var ClassesPageComponent =
    /*#__PURE__*/
    function () {
      function ClassesPageComponent(resourceService, dialog) {
        _classCallCheck(this, ClassesPageComponent);

        this.resourceService = resourceService;
        this.dialog = dialog;
        this.columnConfig = [{
          columnName: '_id',
          title: 'Id'
        }, {
          columnName: 'name',
          title: 'Name'
        }, {
          columnName: 'createdAt',
          title: 'Created on'
        }, {
          columnName: 'updatedAt',
          title: 'Updated On'
        }];
        this.resourceUrl = '/classes';
      }

      _createClass(ClassesPageComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee5() {
            var list;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    _context5.next = 2;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 2:
                    list = _context5.sent;
                    this.displayedColumns = ['name', 'createdAt', 'updatedAt', 'action'];
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](list['data']);
                    this.dataSource.paginator = this.paginator;

                  case 6:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5, this);
          }));
        }
      }, {
        key: "reFetchResourceList",
        value: function reFetchResourceList() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee6() {
            var list;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    _context6.next = 2;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 2:
                    list = _context6.sent;
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](list['data']);

                  case 4:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6, this);
          }));
        }
      }, {
        key: "openDialogue",
        value: function openDialogue(classObj) {
          var _this2 = this;

          var dialogRef = this.dialog.open(_create_class_form_create_class_form_component__WEBPACK_IMPORTED_MODULE_4__["CreateClassFormComponent"], {
            width: '600px',
            data: {
              resourceUrl: this.resourceUrl,
              classObj: classObj
            }
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this2.reFetchResourceList();
          });
        }
      }, {
        key: "onAddResource",
        value: function onAddResource() {
          var classObj = {
            _id: '',
            name: '',
            subject: ''
          };
          this.openDialogue(classObj);
        }
      }, {
        key: "onUpdate",
        value: function onUpdate() {
          this.reFetchResourceList();
        }
      }, {
        key: "onDelete",
        value: function onDelete(resource) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee7() {
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    _context7.next = 2;
                    return this.resourceService["delete"](this.resourceUrl, resource).toPromise();

                  case 2:
                    this.reFetchResourceList();

                  case 3:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7, this);
          }));
        }
      }, {
        key: "onEdit",
        value: function onEdit(element) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee8() {
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    this.openDialogue(element);

                  case 1:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8, this);
          }));
        }
      }]);

      return ClassesPageComponent;
    }();

    ClassesPageComponent.ɵfac = function ClassesPageComponent_Factory(t) {
      return new (t || ClassesPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]));
    };

    ClassesPageComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: ClassesPageComponent,
      selectors: [["app-classes-page"]],
      viewQuery: function ClassesPageComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstaticViewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
        }
      },
      inputs: {
        resourceUrl: "resourceUrl"
      },
      decls: 23,
      vars: 5,
      consts: [[1, "mat-elevation-z8"], [1, "resource-actions-panel"], [1, "table-heading"], ["mat-icon-button", "", "color", "warn", "mat-mini-fab", "", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-table", "", 3, "dataSource"], ["matColumnDef", "name"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "createdAt"], ["matColumnDef", "updatedAt"], ["matColumnDef", "action", "sticky", "true"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["mat-header-cell", ""], ["mat-cell", ""], [1, "example-flex-container2"], ["mat-icon-button", "", "color", "primary", "aria-label", "Example icon button with a vertical three dot icon", 3, "click"], ["mat-icon-button", "", "color", "warn", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-header-row", ""], ["mat-row", ""]],
      template: function ClassesPageComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "h3", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, " Classes ");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "button", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ClassesPageComponent_Template_button_click_4_listener() {
            return ctx.onAddResource();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "add");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "table", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](8, 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, ClassesPageComponent_th_9_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](10, ClassesPageComponent_td_10_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](11, 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](12, ClassesPageComponent_th_12_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](13, ClassesPageComponent_td_13_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](14, 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, ClassesPageComponent_th_15_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](16, ClassesPageComponent_td_16_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](17, 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](18, ClassesPageComponent_th_18_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](19, ClassesPageComponent_td_19_Template, 8, 0, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](20, ClassesPageComponent_tr_20_Template, 1, 0, "tr", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](21, ClassesPageComponent_tr_21_Template, 1, 0, "tr", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](22, "mat-paginator", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("dataSource", ctx.dataSource);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](4, _c0));
        }
      },
      directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_7__["MatButton"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__["MatIcon"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRow"]],
      pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"]],
      styles: ["table[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.resource-actions-panel[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY2xhc3Nlcy1wYWdlL2NsYXNzZXMtcGFnZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY2xhc3Nlcy1wYWdlL2NsYXNzZXMtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLGtCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9jbGFzc2VzLXBhZ2UvY2xhc3Nlcy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnJlc291cmNlLWFjdGlvbnMtcGFuZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbn1cbiIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5yZXNvdXJjZS1hY3Rpb25zLXBhbmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG59Il19 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](ClassesPageComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-classes-page',
          templateUrl: './classes-page.component.html',
          styleUrls: ['./classes-page.component.scss']
        }]
      }], function () {
        return [{
          type: _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
        }];
      }, {
        resourceUrl: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        paginator: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"],
          args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
            "static": true
          }]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/create-chapter-form/create-chapter-form.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/create-chapter-form/create-chapter-form.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: CreateChapterFormComponent */

  /***/
  function srcAppAdminDashboardComponentsCreateChapterFormCreateChapterFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CreateChapterFormComponent", function () {
      return CreateChapterFormComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! lodash */
    "./node_modules/lodash/lodash.js");
    /* harmony import */


    var lodash__WEBPACK_IMPORTED_MODULE_4___default =
    /*#__PURE__*/
    __webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);
    /* harmony import */


    var src_app_services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/services/api.service */
    "./src/app/services/api.service.ts");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js");

    function CreateChapterFormComponent_mat_option_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mat-option", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var classs_r232 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", classs_r232._id);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", classs_r232.name, " ");
      }
    }

    function CreateChapterFormComponent_mat_option_17_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mat-option", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var subject_r233 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", subject_r233._id);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", subject_r233.title, " ");
      }
    }

    function CreateChapterFormComponent_p_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r229 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r229.error, " ");
      }
    }

    function CreateChapterFormComponent_ng_container_29_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var ctx_r230 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r230.form.value._id == "" ? "Create" : "Update", " ");
      }
    }

    function CreateChapterFormComponent_ng_container_30_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var ctx_r231 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r231.form.value._id == "" ? "Creating..." : "Updating...", " ");
      }
    }

    var CreateChapterFormComponent =
    /*#__PURE__*/
    function () {
      function CreateChapterFormComponent(fb, api, dialogRef, data) {
        _classCallCheck(this, CreateChapterFormComponent);

        this.fb = fb;
        this.api = api;
        this.dialogRef = dialogRef;
        this.data = data;
        this.isUploading = false;
        this.filteredSubjectList = [];
      }

      _createClass(CreateChapterFormComponent, [{
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this3 = this;

          this.initialValues = this.data.chapter;
          this.form = this.fb.group({
            _id: [this.initialValues._id],
            title: [this.initialValues.title, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            description: [this.initialValues.description, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            "class": [this.initialValues["class"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            subject: [this.initialValues.subject, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
          });
          this.form.controls["class"].valueChanges.subscribe(function (classId) {
            _this3.setFilteredSubjectList({
              "class": classId
            });
          });
        }
      }, {
        key: "setFilteredSubjectList",
        value: function setFilteredSubjectList(filterOptions) {
          this.filteredSubjectList = Object(lodash__WEBPACK_IMPORTED_MODULE_4__["filter"])(this.data.subjectList, filterOptions);
        }
      }, {
        key: "onReset",
        value: function onReset() {
          this.form.reset(this.initialValues);
        }
      }, {
        key: "submit",
        value: function submit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee9() {
            var formValues, response, _id, othr, url;

            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    if (!this.form.valid) {
                      _context9.next = 16;
                      break;
                    }

                    formValues = this.form.value;
                    _id = formValues._id, othr = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(formValues, ["_id"]);
                    this.isUploading = true;

                    if (!(formValues._id == '')) {
                      _context9.next = 10;
                      break;
                    }

                    _context9.next = 7;
                    return this.api.post(this.data.resourceUrl, othr).toPromise();

                  case 7:
                    response = _context9.sent;
                    _context9.next = 14;
                    break;

                  case 10:
                    url = "".concat(this.data.resourceUrl, "/").concat(_id);
                    _context9.next = 13;
                    return this.api.put(url, othr).toPromise();

                  case 13:
                    response = _context9.sent;

                  case 14:
                    this.isUploading = false;
                    this.dialogRef.close(response);

                  case 16:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9, this);
          }));
        }
      }]);

      return CreateChapterFormComponent;
    }();

    CreateChapterFormComponent.ɵfac = function CreateChapterFormComponent_Factory(t) {
      return new (t || CreateChapterFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]));
    };

    CreateChapterFormComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CreateChapterFormComponent,
      selectors: [["app-create-chapter-form"]],
      inputs: {
        error: "error"
      },
      decls: 31,
      vars: 9,
      consts: [["mat-dialog-content", ""], [3, "formGroup", "ngSubmit"], ["formControlName", "class"], [3, "value", 4, "ngFor", "ngForOf"], ["formControlName", "subject"], ["type", "text", "matInput", "", "placeholder", "Title", "formControlName", "title"], ["type", "text", "matInput", "", "placeholder", "Description", "formControlName", "description"], ["class", "error", 4, "ngIf"], [1, "button"], ["type", "button", "mat-button", "", 3, "disabled", "click"], ["type", "submit", "mat-button", "", 3, "disabled"], [4, "ngIf"], [3, "value"], [1, "error"]],
      template: function CreateChapterFormComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "mat-card");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "mat-card-title");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "mat-card-content");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "form", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngSubmit", function CreateChapterFormComponent_Template_form_ngSubmit_5_listener() {
            return ctx.submit();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](9, "Class");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "mat-select", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](11, CreateChapterFormComponent_mat_option_11_Template, 2, 2, "mat-option", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](15, "Subject");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](16, "mat-select", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](17, CreateChapterFormComponent_mat_option_17_Template, 2, 2, "mat-option", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](20, "input", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](21, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](23, "input", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](24, CreateChapterFormComponent_p_24_Template, 2, 1, "p", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](25, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](26, "button", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CreateChapterFormComponent_Template_button_click_26_listener() {
            return ctx.onReset();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](27, "Reset");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](28, "button", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](29, CreateChapterFormComponent_ng_container_29_Template, 2, 1, "ng-container", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](30, CreateChapterFormComponent_ng_container_30_Template, 2, 1, "ng-container", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx.form.value._id == "" ? "Create Chapter" : "Update Chapter");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.data.classList);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.filteredSubjectList);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.error);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", !ctx.form.touched);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", ctx.form.invalid || ctx.isUploading);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.isUploading);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.isUploading);
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogContent"], _angular_material_card__WEBPACK_IMPORTED_MODULE_6__["MatCard"], _angular_material_card__WEBPACK_IMPORTED_MODULE_6__["MatCardTitle"], _angular_material_card__WEBPACK_IMPORTED_MODULE_6__["MatCardContent"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_7__["MatFormField"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_7__["MatLabel"], _angular_material_select__WEBPACK_IMPORTED_MODULE_8__["MatSelect"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], _angular_common__WEBPACK_IMPORTED_MODULE_9__["NgForOf"], _angular_material_input__WEBPACK_IMPORTED_MODULE_10__["MatInput"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], _angular_common__WEBPACK_IMPORTED_MODULE_9__["NgIf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_11__["MatButton"], _angular_material_core__WEBPACK_IMPORTED_MODULE_12__["MatOption"]],
      styles: [".mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.error[_ngcontent-%COMP%] {\n  padding: 16px;\n  width: 300px;\n  color: white;\n  background-color: red;\n}\n\n.button[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.forgot-pass-link[_ngcontent-%COMP%] {\n  align-self: center;\n  padding: 0 16px;\n  text-decoration: underline;\n  font-size: smaller;\n  font-style: italic;\n  line-height: 36px;\n}\n\n.mat-card[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: unset;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY3JlYXRlLWNoYXB0ZXItZm9ybS9jcmVhdGUtY2hhcHRlci1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9jcmVhdGUtY2hhcHRlci1mb3JtL2NyZWF0ZS1jaGFwdGVyLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxxQkFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLHlCQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSwwQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQ0NGOztBREVBO0VBQ0UsaUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2NyZWF0ZS1jaGFwdGVyLWZvcm0vY3JlYXRlLWNoYXB0ZXItZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXJyb3Ige1xuICBwYWRkaW5nOiAxNnB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4uYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmZvcmdvdC1wYXNzLWxpbmsge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBsaW5lLWhlaWdodDogMzZweDtcbn1cblxuLm1hdC1jYXJkOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogdW5zZXQ7XG59IiwiLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5lcnJvciB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHdpZHRoOiAzMDBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5idXR0b24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4uZm9yZ290LXBhc3MtbGluayB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC1zaXplOiBzbWFsbGVyO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xufVxuXG4ubWF0LWNhcmQ6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSkge1xuICBib3gtc2hhZG93OiB1bnNldDtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CreateChapterFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-create-chapter-form',
          templateUrl: './create-chapter-form.component.html',
          styleUrls: ['./create-chapter-form.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
        }, {
          type: src_app_services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]]
          }]
        }];
      }, {
        error: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/create-class-form/create-class-form.component.ts":
  /*!*********************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/create-class-form/create-class-form.component.ts ***!
    \*********************************************************************************************/

  /*! exports provided: CreateClassFormComponent */

  /***/
  function srcAppAdminDashboardComponentsCreateClassFormCreateClassFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CreateClassFormComponent", function () {
      return CreateClassFormComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var src_app_services_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/services/api.service */
    "./src/app/services/api.service.ts");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");

    function CreateClassFormComponent_p_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r148 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r148.error, " ");
      }
    }

    function CreateClassFormComponent_ng_container_14_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var ctx_r149 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r149.form.value._id == "" ? "Create" : "Update", " ");
      }
    }

    function CreateClassFormComponent_ng_container_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var ctx_r150 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r150.form.value._id == "" ? "Creating..." : "Updating...", " ");
      }
    }

    var CreateClassFormComponent =
    /*#__PURE__*/
    function () {
      function CreateClassFormComponent(fb, api, dialogRef, data) {
        _classCallCheck(this, CreateClassFormComponent);

        this.fb = fb;
        this.api = api;
        this.dialogRef = dialogRef;
        this.data = data;
        this.isUploading = false;
      }

      _createClass(CreateClassFormComponent, [{
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {
          this.initialValues = this.data.classObj;
          this.form = this.fb.group({
            _id: [this.initialValues._id],
            name: [this.initialValues.name, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
          });
        }
      }, {
        key: "onReset",
        value: function onReset() {
          this.form.reset(this.initialValues);
        }
      }, {
        key: "submit",
        value: function submit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee10() {
            var formValues, response, _id, othr, url;

            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    if (!this.form.valid) {
                      _context10.next = 16;
                      break;
                    }

                    formValues = this.form.value;
                    _id = formValues._id, othr = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(formValues, ["_id"]);
                    this.isUploading = true;

                    if (!(formValues._id == '')) {
                      _context10.next = 10;
                      break;
                    }

                    _context10.next = 7;
                    return this.api.post(this.data.resourceUrl, othr).toPromise();

                  case 7:
                    response = _context10.sent;
                    _context10.next = 14;
                    break;

                  case 10:
                    url = "".concat(this.data.resourceUrl, "/").concat(_id);
                    _context10.next = 13;
                    return this.api.put(url, othr).toPromise();

                  case 13:
                    response = _context10.sent;

                  case 14:
                    this.isUploading = false;
                    this.dialogRef.close(response);

                  case 16:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10, this);
          }));
        }
      }]);

      return CreateClassFormComponent;
    }();

    CreateClassFormComponent.ɵfac = function CreateClassFormComponent_Factory(t) {
      return new (t || CreateClassFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]));
    };

    CreateClassFormComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CreateClassFormComponent,
      selectors: [["app-create-class-form"]],
      inputs: {
        error: "error"
      },
      decls: 16,
      vars: 7,
      consts: [["mat-dialog-content", ""], [3, "formGroup", "ngSubmit"], ["type", "text", "matInput", "", "placeholder", "Name", "formControlName", "name"], ["class", "error", 4, "ngIf"], [1, "button"], ["type", "button", "mat-button", "", 3, "disabled", "click"], ["type", "submit", "mat-button", "", 3, "disabled"], [4, "ngIf"], [1, "error"]],
      template: function CreateClassFormComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "mat-card");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "mat-card-title");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "mat-card-content");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "form", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngSubmit", function CreateClassFormComponent_Template_form_ngSubmit_5_listener() {
            return ctx.submit();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](8, "input", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, CreateClassFormComponent_p_9_Template, 2, 1, "p", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](11, "button", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CreateClassFormComponent_Template_button_click_11_listener() {
            return ctx.onReset();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](12, "Reset");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "button", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](14, CreateClassFormComponent_ng_container_14_Template, 2, 1, "ng-container", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, CreateClassFormComponent_ng_container_15_Template, 2, 1, "ng-container", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx.form.value._id == "" ? "Create Class" : "Update Class");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.error);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", !ctx.form.touched);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", ctx.form.invalid || ctx.isUploading);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.isUploading);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.isUploading);
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogContent"], _angular_material_card__WEBPACK_IMPORTED_MODULE_5__["MatCard"], _angular_material_card__WEBPACK_IMPORTED_MODULE_5__["MatCardTitle"], _angular_material_card__WEBPACK_IMPORTED_MODULE_5__["MatCardContent"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_6__["MatFormField"], _angular_material_input__WEBPACK_IMPORTED_MODULE_7__["MatInput"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["NgIf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_9__["MatButton"]],
      styles: [".mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.error[_ngcontent-%COMP%] {\n  padding: 16px;\n  width: 300px;\n  color: white;\n  background-color: red;\n}\n\n.button[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.forgot-pass-link[_ngcontent-%COMP%] {\n  align-self: center;\n  padding: 0 16px;\n  text-decoration: underline;\n  font-size: smaller;\n  font-style: italic;\n  line-height: 36px;\n}\n\n.mat-card[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: unset;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY3JlYXRlLWNsYXNzLWZvcm0vY3JlYXRlLWNsYXNzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2NyZWF0ZS1jbGFzcy1mb3JtL2NyZWF0ZS1jbGFzcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EscUJBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0EsMEJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9jcmVhdGUtY2xhc3MtZm9ybS9jcmVhdGUtY2xhc3MtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXJyb3Ige1xuICBwYWRkaW5nOiAxNnB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4uYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmZvcmdvdC1wYXNzLWxpbmsge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBsaW5lLWhlaWdodDogMzZweDtcbn1cblxuLm1hdC1jYXJkOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogdW5zZXQ7XG59IiwiLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5lcnJvciB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHdpZHRoOiAzMDBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5idXR0b24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4uZm9yZ290LXBhc3MtbGluayB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC1zaXplOiBzbWFsbGVyO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xufVxuXG4ubWF0LWNhcmQ6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSkge1xuICBib3gtc2hhZG93OiB1bnNldDtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CreateClassFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-create-class-form',
          templateUrl: './create-class-form.component.html',
          styleUrls: ['./create-class-form.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
        }, {
          type: src_app_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]]
          }]
        }];
      }, {
        error: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/create-resource-form/create-resource-form.component.ts":
  /*!***************************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/create-resource-form/create-resource-form.component.ts ***!
    \***************************************************************************************************/

  /*! exports provided: CreateResourceFormComponent */

  /***/
  function srcAppAdminDashboardComponentsCreateResourceFormCreateResourceFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CreateResourceFormComponent", function () {
      return CreateResourceFormComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");

    function CreateResourceFormComponent_p_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "p", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r331 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r331.error, " ");
      }
    }

    var CreateResourceFormComponent =
    /*#__PURE__*/
    function () {
      function CreateResourceFormComponent(fb) {
        _classCallCheck(this, CreateResourceFormComponent);

        this.fb = fb;
        this.onSubmit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass(CreateResourceFormComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.form = this.fb.group({
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            subject: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
          });
        }
      }, {
        key: "submit",
        value: function submit() {
          if (this.form.valid) {
            this.onSubmit.emit(this.form.value);
          }
        }
      }]);

      return CreateResourceFormComponent;
    }();

    CreateResourceFormComponent.ɵfac = function CreateResourceFormComponent_Factory(t) {
      return new (t || CreateResourceFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]));
    };

    CreateResourceFormComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: CreateResourceFormComponent,
      selectors: [["app-create-resource-form"]],
      inputs: {
        error: "error"
      },
      outputs: {
        onSubmit: "onSubmit"
      },
      decls: 14,
      vars: 4,
      consts: [[3, "formGroup", "ngSubmit"], ["type", "text", "matInput", "", "placeholder", "Class name", "formControlName", "name"], ["class", "error", 4, "ngIf"], [1, "button"], ["type", "button", "mat-button", "", 3, "disabled", "click"], ["type", "submit", "mat-button", "", 3, "disabled"], [1, "error"]],
      template: function CreateResourceFormComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-card");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-card-title");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Create Class");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "mat-card-content");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "form", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngSubmit", function CreateResourceFormComponent_Template_form_ngSubmit_4_listener() {
            return ctx.submit();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "input", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, CreateResourceFormComponent_p_8_Template, 2, 1, "p", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "button", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CreateResourceFormComponent_Template_button_click_10_listener() {
            return ctx.form.reset();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "Reset");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "button", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Create");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.error);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", !ctx.form.touched);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx.form.invalid);
        }
      },
      directives: [_angular_material_card__WEBPACK_IMPORTED_MODULE_2__["MatCard"], _angular_material_card__WEBPACK_IMPORTED_MODULE_2__["MatCardTitle"], _angular_material_card__WEBPACK_IMPORTED_MODULE_2__["MatCardContent"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_3__["MatFormField"], _angular_material_input__WEBPACK_IMPORTED_MODULE_4__["MatInput"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_6__["MatButton"]],
      styles: [".mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.error[_ngcontent-%COMP%] {\n  padding: 16px;\n  width: 300px;\n  color: white;\n  background-color: red;\n}\n\n.button[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.forgot-pass-link[_ngcontent-%COMP%] {\n  align-self: center;\n  padding: 0 16px;\n  text-decoration: underline;\n  font-size: smaller;\n  font-style: italic;\n  line-height: 36px;\n}\n\n.mat-card[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: unset;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY3JlYXRlLXJlc291cmNlLWZvcm0vY3JlYXRlLXJlc291cmNlLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2NyZWF0ZS1yZXNvdXJjZS1mb3JtL2NyZWF0ZS1yZXNvdXJjZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EscUJBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0EsMEJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9jcmVhdGUtcmVzb3VyY2UtZm9ybS9jcmVhdGUtcmVzb3VyY2UtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXJyb3Ige1xuICBwYWRkaW5nOiAxNnB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4uYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmZvcmdvdC1wYXNzLWxpbmsge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBsaW5lLWhlaWdodDogMzZweDtcbn1cblxuLm1hdC1jYXJkOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogdW5zZXQ7XG59IiwiLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5lcnJvciB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHdpZHRoOiAzMDBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5idXR0b24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4uZm9yZ290LXBhc3MtbGluayB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC1zaXplOiBzbWFsbGVyO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xufVxuXG4ubWF0LWNhcmQ6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSkge1xuICBib3gtc2hhZG93OiB1bnNldDtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CreateResourceFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-create-resource-form',
          templateUrl: './create-resource-form.component.html',
          styleUrls: ['./create-resource-form.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }];
      }, {
        error: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onSubmit: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/create-resource/create-resource.component.ts":
  /*!*****************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/create-resource/create-resource.component.ts ***!
    \*****************************************************************************************/

  /*! exports provided: CreateResourceComponent */

  /***/
  function srcAppAdminDashboardComponentsCreateResourceCreateResourceComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CreateResourceComponent", function () {
      return CreateResourceComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/services/api.service */
    "./src/app/services/api.service.ts");
    /* harmony import */


    var _create_resource_form_create_resource_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../create-resource-form/create-resource-form.component */
    "./src/app/admin-dashboard/components/create-resource-form/create-resource-form.component.ts");

    var CreateResourceComponent =
    /*#__PURE__*/
    function () {
      function CreateResourceComponent(api, dialogRef, resource) {
        _classCallCheck(this, CreateResourceComponent);

        this.api = api;
        this.dialogRef = dialogRef;
        this.resource = resource;
      }

      _createClass(CreateResourceComponent, [{
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onCreate",
        value: function onCreate(formValues) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee11() {
            var response;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    _context11.next = 2;
                    return this.api.post(this.resource.resourceUrl, formValues).toPromise();

                  case 2:
                    response = _context11.sent;
                    this.dialogRef.close(response);

                  case 4:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11, this);
          }));
        }
      }]);

      return CreateResourceComponent;
    }();

    CreateResourceComponent.ɵfac = function CreateResourceComponent_Factory(t) {
      return new (t || CreateResourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]));
    };

    CreateResourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CreateResourceComponent,
      selectors: [["app-create-resource"]],
      decls: 2,
      vars: 0,
      consts: [["mat-dialog-content", ""], [3, "onSubmit"]],
      template: function CreateResourceComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "app-create-resource-form", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onSubmit", function CreateResourceComponent_Template_app_create_resource_form_onSubmit_1_listener($event) {
            return ctx.onCreate($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogContent"], _create_resource_form_create_resource_form_component__WEBPACK_IMPORTED_MODULE_4__["CreateResourceFormComponent"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2NyZWF0ZS1yZXNvdXJjZS9jcmVhdGUtcmVzb3VyY2UuY29tcG9uZW50LnNjc3MifQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CreateResourceComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-create-resource',
          templateUrl: './create-resource.component.html',
          styleUrls: ['./create-resource.component.scss']
        }]
      }], function () {
        return [{
          type: src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
          }]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/create-subject-form/create-subject-form.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/create-subject-form/create-subject-form.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: CreateSubjectFormComponent */

  /***/
  function srcAppAdminDashboardComponentsCreateSubjectFormCreateSubjectFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CreateSubjectFormComponent", function () {
      return CreateSubjectFormComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var src_app_services_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/services/api.service */
    "./src/app/services/api.service.ts");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js");

    function CreateSubjectFormComponent_mat_option_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mat-option", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var classs_r265 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", classs_r265._id);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", classs_r265.name, " ");
      }
    }

    function CreateSubjectFormComponent_p_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r262 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r262.error, " ");
      }
    }

    function CreateSubjectFormComponent_ng_container_23_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var ctx_r263 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r263.form.value._id == "" ? "Create" : "Update", " ");
      }
    }

    function CreateSubjectFormComponent_ng_container_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var ctx_r264 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r264.form.value._id == "" ? "Creating..." : "Updating...", " ");
      }
    }

    var CreateSubjectFormComponent =
    /*#__PURE__*/
    function () {
      function CreateSubjectFormComponent(fb, api, dialogRef, data) {
        _classCallCheck(this, CreateSubjectFormComponent);

        this.fb = fb;
        this.api = api;
        this.dialogRef = dialogRef;
        this.data = data;
        this.isUploading = false;
      }

      _createClass(CreateSubjectFormComponent, [{
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {
          this.initialValues = this.data.subject;
          this.form = this.fb.group({
            _id: [this.initialValues._id],
            title: [this.initialValues.title, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            description: [this.initialValues.description, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            "class": [this.initialValues["class"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
          });
        }
      }, {
        key: "onReset",
        value: function onReset() {
          this.form.reset(this.initialValues);
        }
      }, {
        key: "submit",
        value: function submit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee12() {
            var formValues, response, _id, othr, url;

            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    if (!this.form.valid) {
                      _context12.next = 16;
                      break;
                    }

                    formValues = this.form.value;
                    _id = formValues._id, othr = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(formValues, ["_id"]);
                    this.isUploading = true;

                    if (!(formValues._id == '')) {
                      _context12.next = 10;
                      break;
                    }

                    _context12.next = 7;
                    return this.api.post(this.data.resourceUrl, othr).toPromise();

                  case 7:
                    response = _context12.sent;
                    _context12.next = 14;
                    break;

                  case 10:
                    url = "".concat(this.data.resourceUrl, "/").concat(_id);
                    _context12.next = 13;
                    return this.api.put(url, othr).toPromise();

                  case 13:
                    response = _context12.sent;

                  case 14:
                    this.isUploading = false;
                    this.dialogRef.close(response);

                  case 16:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12, this);
          }));
        }
      }]);

      return CreateSubjectFormComponent;
    }();

    CreateSubjectFormComponent.ɵfac = function CreateSubjectFormComponent_Factory(t) {
      return new (t || CreateSubjectFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]));
    };

    CreateSubjectFormComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CreateSubjectFormComponent,
      selectors: [["app-create-subject-form"]],
      inputs: {
        error: "error"
      },
      decls: 25,
      vars: 8,
      consts: [["mat-dialog-content", ""], [3, "formGroup", "ngSubmit"], ["formControlName", "class"], [3, "value", 4, "ngFor", "ngForOf"], ["type", "text", "matInput", "", "placeholder", "Title", "formControlName", "title"], ["type", "text", "matInput", "", "placeholder", "Description", "formControlName", "description"], ["class", "error", 4, "ngIf"], [1, "button"], ["type", "button", "mat-button", "", 3, "disabled", "click"], ["type", "submit", "mat-button", "", 3, "disabled"], [4, "ngIf"], [3, "value"], [1, "error"]],
      template: function CreateSubjectFormComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "mat-card");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "mat-card-title");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "mat-card-content");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "form", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngSubmit", function CreateSubjectFormComponent_Template_form_ngSubmit_5_listener() {
            return ctx.submit();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](9, "Class");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "mat-select", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](11, CreateSubjectFormComponent_mat_option_11_Template, 2, 2, "mat-option", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](14, "input", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](15, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](16, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](17, "input", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](18, CreateSubjectFormComponent_p_18_Template, 2, 1, "p", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](20, "button", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CreateSubjectFormComponent_Template_button_click_20_listener() {
            return ctx.onReset();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](21, "Reset");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "button", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](23, CreateSubjectFormComponent_ng_container_23_Template, 2, 1, "ng-container", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](24, CreateSubjectFormComponent_ng_container_24_Template, 2, 1, "ng-container", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx.form.value._id == "" ? "Create Subject" : "Update Subject");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.data.classList);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.error);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", !ctx.form.touched);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", ctx.form.invalid || ctx.isUploading);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.isUploading);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.isUploading);
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogContent"], _angular_material_card__WEBPACK_IMPORTED_MODULE_5__["MatCard"], _angular_material_card__WEBPACK_IMPORTED_MODULE_5__["MatCardTitle"], _angular_material_card__WEBPACK_IMPORTED_MODULE_5__["MatCardContent"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_6__["MatFormField"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_6__["MatLabel"], _angular_material_select__WEBPACK_IMPORTED_MODULE_7__["MatSelect"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["NgForOf"], _angular_material_input__WEBPACK_IMPORTED_MODULE_9__["MatInput"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["NgIf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_10__["MatButton"], _angular_material_core__WEBPACK_IMPORTED_MODULE_11__["MatOption"]],
      styles: [".mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.error[_ngcontent-%COMP%] {\n  padding: 16px;\n  width: 300px;\n  color: white;\n  background-color: red;\n}\n\n.button[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.forgot-pass-link[_ngcontent-%COMP%] {\n  align-self: center;\n  padding: 0 16px;\n  text-decoration: underline;\n  font-size: smaller;\n  font-style: italic;\n  line-height: 36px;\n}\n\n.mat-card[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: unset;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY3JlYXRlLXN1YmplY3QtZm9ybS9jcmVhdGUtc3ViamVjdC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9jcmVhdGUtc3ViamVjdC1mb3JtL2NyZWF0ZS1zdWJqZWN0LWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxxQkFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLHlCQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSwwQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQ0NGOztBREVBO0VBQ0UsaUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2NyZWF0ZS1zdWJqZWN0LWZvcm0vY3JlYXRlLXN1YmplY3QtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXJyb3Ige1xuICBwYWRkaW5nOiAxNnB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4uYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmZvcmdvdC1wYXNzLWxpbmsge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBsaW5lLWhlaWdodDogMzZweDtcbn1cblxuLm1hdC1jYXJkOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogdW5zZXQ7XG59IiwiLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5lcnJvciB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHdpZHRoOiAzMDBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5idXR0b24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4uZm9yZ290LXBhc3MtbGluayB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC1zaXplOiBzbWFsbGVyO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xufVxuXG4ubWF0LWNhcmQ6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSkge1xuICBib3gtc2hhZG93OiB1bnNldDtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CreateSubjectFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-create-subject-form',
          templateUrl: './create-subject-form.component.html',
          styleUrls: ['./create-subject-form.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
        }, {
          type: src_app_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]]
          }]
        }];
      }, {
        error: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/create-video-form/create-video-form.component.ts":
  /*!*********************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/create-video-form/create-video-form.component.ts ***!
    \*********************************************************************************************/

  /*! exports provided: CreateVideoFormComponent */

  /***/
  function srcAppAdminDashboardComponentsCreateVideoFormCreateVideoFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CreateVideoFormComponent", function () {
      return CreateVideoFormComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! lodash */
    "./node_modules/lodash/lodash.js");
    /* harmony import */


    var lodash__WEBPACK_IMPORTED_MODULE_4___default =
    /*#__PURE__*/
    __webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);
    /* harmony import */


    var src_app_services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/services/api.service */
    "./src/app/services/api.service.ts");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
    /* harmony import */


    var src_app_services_s3_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! src/app/services/s3.service */
    "./src/app/services/s3.service.ts");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! @angular/material/progress-bar */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js");

    function CreateVideoFormComponent_mat_option_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mat-option", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var classs_r181 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", classs_r181._id);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", classs_r181.name, " ");
      }
    }

    function CreateVideoFormComponent_mat_option_17_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mat-option", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var subject_r182 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", subject_r182._id);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", subject_r182.title, " ");
      }
    }

    function CreateVideoFormComponent_mat_option_23_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mat-option", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var chapter_r183 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", chapter_r183._id);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", chapter_r183.title, " ");
      }
    }

    function CreateVideoFormComponent_span_35_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r173 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r173.selectedPdfFile.name, " ");
      }
    }

    function CreateVideoFormComponent_p_36_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "mat-progress-bar", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r174 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", ctx_r174.uploadProgress[ctx_r174.selectedPdfFile.name]);
      }
    }

    function CreateVideoFormComponent_span_42_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r176 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r176.selectedVideoFile.name, " ");
      }
    }

    function CreateVideoFormComponent_p_43_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "mat-progress-bar", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r177 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", ctx_r177.uploadProgress[ctx_r177.selectedVideoFile.name]);
      }
    }

    function CreateVideoFormComponent_p_44_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r178 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r178.error, " ");
      }
    }

    function CreateVideoFormComponent_ng_container_49_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var ctx_r179 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r179.form.value._id == "" ? "Create" : "Update", " ");
      }
    }

    function CreateVideoFormComponent_ng_container_50_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var ctx_r180 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r180.form.value._id == "" ? "Creating..." : "Updating...", " ");
      }
    }

    var CreateVideoFormComponent =
    /*#__PURE__*/
    function () {
      function CreateVideoFormComponent(fb, api, httpClient, s3Service, dialogRef, data) {
        _classCallCheck(this, CreateVideoFormComponent);

        this.fb = fb;
        this.api = api;
        this.httpClient = httpClient;
        this.s3Service = s3Service;
        this.dialogRef = dialogRef;
        this.data = data;
        this.isUploading = false;
        this.filteredChapterList = [];
        this.filteredSubjectList = [];
        this.uploadProgress = {};
        this.filterOnKeys = {};
        console.log(data.classList);
      }

      _createClass(CreateVideoFormComponent, [{
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this4 = this;

          this.initialValues = this.data.video;
          this.filteredChapterList = this.data.chapterList;
          this.filteredSubjectList = this.data.subjectList;
          this.form = this.fb.group({
            _id: [this.data.video._id],
            title: [this.data.video.title, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            description: [this.data.video.description, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            "class": [this.data.video["class"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            chapter: [this.data.video.chapter, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            subject: [this.data.video.subject, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
          });
          this.form.controls["class"].valueChanges.subscribe(function (classId) {
            _this4.filterOnKeys = Object.assign(Object.assign({}, _this4.filterOnKeys), {
              "class": classId
            });

            _this4.setFilteredSubjectList({
              "class": classId
            });

            _this4.setFilteredChapterList();
          });
          this.form.controls.subject.valueChanges.subscribe(function (subjectId) {
            _this4.filterOnKeys = Object.assign(Object.assign({}, _this4.filterOnKeys), {
              subject: subjectId
            });

            _this4.setFilteredChapterList();
          });
        }
      }, {
        key: "setFilteredSubjectList",
        value: function setFilteredSubjectList(filterOptions) {
          this.filteredSubjectList = Object(lodash__WEBPACK_IMPORTED_MODULE_4__["filter"])(this.data.subjectList, filterOptions);
        }
      }, {
        key: "setFilteredChapterList",
        value: function setFilteredChapterList() {
          this.filteredChapterList = Object(lodash__WEBPACK_IMPORTED_MODULE_4__["filter"])(this.data.chapterList, this.filterOnKeys);
        }
      }, {
        key: "onUploadClick",
        value: function onUploadClick(fileField) {
          fileField.click();
        }
      }, {
        key: "pdfFileChange",
        value: function pdfFileChange(files) {
          this.selectedPdfFile = files[0];
        }
      }, {
        key: "videoFileChange",
        value: function videoFileChange(files) {
          this.selectedVideoFile = files[0];
        }
      }, {
        key: "onReset",
        value: function onReset() {
          this.form.reset(this.initialValues);
          this.selectedVideoFile = undefined;
          this.selectedPdfFile = undefined;
        }
      }, {
        key: "submit",
        value: function submit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee13() {
            var formValues, response, _id, othr, pdfS3, videoS3, url, _pdfS, _videoS;

            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    if (!this.form.valid) {
                      _context13.next = 33;
                      break;
                    }

                    formValues = this.form.value;
                    _id = formValues._id, othr = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(formValues, ["_id"]);

                    if (!(formValues._id == '' && (!this.selectedVideoFile || !this.selectedPdfFile))) {
                      _context13.next = 6;
                      break;
                    }

                    alert('Please upload video and pdf!');
                    return _context13.abrupt("return");

                  case 6:
                    this.isUploading = true;

                    if (!(formValues._id == '')) {
                      _context13.next = 19;
                      break;
                    }

                    _context13.next = 10;
                    return this.uploadOnS3(this.selectedPdfFile.name, this.selectedPdfFile);

                  case 10:
                    pdfS3 = _context13.sent;
                    _context13.next = 13;
                    return this.uploadOnS3(this.selectedVideoFile.name, this.selectedVideoFile);

                  case 13:
                    videoS3 = _context13.sent;
                    _context13.next = 16;
                    return this.api.post(this.data.resourceUrl, Object.assign(Object.assign({}, othr), {
                      pdfS3: pdfS3,
                      videoS3: videoS3
                    })).toPromise();

                  case 16:
                    response = _context13.sent;
                    _context13.next = 31;
                    break;

                  case 19:
                    url = "".concat(this.data.resourceUrl, "/").concat(_id);

                    if (!this.selectedPdfFile) {
                      _context13.next = 24;
                      break;
                    }

                    _context13.next = 23;
                    return this.uploadOnS3(this.selectedPdfFile.name, this.selectedPdfFile);

                  case 23:
                    _pdfS = _context13.sent;

                  case 24:
                    if (!this.selectedVideoFile) {
                      _context13.next = 28;
                      break;
                    }

                    _context13.next = 27;
                    return this.uploadOnS3(this.selectedVideoFile.name, this.selectedVideoFile);

                  case 27:
                    _videoS = _context13.sent;

                  case 28:
                    _context13.next = 30;
                    return this.api.put(url, Object.assign(Object.assign({}, othr), {
                      pdfS3: _pdfS,
                      videoS3: _videoS
                    })).toPromise();

                  case 30:
                    response = _context13.sent;

                  case 31:
                    this.isUploading = false;
                    this.dialogRef.close(response);

                  case 33:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13, this);
          }));
        }
      }, {
        key: "uploadOnS3",
        value: function uploadOnS3(fileName, fileData) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee14() {
            var _this5 = this;

            var request;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    request = this.s3Service.uploadFile(fileName, fileData);
                    request.on('httpUploadProgress', function (progress) {
                      _this5.uploadProgress[fileName] = Math.round(100 * progress.loaded / progress.total);
                    });
                    return _context14.abrupt("return", request.promise());

                  case 3:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14, this);
          }));
        }
      }]);

      return CreateVideoFormComponent;
    }();

    CreateVideoFormComponent.ɵfac = function CreateVideoFormComponent_Factory(t) {
      return new (t || CreateVideoFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_s3_service__WEBPACK_IMPORTED_MODULE_7__["S3Service"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]));
    };

    CreateVideoFormComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CreateVideoFormComponent,
      selectors: [["app-create-video-form"]],
      inputs: {
        error: "error"
      },
      decls: 51,
      vars: 14,
      consts: [["mat-dialog-content", ""], [3, "formGroup", "ngSubmit"], ["formControlName", "class"], [3, "value", 4, "ngFor", "ngForOf"], ["formControlName", "subject"], ["formControlName", "chapter"], ["type", "text", "matInput", "", "placeholder", "Title", "formControlName", "title"], ["type", "text", "matInput", "", "placeholder", "Description", "formControlName", "description"], ["type", "button", "mat-raised-button", "", 3, "click"], ["id", "pdfFileInput", "hidden", "", "type", "file", 3, "change"], ["pdfFileField", ""], [4, "ngIf"], ["id", "videoFileInput", "hidden", "", "type", "file", 3, "change"], ["videoFileField", ""], ["class", "error", 4, "ngIf"], [1, "button"], ["type", "button", "mat-button", "", 3, "disabled", "click"], ["type", "submit", "mat-button", "", 3, "disabled"], [3, "value"], ["mode", "buffer", 3, "value"], [1, "error"]],
      template: function CreateVideoFormComponent_Template(rf, ctx) {
        if (rf & 1) {
          var _r184 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "mat-card");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "mat-card-title");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "mat-card-content");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "form", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngSubmit", function CreateVideoFormComponent_Template_form_ngSubmit_5_listener() {
            return ctx.submit();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](9, "Class");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "mat-select", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](11, CreateVideoFormComponent_mat_option_11_Template, 2, 2, "mat-option", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](15, "Subject");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](16, "mat-select", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](17, CreateVideoFormComponent_mat_option_17_Template, 2, 2, "mat-option", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](20, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](21, "Chapter");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "mat-select", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](23, CreateVideoFormComponent_mat_option_23_Template, 2, 2, "mat-option", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](24, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](25, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](26, "input", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](27, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](28, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](29, "input", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](30, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](31, "button", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CreateVideoFormComponent_Template_button_click_31_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r184);

            var _r172 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](34);

            return ctx.onUploadClick(_r172);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](32, " Select PDF to upload ");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](33, "input", 9, 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("change", function CreateVideoFormComponent_Template_input_change_33_listener($event) {
            return ctx.pdfFileChange($event.target.files);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](35, CreateVideoFormComponent_span_35_Template, 2, 1, "span", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](36, CreateVideoFormComponent_p_36_Template, 2, 1, "p", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](37, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](38, "button", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CreateVideoFormComponent_Template_button_click_38_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r184);

            var _r175 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](41);

            return ctx.onUploadClick(_r175);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](39, " Select video to upload ");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](40, "input", 12, 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("change", function CreateVideoFormComponent_Template_input_change_40_listener($event) {
            return ctx.videoFileChange($event.target.files);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](42, CreateVideoFormComponent_span_42_Template, 2, 1, "span", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](43, CreateVideoFormComponent_p_43_Template, 2, 1, "p", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](44, CreateVideoFormComponent_p_44_Template, 2, 1, "p", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](45, "div", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](46, "button", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CreateVideoFormComponent_Template_button_click_46_listener() {
            return ctx.onReset();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](47, "Reset");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](48, "button", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](49, CreateVideoFormComponent_ng_container_49_Template, 2, 1, "ng-container", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](50, CreateVideoFormComponent_ng_container_50_Template, 2, 1, "ng-container", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx.form.value._id == "" ? "Upload Video" : "Update Video");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.data.classList);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.filteredSubjectList);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.filteredChapterList);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](12);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.selectedPdfFile && ctx.selectedPdfFile.name);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.selectedPdfFile && ctx.uploadProgress[ctx.selectedPdfFile.name]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.selectedVideoFile && ctx.selectedVideoFile.name);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.selectedVideoFile && ctx.uploadProgress[ctx.selectedVideoFile.name]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.error);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", !ctx.form.touched);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", ctx.form.invalid || ctx.isUploading);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.isUploading);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.isUploading);
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogContent"], _angular_material_card__WEBPACK_IMPORTED_MODULE_8__["MatCard"], _angular_material_card__WEBPACK_IMPORTED_MODULE_8__["MatCardTitle"], _angular_material_card__WEBPACK_IMPORTED_MODULE_8__["MatCardContent"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__["MatFormField"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__["MatLabel"], _angular_material_select__WEBPACK_IMPORTED_MODULE_10__["MatSelect"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgForOf"], _angular_material_input__WEBPACK_IMPORTED_MODULE_12__["MatInput"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], _angular_material_button__WEBPACK_IMPORTED_MODULE_13__["MatButton"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgIf"], _angular_material_core__WEBPACK_IMPORTED_MODULE_14__["MatOption"], _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_15__["MatProgressBar"]],
      styles: [".mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.error[_ngcontent-%COMP%] {\n  padding: 16px;\n  width: 300px;\n  color: white;\n  background-color: red;\n}\n\n.button[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.forgot-pass-link[_ngcontent-%COMP%] {\n  align-self: center;\n  padding: 0 16px;\n  text-decoration: underline;\n  font-size: smaller;\n  font-style: italic;\n  line-height: 36px;\n}\n\n.mat-card[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: unset;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvY3JlYXRlLXZpZGVvLWZvcm0vY3JlYXRlLXZpZGVvLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2NyZWF0ZS12aWRlby1mb3JtL2NyZWF0ZS12aWRlby1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EscUJBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0EsMEJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9jcmVhdGUtdmlkZW8tZm9ybS9jcmVhdGUtdmlkZW8tZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXJyb3Ige1xuICBwYWRkaW5nOiAxNnB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4uYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmZvcmdvdC1wYXNzLWxpbmsge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBsaW5lLWhlaWdodDogMzZweDtcbn1cblxuLm1hdC1jYXJkOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogdW5zZXQ7XG59IiwiLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5lcnJvciB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHdpZHRoOiAzMDBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5idXR0b24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4uZm9yZ290LXBhc3MtbGluayB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC1zaXplOiBzbWFsbGVyO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xufVxuXG4ubWF0LWNhcmQ6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSkge1xuICBib3gtc2hhZG93OiB1bnNldDtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CreateVideoFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-create-video-form',
          templateUrl: './create-video-form.component.html',
          styleUrls: ['./create-video-form.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
        }, {
          type: src_app_services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]
        }, {
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"]
        }, {
          type: src_app_services_s3_service__WEBPACK_IMPORTED_MODULE_7__["S3Service"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]]
          }]
        }];
      }, {
        error: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/dashboard/dashboard.component.ts":
  /*!*****************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/dashboard/dashboard.component.ts ***!
    \*****************************************************************************/

  /*! exports provided: DashboardComponent */

  /***/
  function srcAppAdminDashboardComponentsDashboardDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DashboardComponent", function () {
      return DashboardComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! lodash */
    "./node_modules/lodash/lodash.js");
    /* harmony import */


    var lodash__WEBPACK_IMPORTED_MODULE_1___default =
    /*#__PURE__*/
    __webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
    /* harmony import */


    var src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! src/app/auth/services/auth.service */
    "./src/app/auth/services/auth.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");

    function DashboardComponent_div_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "mat-icon", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "people");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "State Padha Adhikari");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "mat-icon", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "people");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18, "Distric Padha Adhikari");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "mat-icon", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "people");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Block Padha Adhikari");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r303 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r303.roleWiseUsers["STATE_LEVEL_USER"] == null ? null : ctx_r303.roleWiseUsers["STATE_LEVEL_USER"].length);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r303.roleWiseUsers["DISTRICT_LEVEL_USER"] == null ? null : ctx_r303.roleWiseUsers["DISTRICT_LEVEL_USER"].length);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r303.roleWiseUsers["BLOCK_LEVEL_USER"] == null ? null : ctx_r303.roleWiseUsers["BLOCK_LEVEL_USER"].length);
      }
    }

    var DashboardComponent =
    /*#__PURE__*/
    function () {
      function DashboardComponent(authService) {
        _classCallCheck(this, DashboardComponent);

        this.authService = authService;
      }

      _createClass(DashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this6 = this;

          this.authService.getAllUsers().subscribe(function (response) {
            var users = response['data'];
            _this6.roleWiseUsers = Object(lodash__WEBPACK_IMPORTED_MODULE_1__["groupBy"])(users, 'role');
          });
        }
      }]);

      return DashboardComponent;
    }();

    DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {
      return new (t || DashboardComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"]));
    };

    DashboardComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: DashboardComponent,
      selectors: [["app-dashboard"]],
      decls: 1,
      vars: 1,
      consts: [["class", "row", 4, "ngIf"], [1, "row"], [1, "col-lg-4", "col-md-4", "col-sm-6", "col-xs-12"], [1, "info-box", "bg-green", "hover-expand-effect"], [1, "icon"], ["aria-hidden", "false", "aria-label", "Example home icon", 1, "material-icons"], [1, "content"], [1, "text"], ["data-from", "0", "data-to", "200", "data-speed", "1000", "data-fresh-interval", "20", 1, "number", "count-to"], [1, "info-box", "bg-orange", "hover-expand-effect"], [1, "info-box", "bg-cyan", "hover-expand-effect"]],
      template: function DashboardComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, DashboardComponent_div_0_Template, 31, 3, "div", 0);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.roleWiseUsers);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_4__["MatIcon"]],
      styles: [".card[_ngcontent-%COMP%] {\n  background: #fff;\n  min-height: 150px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  position: relative;\n  margin-bottom: 30px;\n  border-radius: 2px;\n}\n\n.card.header[_ngcontent-%COMP%] {\n  padding: 20px;\n  position: relative;\n}\n\n.bg-green[_ngcontent-%COMP%] {\n  background-color: #4caf50 !important;\n  color: #fff;\n}\n\n.bg-cyan[_ngcontent-%COMP%] {\n  background-color: #00bcd4 !important;\n  color: #fff;\n}\n\n.bg-blue-grey[_ngcontent-%COMP%] {\n  background-color: #607d8b !important;\n  color: #fff;\n}\n\n.card[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\n  margin: 0;\n  font-size: 18px;\n  font-weight: normal;\n}\n\n.info-box[_ngcontent-%COMP%] {\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  height: 80px;\n  display: flex;\n  cursor: default;\n  background-color: #fff;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 30px;\n}\n\n.info-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\n  display: inline-block;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0.12);\n  width: 80px;\n}\n\n.info-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\n  color: #fff;\n  font-size: 50px;\n  margin-right: 20px;\n  line-height: 80px;\n}\n\n.info-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   .chart.chart-bar[_ngcontent-%COMP%] {\n  height: 100%;\n  line-height: 100px;\n}\n\n.info-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   .chart.chart-bar[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\n  vertical-align: baseline !important;\n}\n\n.info-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   .chart.chart-pie[_ngcontent-%COMP%] {\n  height: 100%;\n  line-height: 123px;\n}\n\n.info-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   .chart.chart-pie[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\n  vertical-align: baseline !important;\n}\n\n.info-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   .chart.chart-line[_ngcontent-%COMP%] {\n  height: 100%;\n  line-height: 115px;\n}\n\n.info-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   .chart.chart-line[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\n  vertical-align: baseline !important;\n}\n\n.info-box[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%] {\n  display: inline-block;\n  padding: 7px 10px;\n}\n\n.info-box[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%] {\n  font-size: 20px;\n  margin-top: 11px;\n  color: #fff;\n}\n\n.info-box[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .number[_ngcontent-%COMP%] {\n  font-weight: normal;\n  font-size: 26px;\n  margin-top: 5px;\n  color: #fff;\n}\n\n.info-box.hover-zoom-effect[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\n  overflow: hidden;\n}\n\n.info-box.hover-zoom-effect[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\n  transition: all 0.3s ease;\n}\n\n.info-box.hover-zoom-effect[_ngcontent-%COMP%]:hover   .icon[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\n  opacity: 0.4;\n  transform: rotate(-32deg) scale(1.4);\n}\n\n.info-box.hover-expand-effect[_ngcontent-%COMP%]:after {\n  background-color: rgba(0, 0, 0, 0.05);\n  content: \".\";\n  position: absolute;\n  left: 80px;\n  top: 0;\n  width: 0;\n  height: 100%;\n  color: transparent;\n  transition: all 0.95s;\n}\n\n.info-box.hover-expand-effect[_ngcontent-%COMP%]:hover:after {\n  width: 100%;\n}\n\n.bg-orange[_ngcontent-%COMP%] {\n  background-color: #ff9800 !important;\n  color: #fff;\n}\n/*# sourceMappingURL=data:application/json;base64, */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DashboardComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-dashboard',
          templateUrl: './dashboard.component.html',
          styleUrls: ['./dashboard.component.scss']
        }]
      }], function () {
        return [{
          type: src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/documents-page/documents-page.component.ts":
  /*!***************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/documents-page/documents-page.component.ts ***!
    \***************************************************************************************/

  /*! exports provided: DocumentsPageComponent */

  /***/
  function srcAppAdminDashboardComponentsDocumentsPageDocumentsPageComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DocumentsPageComponent", function () {
      return DocumentsPageComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var src_app_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! src/app/constants */
    "./src/app/constants/index.ts");
    /* harmony import */


    var src_app_services_documents_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! src/app/services/documents.service */
    "./src/app/services/documents.service.ts");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _shared_components_constant_constant_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../shared/components/constant/constant.component */
    "./src/app/shared/components/constant/constant.component.ts");

    function DocumentsPageComponent_tr_19_app_constant_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "app-constant", 11);
      }

      if (rf & 2) {
        var role_r294 = ctx.$implicit;

        var ctx_r293 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("constant", ctx_r293.ROLES)("code", role_r294);
      }
    }

    function DocumentsPageComponent_tr_19_Template(rf, ctx) {
      if (rf & 1) {
        var _r296 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "th", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, DocumentsPageComponent_tr_19_app_constant_6_Template, 1, 2, "app-constant", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "a", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Download");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "button", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function DocumentsPageComponent_tr_19_Template_button_click_10_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r296);

          var document_r291 = ctx.$implicit;

          var ctx_r295 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r295.onDelete(document_r291);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "Delete");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var document_r291 = ctx.$implicit;
        var i_r292 = ctx.index;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](i_r292 + 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", document_r291.originalname, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", document_r291.roles);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("href", "http://" + document_r291.fullPath, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("download", document_r291.originalname);
      }
    }

    var COUNTRIES = [{
      name: 'Russia',
      flag: 'f/f3/Flag_of_Russia.svg',
      area: 17075200,
      population: 146989754
    }, {
      name: 'Canada',
      flag: 'c/cf/Flag_of_Canada.svg',
      area: 9976140,
      population: 36624199
    }, {
      name: 'United States',
      flag: 'a/a4/Flag_of_the_United_States.svg',
      area: 9629091,
      population: 324459463
    }, {
      name: 'China',
      flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',
      area: 9596960,
      population: 1409517397
    }];

    var DocumentsPageComponent =
    /*#__PURE__*/
    function () {
      function DocumentsPageComponent(documentsService) {
        _classCallCheck(this, DocumentsPageComponent);

        this.documentsService = documentsService;
        this.countries = COUNTRIES;
        this.ROLES = src_app_constants__WEBPACK_IMPORTED_MODULE_1__["USER_ROLES"];
        this.documents = [];
      }

      _createClass(DocumentsPageComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.fetchDocuments();
        }
      }, {
        key: "onDelete",
        value: function onDelete(document) {
          var _this7 = this;

          this.documentsService.deleteDocument(document).subscribe(function (response) {
            _this7.fetchDocuments();
          });
        }
      }, {
        key: "fetchDocuments",
        value: function fetchDocuments() {
          var _this8 = this;

          this.documentsService.getAllDocuments().subscribe(function (response) {
            var documents = response['data'];
            _this8.documents = documents;
          });
        }
      }]);

      return DocumentsPageComponent;
    }();

    DocumentsPageComponent.ɵfac = function DocumentsPageComponent_Factory(t) {
      return new (t || DocumentsPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_documents_service__WEBPACK_IMPORTED_MODULE_2__["DocumentsService"]));
    };

    DocumentsPageComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: DocumentsPageComponent,
      selectors: [["app-documents-page"]],
      decls: 20,
      vars: 1,
      consts: [[1, "resource-actions-panel"], [1, "table-heading"], ["mat-raised-button", "", "color", "primary", "routerLink", "/dashboard/upload-document"], [1, "table", "table-striped"], ["scope", "col"], [1, "ml20"], [4, "ngFor", "ngForOf"], ["scope", "row"], [3, "constant", "code", 4, "ngFor", "ngForOf"], ["mat-button", "", "color", "primary", 3, "href"], ["mat-button", "", "color", "warn", 3, "click"], [3, "constant", "code"]],
      template: function DocumentsPageComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "h3", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "button", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "add");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, " Upload a new document ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "table", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "thead");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "tr");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "th", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "#");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "th", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Documents");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "th", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Access");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "th", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Action");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "tbody");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](19, DocumentsPageComponent_tr_19_Template, 12, 5, "tr", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.documents);
        }
      },
      directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_3__["MatButton"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterLink"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__["MatIcon"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["NgForOf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_3__["MatAnchor"], _shared_components_constant_constant_component__WEBPACK_IMPORTED_MODULE_7__["ConstantComponent"]],
      styles: ["a[_ngcontent-%COMP%], a[_ngcontent-%COMP%]:active, a[_ngcontent-%COMP%]:focus {\n  color: #337ab7;\n  text-decoration: none;\n}\n\n.resource-actions-panel[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n}\n\n.ml20[_ngcontent-%COMP%] {\n  margin-left: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvZG9jdW1lbnRzLXBhZ2UvZG9jdW1lbnRzLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2RvY3VtZW50cy1wYWdlL2RvY3VtZW50cy1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLHFCQUFBO0FDQ0o7O0FEQ0E7RUFDSSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxrQkFBQTtBQ0VKOztBREFBO0VBQ0ksaUJBQUE7QUNHSiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2RvY3VtZW50cy1wYWdlL2RvY3VtZW50cy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYSwgYTphY3RpdmUsIGE6Zm9jdXMge1xuICAgIGNvbG9yOiAjMzM3YWI3O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5yZXNvdXJjZS1hY3Rpb25zLXBhbmVsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG59XG4ubWwyMCB7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59IiwiYSwgYTphY3RpdmUsIGE6Zm9jdXMge1xuICBjb2xvcjogIzMzN2FiNztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ucmVzb3VyY2UtYWN0aW9ucy1wYW5lbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xufVxuXG4ubWwyMCB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufSJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DocumentsPageComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-documents-page',
          templateUrl: './documents-page.component.html',
          styleUrls: ['./documents-page.component.scss']
        }]
      }], function () {
        return [{
          type: src_app_services_documents_service__WEBPACK_IMPORTED_MODULE_2__["DocumentsService"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/live-stream/live-stream.component.ts":
  /*!*********************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/live-stream/live-stream.component.ts ***!
    \*********************************************************************************/

  /*! exports provided: LiveStreamComponent */

  /***/
  function srcAppAdminDashboardComponentsLiveStreamLiveStreamComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LiveStreamComponent", function () {
      return LiveStreamComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var src_environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! src/environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var _services_live_stream_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../services/live-stream.service */
    "./src/app/admin-dashboard/services/live-stream.service.ts");
    /* harmony import */


    var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/platform-browser */
    "./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/progress-spinner */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/progress-bar */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js");

    function LiveStreamComponent_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "mat-spinner");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function LiveStreamComponent_div_2_p_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Please share this link to users to view your live stream ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "b");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, "https://player.cloud.wowza.com/hosted/bdp9kfmj/player.html");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function LiveStreamComponent_div_2_button_3_ng_container_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Prepare Live Stream ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }
    }

    function LiveStreamComponent_div_2_button_3_ng_container_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Preparing Live Stream ... ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }
    }

    function LiveStreamComponent_div_2_button_3_Template(rf, ctx) {
      if (rf & 1) {
        var _r344 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "button", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LiveStreamComponent_div_2_button_3_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r344);

          var ctx_r343 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r343.onStartLiveStream();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, LiveStreamComponent_div_2_button_3_ng_container_1_Template, 2, 0, "ng-container", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, LiveStreamComponent_div_2_button_3_ng_container_2_Template, 2, 0, "ng-container", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r338 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", ctx_r338.liveStreamStatus == "starting");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r338.liveStreamStatus !== "starting");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r338.liveStreamStatus == "starting");
      }
    }

    function LiveStreamComponent_div_2_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Please wait streaming engine may take upto 2 mins to start. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function LiveStreamComponent_div_2_p_5_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "p");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "mat-progress-bar", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function LiveStreamComponent_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, LiveStreamComponent_div_2_p_2_Template, 4, 0, "p", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, LiveStreamComponent_div_2_button_3_Template, 3, 3, "button", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, LiveStreamComponent_div_2_div_4_Template, 2, 0, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](5, LiveStreamComponent_div_2_p_5_Template, 2, 0, "p", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r335 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r335.errorMessage, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r335.liveStreamStatus == "started");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r335.liveStreamStatus !== "started");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r335.liveStreamStatus == "starting");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r335.liveStreamStatus == "starting");
      }
    }

    function LiveStreamComponent_div_3_iframe_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "iframe", 15);
      }

      if (rf & 2) {
        var ctx_r345 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("src", ctx_r345.urlSafe, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeResourceUrl"]);
      }
    }

    function LiveStreamComponent_div_3_button_2_Template(rf, ctx) {
      if (rf & 1) {
        var _r348 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "button", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LiveStreamComponent_div_3_button_2_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r348);

          var ctx_r347 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r347.onStopLiveStream();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Stop Stream ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function LiveStreamComponent_div_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, LiveStreamComponent_div_3_iframe_1_Template, 1, 1, "iframe", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, LiveStreamComponent_div_3_button_2_Template, 2, 0, "button", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r336 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r336.urlSafe);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r336.liveStreamStatus == "started");
      }
    }

    var LiveStreamComponent =
    /*#__PURE__*/
    function () {
      function LiveStreamComponent(_liveStream, sanitizer) {
        _classCallCheck(this, LiveStreamComponent);

        this._liveStream = _liveStream;
        this.sanitizer = sanitizer;
        this.liveStreamId = 'kgjcfbhv';
        this.liveStreamStatus = '';
        this.errorMessage = '';
        this.redirectedToStreamPage = false;
      }

      _createClass(LiveStreamComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee15() {
            var _this9 = this;

            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    _context15.next = 2;
                    return this.setLiveStreamDetails();

                  case 2:
                    this.$intervalRef = this._liveStream.getLiveRailyStatus(this.liveStreamId).subscribe(function (state) {
                      _this9.liveStreamStatus = state;

                      if (state === 'started') {
                        if (!_this9.redirectedToStreamPage) {
                          _this9.gotoStreamPage();

                          _this9.redirectedToStreamPage = true;
                        }
                      }

                      console.log(state);
                    });

                  case 3:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15, this);
          }));
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.$intervalRef && this.$intervalRef.unsubscribe();
        }
      }, {
        key: "onStartLiveStream",
        value: function onStartLiveStream() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee16() {
            var response, state, status;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    _context16.prev = 0;
                    _context16.next = 3;
                    return this._liveStream.startLiveStream(this.liveStreamId).toPromise();

                  case 3:
                    response = _context16.sent;
                    state = response.live_stream.state;
                    this.liveStreamStatus = state;
                    _context16.next = 13;
                    break;

                  case 8:
                    _context16.prev = 8;
                    _context16.t0 = _context16["catch"](0);
                    console.log(_context16.t0);
                    status = _context16.t0.error.meta.status;

                    if (status === 422) {
                      this.errorMessage = 'Stream is in start mode';
                    }

                  case 13:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16, this, [[0, 8]]);
          }));
        }
      }, {
        key: "setLiveStreamDetails",
        value: function setLiveStreamDetails() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee17() {
            var liveStream;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    _context17.next = 2;
                    return this._liveStream.getLiveStream(this.liveStreamId).toPromise();

                  case 2:
                    liveStream = _context17.sent;
                    this.liveStream = liveStream.live_stream;
                    console.log(liveStream);

                  case 5:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17, this);
          }));
        }
      }, {
        key: "setLiveStreamStatus",
        value: function setLiveStreamStatus() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee18() {
            var liveStreamStatus, state;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    _context18.next = 2;
                    return this._liveStream.getLiveStreamStatus(this.liveStreamId).toPromise();

                  case 2:
                    liveStreamStatus = _context18.sent;
                    state = liveStreamStatus.transcoder.state;
                    this.liveStreamStatus = state;

                  case 5:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18, this);
          }));
        }
      }, {
        key: "gotoStreamPage",
        value: function gotoStreamPage() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee19() {
            var connInfo, hostedPageURL, url;
            return regeneratorRuntime.wrap(function _callee19$(_context19) {
              while (1) {
                switch (_context19.prev = _context19.next) {
                  case 0:
                    connInfo = this.liveStream.source_connection_information;
                    console.log(connInfo);
                    hostedPageURL = this.liveStream.hosted_page_url; // http://localhost:3000/webrtc/dev-view-publish.html?sdpURL=wss%3A%2F%2F4465bd.entrypoint.cloud.wowza.com%2Fwebrtc-session.json&applicationName=app-84b5&streamName=N0NtNnZM&audioBitrate=64&audioCodec=opus&videoBitrate=3500&videoCodec=42e01f&videoFrameRate=30&frameSize=1280x720

                    url = "".concat(src_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].hostUrl, "/webrtc//dev-view-publish.html?applicationName=").concat(connInfo.application_name, "&hostedPageURL=").concat(hostedPageURL, "&sdpURL=").concat(connInfo.sdp_url, "&streamName=").concat(connInfo.stream_name, "&transcoderState=started");
                    this.urlSafe = this.sanitizer.bypassSecurityTrustResourceUrl(url);

                  case 5:
                  case "end":
                    return _context19.stop();
                }
              }
            }, _callee19, this);
          }));
        }
      }, {
        key: "onStopLiveStream",
        value: function onStopLiveStream() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee20() {
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    _context20.next = 2;
                    return this._liveStream.stopLiveStream(this.liveStreamId).toPromise();

                  case 2:
                    _context20.next = 4;
                    return this.setLiveStreamStatus();

                  case 4:
                    this.urlSafe = undefined;
                    this.redirectedToStreamPage = false;

                  case 6:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20, this);
          }));
        }
      }]);

      return LiveStreamComponent;
    }();

    LiveStreamComponent.ɵfac = function LiveStreamComponent_Factory(t) {
      return new (t || LiveStreamComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_services_live_stream_service__WEBPACK_IMPORTED_MODULE_3__["LiveStreamService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["DomSanitizer"]));
    };

    LiveStreamComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: LiveStreamComponent,
      selectors: [["app-live-stream"]],
      inputs: {
        liveStreamId: "liveStreamId"
      },
      decls: 4,
      vars: 3,
      consts: [[1, "content"], ["class", "loading", 4, "ngIf"], ["class", "stream-body", 4, "ngIf"], ["class", "stream-frame", 4, "ngIf"], [1, "loading"], [1, "stream-body"], [4, "ngIf"], ["mat-raised-button", "", "color", "primary", 3, "disabled", "click", 4, "ngIf"], ["class", "info", 4, "ngIf"], ["mat-raised-button", "", "color", "primary", 3, "disabled", "click"], [1, "info"], ["mode", "indeterminate"], [1, "stream-frame"], ["width", "100%", "height", "100%", "allow", "camera; microphone", "frameBorder", "0", "class", "iframe", 3, "src", 4, "ngIf"], ["mat-raised-button", "", "color", "primary", 3, "click", 4, "ngIf"], ["width", "100%", "height", "100%", "allow", "camera; microphone", "frameBorder", "0", 1, "iframe", 3, "src"], ["mat-raised-button", "", "color", "primary", 3, "click"]],
      template: function LiveStreamComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, LiveStreamComponent_div_1_Template, 2, 0, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, LiveStreamComponent_div_2_Template, 6, 5, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, LiveStreamComponent_div_3_Template, 3, 2, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.liveStreamStatus);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !!ctx.liveStreamStatus && !ctx.urlSafe);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.urlSafe);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_6__["MatSpinner"], _angular_material_button__WEBPACK_IMPORTED_MODULE_7__["MatButton"], _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_8__["MatProgressBar"]],
      styles: [".content[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n\n.iframe[_ngcontent-%COMP%] {\n  height: 100%;\n  width: 100%;\n}\n\n.stream-frame[_ngcontent-%COMP%] {\n  height: 100%;\n  width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvbGl2ZS1zdHJlYW0vbGl2ZS1zdHJlYW0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2xpdmUtc3RyZWFtL2xpdmUtc3RyZWFtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL2xpdmUtc3RyZWFtL2xpdmUtc3RyZWFtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uaWZyYW1lIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJVxufVxuXG4uc3RyZWFtLWZyYW1lIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJVxufSIsIi5jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmlmcmFtZSB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5zdHJlYW0tZnJhbWUge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LiveStreamComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-live-stream',
          templateUrl: './live-stream.component.html',
          styleUrls: ['./live-stream.component.scss']
        }]
      }], function () {
        return [{
          type: _services_live_stream_service__WEBPACK_IMPORTED_MODULE_3__["LiveStreamService"]
        }, {
          type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["DomSanitizer"]
        }];
      }, {
        liveStreamId: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/live-streamer/live-streamer.component.ts":
  /*!*************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/live-streamer/live-streamer.component.ts ***!
    \*************************************************************************************/

  /*! exports provided: LiveStreamerComponent */

  /***/
  function srcAppAdminDashboardComponentsLiveStreamerLiveStreamerComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LiveStreamerComponent", function () {
      return LiveStreamerComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _lib_AvMenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../../lib/AvMenu */
    "./src/app/lib/AvMenu.ts");
    /* harmony import */


    var _lib_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../lib/settings */
    "./src/app/lib/settings.ts");
    /* harmony import */


    var _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../lib/WowzaWebRTCPublish */
    "./src/app/lib/WowzaWebRTCPublish.ts");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");

    window.WowzaWebRTCPublish = _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"];
    var browserDetails = window.adapter.browserDetails;

    var LiveStreamerComponent =
    /*#__PURE__*/
    function () {
      function LiveStreamerComponent() {
        _classCallCheck(this, LiveStreamerComponent);
      }

      _createClass(LiveStreamerComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].stop();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          var _this10 = this;

          setTimeout(function () {
            console.log(document.getElementById('publisher-video'));

            _this10.initPublisher();
          }, 20);
        }
      }, {
        key: "initPublisher",
        value: function initPublisher() {
          console.log(this.connInfo);
          var connInfo = this.connInfo; // const url = `https://www.wowza.com/webrtc/publish?applicationName=${connInfo.application_name}&hostedPageURL=${hostedPageURL}&sdpURL=${connInfo.sdp_url}&streamName=${connInfo.stream_name}&transcoderState=started`;

          var state = {
            publishing: false,
            pendingPublish: false,
            pendingPublishTimeout: undefined,
            muted: false,
            video: true,
            settings: {
              sdpURL: connInfo.sdp_url,
              applicationName: connInfo.application_name,
              streamName: connInfo.stream_name,
              audioBitrate: "64",
              audioCodec: "opus",
              videoBitrate: "3500",
              videoCodec: "42e01f",
              videoFrameRate: "30",
              frameSize: "1280x720"
            }
          };

          var init = function init(connected, failed, stopped, errorHandler, soundMeter) {
            initListeners();

            _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].on({
              onStateChanged: function onStateChanged(newState) {
                console.log("WowzaWebRTCPublish.onStateChanged");
                console.log(JSON.stringify(newState)); // LIVE / ERROR Indicator

                if (newState.connectionState === 'connected') {
                  connected();
                } else if (newState.connectionState === 'failed') {
                  failed();
                } else {
                  stopped();
                }
              },
              onError: errorHandler,
              onSoundMeter: soundMeter
            });

            console.log(document.getElementById('publisher-video'));

            _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].set({
              videoElementPublish: document.getElementById('publisher-video'),
              useSoundMeter: true
            }).then(function (result) {
              _lib_AvMenu__WEBPACK_IMPORTED_MODULE_1__["default"].init(result.cameras, result.microphones, _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].setCamera, _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].setMicrophone);
            });
          };

          var getState = function getState() {
            return state;
          }; // throw errors with these messages


          var okToStart = function okToStart() {
            if (state.settings.sdpURL === "") {
              throw "No stream configured.";
            } else if (state.settings.applicationName === "") {
              throw "Missing application name.";
            } else if (state.settings.streamName === "") {
              throw "Missing stream name.";
            }

            return true;
          };

          var updateFrameSize = function updateFrameSize(frameSize) {
            var constraints = JSON.parse(JSON.stringify(_lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].getState().constraints));

            if (frameSize === 'default') {
              constraints.video["width"] = {
                min: "640",
                ideal: "1280",
                max: "1920"
              };
              constraints.video["height"] = {
                min: "360",
                ideal: "720",
                max: "1080"
              };
            } else {
              constraints.video["width"] = {
                exact: frameSize[0]
              };
              constraints.video["height"] = {
                exact: frameSize[1]
              };
            }

            _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].set({
              constraints: constraints
            });
          };

          var update = function update(settings) {
            state.settings = settings;
            return _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].set(settings);
          }; // start/stop publisher


          var start = function start() {
            if (okToStart()) {
              _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].start();
            }
          };

          var stop = function stop() {
            _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].stop();
          };

          var videoOn = function videoOn() {
            _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].setVideoEnabled(true);
          };

          var videoOff = function videoOff() {
            _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].setVideoEnabled(false);
          };

          var audioOn = function audioOn() {
            _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].setAudioEnabled(true);
          };

          var audioOff = function audioOff() {
            _lib_WowzaWebRTCPublish__WEBPACK_IMPORTED_MODULE_3__["default"].setAudioEnabled(false);
          }; // Helpers


          var errorHandler = function errorHandler(error) {
            var message;

            if (error.name == "OverconstrainedError") {
              message = "Your browser or camera does not support this frame size: " + $("#frameSize option:selected").val();
              $("#frameSize").val("default");
              updateFrameSize("default");
            } else if (error.message) {
              message = error.message;
            } else {
              message = error;
            }

            showErrorPanel(message);
            stop();
          };

          var setPendingPublish = function setPendingPublish(pending) {
            if (pending) {
              $("#publish-toggle").prop("disabled", true);
              state.pendingPublish = true;
              state.pendingPublishTimeout = setTimeout(function () {
                $("#publish-toggle").prop("disabled", false);
                stop();
                errorHandler({
                  message: "Publish failed. Unable to connect."
                });
                setPendingPublish(false);
              }, 10000);
            } else {
              $("#publish-toggle").prop("disabled", false);
              state.pendingPublish = false;

              if (state.pendingPublishTimeout != null) {
                clearTimeout(state.pendingPublishTimeout);
                state.pendingPublishTimeout = undefined;
              }
            }
          };

          var updatePublisher = function updatePublisher() {
            var publishSettings = _lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].mapFromForm(_lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].serializeArrayFormValues($("#publish-settings-form")));

            _lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].saveToCookie(publishSettings);

            return update(publishSettings);
          };
          /*
            UI updaters
          */


          var showErrorPanel = function showErrorPanel(message) {
            message = "<div>" + message + "</div>";
            $("#error-messages").html(message);
            $("#error-panel").removeClass('invisible');
          };

          var hideErrorPanel = function hideErrorPanel() {
            $("#error-messages").html("&nbsp;");
            $("#error-panel").addClass('invisible');
          }; // sound meter


          var onSoundMeter = function onSoundMeter(level) {
            // map level onto the rising quadrant shape of a circle to exaggerate the sound meter gradient
            var shiftLevel = level - 1;
            var levelCirc = Math.round(100 * Math.sqrt(1 - shiftLevel * shiftLevel));
            $("#mute-toggle").css("background-image", "linear-gradient(white " + (100 - levelCirc) + "%, lime)");
          };

          var onPublishPeerConnected = function onPublishPeerConnected() {
            state.publishing = true;
            setPendingPublish(false);
            hideErrorPanel();
            $("#transcoder-warning").hide();
            $("#error-messages").html("");
            $("#publish-toggle").html("Stop");
            $("#video-live-indicator-live").show();
            $("#video-live-indicator-error").hide();
            $("#publish-settings-form :input").prop("disabled", true);
            $("#publish-settings-form :button").prop("disabled", false);
          };

          var onPublishPeerConnectionFailed = function onPublishPeerConnectionFailed() {
            setPendingPublish(false);
            onPublishingConnected();
            errorHandler({
              message: "Peer connection failed."
            });
            $("#publish-settings-form :input").prop("disabled", false);
            $("#publish-settings-form :button").prop("disabled", false);
          };

          var onPublishPeerConnectionStopped = function onPublishPeerConnectionStopped() {
            if (!state.pendingPublish) {
              state.publishing = false;
              $("#publish-toggle").html("Publish");
              $("#video-live-indicator-live").hide();
              $("#video-live-indicator-error").hide();
              $("#publish-settings-form :input").prop("disabled", false);
              $("#publish-settings-form :button").prop("disabled", false);
            }
          }; // Listeners


          var initListeners = function initListeners() {
            $("#mute-toggle").click(function (e) {
              e.preventDefault();
              state.muted = !state.muted;

              if (state.muted) {
                $("#mute-off").css("display", "none");
                $("#mute-on").css("display", "inline");
                audioOff();
              } else {
                $("#mute-on").css("display", "none");
                $("#mute-off").css("display", "inline");
                audioOn();
              }
            });
            $("#camera-toggle").click(function (e) {
              e.preventDefault();
              state.video = !state.video;

              if (state.video) {
                $("#video-on").css("display", "none");
                $("#video-off").css("display", "inline");
                videoOn();
              } else {
                $("#video-off").css("display", "none");
                $("#video-on").css("display", "inline");
                videoOff();
              }
            });
            $("#frameSize").change(function () {
              hideErrorPanel();
              var resolution = $("#frameSize option:selected").val();

              if (resolution !== 'default') {
                resolution = $("#frameSize option:selected").val().split("x");
              }

              updateFrameSize(resolution);
            });
            $('#publish-share-link').click(function () {
              _lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].shareLink(_lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].mapFromForm(_lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].serializeArrayFormValues($("#publish-settings-form"))), "Share link copied to clipboard!");
            });
            $('#publish-share-link').popover({
              content: "Copy config",
              trigger: "hover",
              placement: "bottom"
            });
            $("#error-panel-close").click(function (e) {
              hideErrorPanel();
            });
            $("#publish-toggle").click(function (e) {
              if (state.pendingPublish) {
                return;
              } else if (state.publishing) {
                stop();
              } else {
                try {
                  hideErrorPanel();
                  updatePublisher().then(function () {
                    setPendingPublish(true);
                    start();
                  });
                } catch (e) {
                  errorHandler(e);
                }
              }
            });
          };

          var initFormAndSettings = function initFormAndSettings() {
            var pageParams = _lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].mapFromCookie(state.settings);

            pageParams = _lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].mapFromQueryParams(pageParams);

            _lib_settings__WEBPACK_IMPORTED_MODULE_2__["default"].updateForm(pageParams);

            if (pageParams.frameSize != null && pageParams.frameSize !== '' && pageParams.frameSize !== 'default') {
              updateFrameSize(pageParams.frameSize.split('x'));
            }

            if (browserDetails.browser === 'safari') {
              $("#videoCodec option[value='VP9']").remove();
            }
          };

          initFormAndSettings();
          init(onPublishPeerConnected, onPublishPeerConnectionFailed, onPublishPeerConnectionStopped, errorHandler, onSoundMeter);
        }
      }]);

      return LiveStreamerComponent;
    }();

    LiveStreamerComponent.ɵfac = function LiveStreamerComponent_Factory(t) {
      return new (t || LiveStreamerComponent)();
    };

    LiveStreamerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: LiveStreamerComponent,
      selectors: [["app-live-streamer"]],
      inputs: {
        connInfo: "connInfo"
      },
      decls: 135,
      vars: 0,
      consts: [["id", "transcoder-warning", 1, "row", "justify-content-center", 2, "display", "none"], [1, "col-12", "alert", "alert-warning", "p-2", "text-center"], ["href", "https://cloud.wowza.com"], ["id", "error-panel", 1, "row", "justify-content-center", "invisible", "mt-3"], [1, "col-10", "alert", "alert-danger", "alert-dismissible", "p-2"], ["id", "error-panel-close", "type", "button", "aria-label", "Close", 1, "close"], ["aria-hidden", "true"], ["id", "error-messages"], ["id", "publish-content", 1, "container-fluid", "mt-3"], [1, "row", "justify-content-center"], [1, "col-md-8", "col-sm-12"], ["id", "publish-video-container"], ["id", "publisher-video", "autoplay", "", "playsinline", "", "muted", "", "controls", ""], ["id", "video-live-indicator"], ["id", "video-live-indicator-live", 1, "badge", "badge-pill", "badge-danger", 2, "display", "none"], ["id", "video-live-indicator-error", 1, "badge", "badge-pill", "badge-warning", 2, "display", "none"], ["id", "publish-settings", 1, "col-md-4", "col-sm-12"], ["id", "publish-settings-form"], [1, "row"], [1, "col-12"], [1, "form-group"], ["for", "sdpURL"], ["type", "text", "id", "sdpURL", "name", "sdpURL", "maxlength", "1024", "placeholder", "wss://[ssl-certificate-domain-name]/webrtc-session.json", 1, "form-control"], [1, "col-lg-6", "col-sm-12"], ["for", "applicationName"], ["type", "text", "id", "applicationName", "name", "applicationName", "maxlength", "256", 1, "form-control"], ["for", "streamName"], ["type", "text", "id", "streamName", "name", "streamName", "maxlength", "256", 1, "form-control"], ["for", "audioBitrate"], [1, "input-group"], ["type", "number", "id", "audioBitrate", "name", "audioBitrate", "value", "64", 1, "form-control"], [1, "input-group-append"], [1, "input-group-text"], ["for", "audioCodec"], ["id", "audioCodec", "name", "audioCodec", 1, "form-control"], ["value", "opus", "selected", ""], ["for", "videoBitrate"], ["type", "number", "id", "videoBitrate", "name", "videoBitrate", "value", "3500", 1, "form-control"], ["for", "videoCodec"], ["id", "videoCodec", "name", "videoCodec", 1, "form-control"], ["value", "42e01f", "selected", ""], ["value", "VP8"], ["value", "VP9"], ["for", "videoFrameRate"], ["type", "number", "id", "videoFrameRate", "name", "videoFrameRate", "value", "30", 1, "form-control"], ["for", "frameSize"], ["id", "frameSize", "name", "frameSize", 1, "form-control"], ["selected", "", "value", "default"], ["value", "1920x1080"], ["value", "1280x720"], ["value", "800x600"], ["value", "640x360"], [1, "col-10"], ["for", "camera-list-select"], ["id", "camera-list-select", 1, "form-control"], [1, "col-2"], ["id", "camera-toggle", 1, "control-button"], ["alt", "", "id", "video-off", "src", "/assets/img/videocam-32px.svg", 1, "noll"], ["alt", "", "id", "video-on", "src", "/assets/img/videocam-off-32px.svg", 1, "noll", 2, "display", "none"], ["for", "mic-list-select"], ["id", "mic-list-select", 1, "form-control"], ["id", "mute-toggle", 1, "control-button"], ["alt", "", "id", "mute-off", "src", "/assets/img/mic-32px.svg", 1, "noll"], ["alt", "", "id", "mute-on", "src", "/assets/img/mic-off-32px.svg", 1, "noll", 2, "display", "none"], ["id", "publish-toggle", "type", "button", 1, "btn"], ["id", "sdpDataTag"]],
      template: function LiveStreamerComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, " Please visit ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "a", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "cloud.wowza.com");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6, " to start your live stream. ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "button", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "span", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "\xD7");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "\xA0");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](18, "video", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "span", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "LIVE");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "span", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](23, "ERROR");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "div", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "form", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "div", 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "label", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](30, "Signaling URL");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](31, "input", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "label", 24);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](36, "Application Name");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](37, "input", 25);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](38, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](39, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](40, "label", 26);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](41, "Stream Name");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](42, "input", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](43, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](45, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](46, "label", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](47, "Audio Bitrate");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](48, "div", 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](49, "input", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](50, "div", 31);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](51, "span", 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](52, "Kbps");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](53, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](54, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](55, "label", 33);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](56, "Audio Codec");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](57, "div", 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](58, "select", 34);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](59, "option", 35);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](60, "Opus");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](61, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](62, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](63, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](64, "label", 36);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](65, "Video Bitrate");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](66, "div", 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](67, "input", 37);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](68, "div", 31);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](69, "span", 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](70, "Kbps");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](71, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](72, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](73, "label", 38);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](74, "Video Codec");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](75, "div", 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](76, "select", 39);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](77, "option", 40);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](78, "H.264");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](79, "option", 41);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](80, "VP8");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](81, "option", 42);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](82, "VP9");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](83, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](84, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](85, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](86, "label", 43);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](87, "Frame Rate");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](88, "div", 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](89, "input", 44);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](90, "div", 31);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](91, "span", 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](92, "fps");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](93, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](94, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](95, "label", 45);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](96, "Frame Size");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](97, "div", 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](98, "select", 46);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](99, "option", 47);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](100, " Default ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](101, "option", 48);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](102, " 1920x1080 ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](103, "option", 49);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](104, " 1280x720 ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](105, "option", 50);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](106, " 800x600 ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](107, "option", 51);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](108, " 640x360 ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](109, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](110, "div", 52);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](111, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](112, "label", 53);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](113, " Input Camera ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](114, "select", 54);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](115, "div", 55);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](116, "button", 56);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](117, "img", 57);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](118, "img", 58);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](119, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](120, "div", 52);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](121, "div", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](122, "label", 59);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](123, " Input Microphone ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](124, "select", 60);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](125, "div", 55);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](126, "button", 61);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](127, "img", 62);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](128, "img", 63);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](129, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](130, "div", 52);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](131, "button", 64);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](132, "Publish");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](133, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](134, "span", 65);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgForm"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["ɵangular_packages_forms_forms_x"]],
      styles: ["a[_ngcontent-%COMP%]:disabled, button[_ngcontent-%COMP%]:disabled {\n  cursor: not-allowed;\n}\n\n.alert-dismissible[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%] {\n  padding: 0.4rem 1.25rem;\n}\n\n#top-nav[_ngcontent-%COMP%] {\n  background: #FFFFFF;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05);\n}\n\n#content[_ngcontent-%COMP%] {\n  margin-top: 3em;\n  max-width: 1500px;\n}\n\n#player-video[_ngcontent-%COMP%], #publisher-video[_ngcontent-%COMP%] {\n  width: 100% !important;\n  height: auto !important;\n  background: #EEEEEE;\n  border-radius: 10px;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n#video-live-indicator[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0.5em;\n  left: 1.5em;\n  opacity: 90%;\n}\n\n#build[_ngcontent-%COMP%] {\n  position: absolute;\n  color: #ccc;\n  font-size: 50%;\n  bottom: 1em;\n  right: 1em;\n}\n\n#play-video-container[_ngcontent-%COMP%] {\n  height: 0;\n  width: 100%;\n  padding-bottom: 57%;\n  background-color: #666666;\n  border-radius: 0.75em;\n}\n\n#publish-content[_ngcontent-%COMP%], #play-content[_ngcontent-%COMP%] {\n  max-width: 1500px;\n}\n\n#play-settings[_ngcontent-%COMP%], #publish-settings[_ngcontent-%COMP%] {\n  background: #FFFFFF;\n  border: 1px solid #F0F0F0;\n  box-sizing: border-box;\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n  padding: 1em;\n}\n\n#play-toggle[_ngcontent-%COMP%], #publish-toggle[_ngcontent-%COMP%] {\n  background: #FF8400;\n  border-radius: 55px;\n  width: 100%;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 130%;\n  text-align: center;\n  color: #FFFFFF;\n}\n\n#navbarNav[_ngcontent-%COMP%] {\n  height: 40px;\n}\n\n#play-share-link[_ngcontent-%COMP%], #publish-share-link[_ngcontent-%COMP%] {\n  padding: 0.25em 0.7em;\n}\n\n#play-share-link[_ngcontent-%COMP%], #publish-share-link[_ngcontent-%COMP%]:focus {\n  outline: none;\n}\n\n.control-button[_ngcontent-%COMP%] {\n  background: #FFFFFF;\n  border: 1px solid #B2B3B5;\n  box-sizing: border-box;\n  border-radius: 6px;\n  margin-top: 2em;\n}\n\nul.navbar-nav[_ngcontent-%COMP%] {\n  flex-direction: unset;\n}\n\n.navbar-nav[_ngcontent-%COMP%]   li.nav-item.page[_ngcontent-%COMP%] {\n  text-align: center;\n}\n\n.navbar-nav[_ngcontent-%COMP%]   li.nav-item.page.active[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\n  border-bottom: solid 3px #65686A;\n}\n\n.navbar-nav[_ngcontent-%COMP%]   li.nav-item.page[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\n  padding: 0 40px 0 40px;\n  position: relative;\n  left: 0;\n  display: block;\n  top: 20px;\n  border-bottom: none;\n}\n\n.navbar-nav[_ngcontent-%COMP%]   li.nav-item[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\n  text-decoration: none;\n  color: #939597;\n}\n\n.navbar-nav[_ngcontent-%COMP%]   li.nav-item.active[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\n  color: #65686A;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvbGl2ZS1zdHJlYW1lci9saXZlLXN0cmVhbWVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9saXZlLXN0cmVhbWVyL2xpdmUtc3RyZWFtZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsbUJBQUE7QUNDRjs7QURDQTtFQUNFLHVCQUFBO0FDRUY7O0FEQUE7RUFDRSxtQkFBQTtFQUNBLDJDQUFBO0FDR0Y7O0FEREE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7QUNJRjs7QURGQTs7RUFFRSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLDJCQUFBO0FDS0Y7O0FESEE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQ01GOztBREpBO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0FDT0Y7O0FETEE7RUFDRSxTQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtBQ1FGOztBRE5BOztFQUVFLGlCQUFBO0FDU0Y7O0FEUEE7O0VBRUUsbUJBQUE7RUFDQSx5QkFBQTtFQUNBLHNCQUFBO0VBQ0EsMkNBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7QUNVRjs7QURSQTs7RUFFRSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0FDV0Y7O0FEVEE7RUFDRSxZQUFBO0FDWUY7O0FEVkE7O0VBRUUscUJBQUE7QUNhRjs7QURYQTs7RUFFRSxhQUFBO0FDY0Y7O0FEWkE7RUFDRSxtQkFBQTtFQUNBLHlCQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUNlRjs7QURiQTtFQUNFLHFCQUFBO0FDZ0JGOztBRGRBO0VBQ0Usa0JBQUE7QUNpQkY7O0FEZkE7RUFDRSxnQ0FBQTtBQ2tCRjs7QURoQkE7RUFDRSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLGNBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7QUNtQkY7O0FEakJBO0VBQ0UscUJBQUE7RUFDQSxjQUFBO0FDb0JGOztBRGxCQTtFQUNFLGNBQUE7QUNxQkYiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9saXZlLXN0cmVhbWVyL2xpdmUtc3RyZWFtZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhOmRpc2FibGVkLFxuYnV0dG9uOmRpc2FibGVkIHtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cbi5hbGVydC1kaXNtaXNzaWJsZSAuY2xvc2Uge1xuICBwYWRkaW5nOiAuNHJlbSAxLjI1cmVtO1xufVxuI3RvcC1uYXYge1xuICBiYWNrZ3JvdW5kOiAjRkZGRkZGO1xuICBib3gtc2hhZG93OiAwcHggM3B4IDNweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xufVxuI2NvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAzZW07XG4gIG1heC13aWR0aDogMTUwMHB4O1xufVxuI3BsYXllci12aWRlbyxcbiNwdWJsaXNoZXItdmlkZW8ge1xuICB3aWR0aDogMTAwJSAgICAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IGF1dG8gICAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kOiAjRUVFRUVFO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuI3ZpZGVvLWxpdmUtaW5kaWNhdG9yIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDAuNWVtO1xuICBsZWZ0OiAxLjVlbTtcbiAgb3BhY2l0eTogOTAlO1xufVxuI2J1aWxkIHtcbiAgcG9zaXRpb246YWJzb2x1dGU7XG4gIGNvbG9yOiNjY2M7XG4gIGZvbnQtc2l6ZTo1MCU7XG4gIGJvdHRvbToxZW07XG4gIHJpZ2h0OjFlbTtcbn1cbiNwbGF5LXZpZGVvLWNvbnRhaW5lciB7XG4gIGhlaWdodDowO1xuICB3aWR0aDoxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTo1NyU7XG4gIGJhY2tncm91bmQtY29sb3I6cmdiYSgxMDIsIDEwMiwgMTAyLCAxKTtcbiAgYm9yZGVyLXJhZGl1czowLjc1ZW07XG59XG4jcHVibGlzaC1jb250ZW50LFxuI3BsYXktY29udGVudCB7XG4gIG1heC13aWR0aDogMTUwMHB4O1xufVxuI3BsYXktc2V0dGluZ3MsXG4jcHVibGlzaC1zZXR0aW5ncyB7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNGMEYwRjA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgcGFkZGluZzogMWVtO1xufVxuI3BsYXktdG9nZ2xlLFxuI3B1Ymxpc2gtdG9nZ2xlIHtcbiAgYmFja2dyb3VuZDogI0ZGODQwMDtcbiAgYm9yZGVyLXJhZGl1czogNTVweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgbGluZS1oZWlnaHQ6IDEzMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG4jbmF2YmFyTmF2IHtcbiAgaGVpZ2h0OiA0MHB4O1xufVxuI3BsYXktc2hhcmUtbGluayxcbiNwdWJsaXNoLXNoYXJlLWxpbmsge1xuICBwYWRkaW5nOiAwLjI1ZW0gMC43ZW07XG59XG4jcGxheS1zaGFyZS1saW5rLFxuI3B1Ymxpc2gtc2hhcmUtbGluazpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG4uY29udHJvbC1idXR0b24ge1xuICBiYWNrZ3JvdW5kOiAjRkZGRkZGO1xuICBib3JkZXI6IDFweCBzb2xpZCAjQjJCM0I1O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIG1hcmdpbi10b3A6IDJlbTtcbn1cbnVsLm5hdmJhci1uYXYge1xuICBmbGV4LWRpcmVjdGlvbjogdW5zZXQ7XG59XG4ubmF2YmFyLW5hdiBsaS5uYXYtaXRlbS5wYWdlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLm5hdmJhci1uYXYgbGkubmF2LWl0ZW0ucGFnZS5hY3RpdmUgc3BhbntcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgM3B4ICAjNjU2ODZBO1xufVxuLm5hdmJhci1uYXYgbGkubmF2LWl0ZW0ucGFnZSBzcGFuIHtcbiAgcGFkZGluZzogMCA0MHB4IDAgNDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdG9wOiAyMHB4O1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuLm5hdmJhci1uYXYgbGkubmF2LWl0ZW0gYXtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzkzOTU5Nztcbn1cbi5uYXZiYXItbmF2IGxpLm5hdi1pdGVtLmFjdGl2ZSBhe1xuICBjb2xvcjogIzY1Njg2QTtcbn0iLCJhOmRpc2FibGVkLFxuYnV0dG9uOmRpc2FibGVkIHtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cblxuLmFsZXJ0LWRpc21pc3NpYmxlIC5jbG9zZSB7XG4gIHBhZGRpbmc6IDAuNHJlbSAxLjI1cmVtO1xufVxuXG4jdG9wLW5hdiB7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gIGJveC1zaGFkb3c6IDBweCAzcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG59XG5cbiNjb250ZW50IHtcbiAgbWFyZ2luLXRvcDogM2VtO1xuICBtYXgtd2lkdGg6IDE1MDBweDtcbn1cblxuI3BsYXllci12aWRlbyxcbiNwdWJsaXNoZXItdmlkZW8ge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZDogI0VFRUVFRTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuI3ZpZGVvLWxpdmUtaW5kaWNhdG9yIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDAuNWVtO1xuICBsZWZ0OiAxLjVlbTtcbiAgb3BhY2l0eTogOTAlO1xufVxuXG4jYnVpbGQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbG9yOiAjY2NjO1xuICBmb250LXNpemU6IDUwJTtcbiAgYm90dG9tOiAxZW07XG4gIHJpZ2h0OiAxZW07XG59XG5cbiNwbGF5LXZpZGVvLWNvbnRhaW5lciB7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctYm90dG9tOiA1NyU7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2NjY2NjY7XG4gIGJvcmRlci1yYWRpdXM6IDAuNzVlbTtcbn1cblxuI3B1Ymxpc2gtY29udGVudCxcbiNwbGF5LWNvbnRlbnQge1xuICBtYXgtd2lkdGg6IDE1MDBweDtcbn1cblxuI3BsYXktc2V0dGluZ3MsXG4jcHVibGlzaC1zZXR0aW5ncyB7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNGMEYwRjA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgcGFkZGluZzogMWVtO1xufVxuXG4jcGxheS10b2dnbGUsXG4jcHVibGlzaC10b2dnbGUge1xuICBiYWNrZ3JvdW5kOiAjRkY4NDAwO1xuICBib3JkZXItcmFkaXVzOiA1NXB4O1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBsaW5lLWhlaWdodDogMTMwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuI25hdmJhck5hdiB7XG4gIGhlaWdodDogNDBweDtcbn1cblxuI3BsYXktc2hhcmUtbGluayxcbiNwdWJsaXNoLXNoYXJlLWxpbmsge1xuICBwYWRkaW5nOiAwLjI1ZW0gMC43ZW07XG59XG5cbiNwbGF5LXNoYXJlLWxpbmssXG4jcHVibGlzaC1zaGFyZS1saW5rOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmNvbnRyb2wtYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgYm9yZGVyOiAxcHggc29saWQgI0IyQjNCNTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBtYXJnaW4tdG9wOiAyZW07XG59XG5cbnVsLm5hdmJhci1uYXYge1xuICBmbGV4LWRpcmVjdGlvbjogdW5zZXQ7XG59XG5cbi5uYXZiYXItbmF2IGxpLm5hdi1pdGVtLnBhZ2Uge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5uYXZiYXItbmF2IGxpLm5hdi1pdGVtLnBhZ2UuYWN0aXZlIHNwYW4ge1xuICBib3JkZXItYm90dG9tOiBzb2xpZCAzcHggIzY1Njg2QTtcbn1cblxuLm5hdmJhci1uYXYgbGkubmF2LWl0ZW0ucGFnZSBzcGFuIHtcbiAgcGFkZGluZzogMCA0MHB4IDAgNDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdG9wOiAyMHB4O1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuXG4ubmF2YmFyLW5hdiBsaS5uYXYtaXRlbSBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzkzOTU5Nztcbn1cblxuLm5hdmJhci1uYXYgbGkubmF2LWl0ZW0uYWN0aXZlIGEge1xuICBjb2xvcjogIzY1Njg2QTtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LiveStreamerComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-live-streamer',
          templateUrl: './live-streamer.component.html',
          styleUrls: ['./live-streamer.component.scss']
        }]
      }], function () {
        return [];
      }, {
        connInfo: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/multi-select/multi-select.component.ts":
  /*!***********************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/multi-select/multi-select.component.ts ***!
    \***********************************************************************************/

  /*! exports provided: MultiSelectComponent */

  /***/
  function srcAppAdminDashboardComponentsMultiSelectMultiSelectComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MultiSelectComponent", function () {
      return MultiSelectComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! src/app/auth/services/auth.service */
    "./src/app/auth/services/auth.service.ts");
    /* harmony import */


    var angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! angular2-multiselect-dropdown */
    "./node_modules/angular2-multiselect-dropdown/__ivy_ngcc__/fesm2015/angular2-multiselect-dropdown.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _shared_pipes_role_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../shared/pipes/role.pipe */
    "./src/app/shared/pipes/role.pipe.ts");

    function MultiSelectComponent_ng_template_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "label", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "role");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var user_r351 = ctx.item;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate2"]("", user_r351.name, " | ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 2, user_r351.role), "");
      }
    }

    function MultiSelectComponent_ng_template_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "label", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "role");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var user_r352 = ctx.item;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate2"]("", user_r352.name, " | ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 2, user_r352.role), "");
      }
    }

    var states = ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District Of Columbia', 'Federated States Of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Islands', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];

    var MultiSelectComponent =
    /*#__PURE__*/
    function () {
      function MultiSelectComponent(auth) {
        _classCallCheck(this, MultiSelectComponent);

        this.auth = auth;
        this.dropdownList = [];
        this.selectedUsers = [];
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.dropdownSettings = {};
      }

      _createClass(MultiSelectComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.fetchUsers();
        }
      }, {
        key: "fetchUsers",
        value: function fetchUsers() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee21() {
            var response;
            return regeneratorRuntime.wrap(function _callee21$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    _context21.next = 2;
                    return this.auth.getAllUsers().toPromise();

                  case 2:
                    response = _context21.sent;
                    this.users = response['data'];
                    this.configDropDown();

                  case 5:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee21, this);
          }));
        }
      }, {
        key: "configDropDown",
        value: function configDropDown() {
          this.dropdownList = this.users.map(function (user) {
            return Object.assign(Object.assign({}, user), {
              id: user._id
            });
          }); // this.selectedUsers = [
          //   { "id": 2, "itemName": "Singapore" },
          //   { "id": 3, "itemName": "Australia" },
          //   { "id": 4, "itemName": "Canada" },
          //   { "id": 5, "itemName": "South Korea" }
          // ];

          this.dropdownSettings = {
            singleSelection: false,
            text: "Select Users",
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            enableSearchFilter: true,
            classes: "custom-class"
          };
        }
      }, {
        key: "onItemSelect",
        value: function onItemSelect(item) {
          console.log(item);
          console.log(this.selectedUsers);
          this.change.emit(item);
        }
      }, {
        key: "OnItemDeSelect",
        value: function OnItemDeSelect(item) {
          console.log(item);
          console.log(this.selectedUsers);
        }
      }, {
        key: "onSelectAll",
        value: function onSelectAll(items) {
          console.log(items);
        }
      }, {
        key: "onDeSelectAll",
        value: function onDeSelectAll(items) {
          console.log(items);
        }
      }]);

      return MultiSelectComponent;
    }();

    MultiSelectComponent.ɵfac = function MultiSelectComponent_Factory(t) {
      return new (t || MultiSelectComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"]));
    };

    MultiSelectComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: MultiSelectComponent,
      selectors: [["app-multi-select"]],
      inputs: {
        selectedUsers: "selectedUsers"
      },
      outputs: {
        change: "change"
      },
      decls: 5,
      vars: 3,
      consts: [[3, "data", "ngModel", "settings", "ngModelChange", "onSelect", "onDeSelect", "onSelectAll", "onDeSelectAll"], [2, "color", "#333", "min-width", "150px", "font-size", "15px"], [2, "margin", "0px", "font-size", "15px"]],
      template: function MultiSelectComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "angular2-multiselect", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function MultiSelectComponent_Template_angular2_multiselect_ngModelChange_0_listener($event) {
            return ctx.selectedUsers = $event;
          })("onSelect", function MultiSelectComponent_Template_angular2_multiselect_onSelect_0_listener($event) {
            return ctx.onItemSelect($event);
          })("onDeSelect", function MultiSelectComponent_Template_angular2_multiselect_onDeSelect_0_listener($event) {
            return ctx.OnItemDeSelect($event);
          })("onSelectAll", function MultiSelectComponent_Template_angular2_multiselect_onSelectAll_0_listener($event) {
            return ctx.onSelectAll($event);
          })("onDeSelectAll", function MultiSelectComponent_Template_angular2_multiselect_onDeSelectAll_0_listener($event) {
            return ctx.onDeSelectAll($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "c-item");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, MultiSelectComponent_ng_template_2_Template, 3, 4, "ng-template");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "c-badge");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, MultiSelectComponent_ng_template_4_Template, 3, 4, "ng-template");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("data", ctx.dropdownList)("ngModel", ctx.selectedUsers)("settings", ctx.dropdownSettings);
        }
      },
      directives: [angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_3__["AngularMultiSelect"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgModel"], angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_3__["Item"], angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_3__["ɵf"]],
      pipes: [_shared_pipes_role_pipe__WEBPACK_IMPORTED_MODULE_5__["RolePipe"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL211bHRpLXNlbGVjdC9tdWx0aS1zZWxlY3QuY29tcG9uZW50LnNjc3MifQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MultiSelectComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-multi-select',
          templateUrl: './multi-select.component.html',
          styleUrls: ['./multi-select.component.scss']
        }]
      }], function () {
        return [{
          type: src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"]
        }];
      }, {
        selectedUsers: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        change: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/private-room/private-room.component.ts":
  /*!***********************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/private-room/private-room.component.ts ***!
    \***********************************************************************************/

  /*! exports provided: PrivateRoomComponent */

  /***/
  function srcAppAdminDashboardComponentsPrivateRoomPrivateRoomComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PrivateRoomComponent", function () {
      return PrivateRoomComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _live_stream_live_stream_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../live-stream/live-stream.component */
    "./src/app/admin-dashboard/components/live-stream/live-stream.component.ts");

    var PrivateRoomComponent =
    /*#__PURE__*/
    function () {
      function PrivateRoomComponent() {
        _classCallCheck(this, PrivateRoomComponent);

        this.liveStreamId = 'x9mzbnhf';
      }

      _createClass(PrivateRoomComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return PrivateRoomComponent;
    }();

    PrivateRoomComponent.ɵfac = function PrivateRoomComponent_Factory(t) {
      return new (t || PrivateRoomComponent)();
    };

    PrivateRoomComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: PrivateRoomComponent,
      selectors: [["app-private-room"]],
      decls: 1,
      vars: 1,
      consts: [[3, "liveStreamId"]],
      template: function PrivateRoomComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "app-live-stream", 0);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("liveStreamId", ctx.liveStreamId);
        }
      },
      directives: [_live_stream_live_stream_component__WEBPACK_IMPORTED_MODULE_1__["LiveStreamComponent"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL3ByaXZhdGUtcm9vbS9wcml2YXRlLXJvb20uY29tcG9uZW50LnNjc3MifQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PrivateRoomComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-private-room',
          templateUrl: './private-room.component.html',
          styleUrls: ['./private-room.component.scss']
        }]
      }], function () {
        return [];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/public-room/public-room.component.ts":
  /*!*********************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/public-room/public-room.component.ts ***!
    \*********************************************************************************/

  /*! exports provided: PublicRoomComponent */

  /***/
  function srcAppAdminDashboardComponentsPublicRoomPublicRoomComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PublicRoomComponent", function () {
      return PublicRoomComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _live_stream_live_stream_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../live-stream/live-stream.component */
    "./src/app/admin-dashboard/components/live-stream/live-stream.component.ts");

    var PublicRoomComponent =
    /*#__PURE__*/
    function () {
      function PublicRoomComponent() {
        _classCallCheck(this, PublicRoomComponent);

        this.liveStreamId = 'kgjcfbhv';
      }

      _createClass(PublicRoomComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return PublicRoomComponent;
    }();

    PublicRoomComponent.ɵfac = function PublicRoomComponent_Factory(t) {
      return new (t || PublicRoomComponent)();
    };

    PublicRoomComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: PublicRoomComponent,
      selectors: [["app-public-room"]],
      decls: 1,
      vars: 1,
      consts: [[3, "liveStreamId"]],
      template: function PublicRoomComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "app-live-stream", 0);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("liveStreamId", ctx.liveStreamId);
        }
      },
      directives: [_live_stream_live_stream_component__WEBPACK_IMPORTED_MODULE_1__["LiveStreamComponent"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL3B1YmxpYy1yb29tL3B1YmxpYy1yb29tLmNvbXBvbmVudC5zY3NzIn0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PublicRoomComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-public-room',
          templateUrl: './public-room.component.html',
          styleUrls: ['./public-room.component.scss']
        }]
      }], function () {
        return [];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/resource-actions/resource-actions.component.ts":
  /*!*******************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/resource-actions/resource-actions.component.ts ***!
    \*******************************************************************************************/

  /*! exports provided: ResourceActionsComponent */

  /***/
  function srcAppAdminDashboardComponentsResourceActionsResourceActionsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ResourceActionsComponent", function () {
      return ResourceActionsComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _update_resource_dialog_update_resource_dialog_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../update-resource-dialog/update-resource-dialog.component */
    "./src/app/admin-dashboard/components/update-resource-dialog/update-resource-dialog.component.ts");
    /* harmony import */


    var _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../shared/services/resource.service */
    "./src/app/shared/services/resource.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");

    var ResourceActionsComponent =
    /*#__PURE__*/
    function () {
      function ResourceActionsComponent(resourceService, dialog) {
        _classCallCheck(this, ResourceActionsComponent);

        this.resourceService = resourceService;
        this.dialog = dialog;
        this.onUpdate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onDelete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass(ResourceActionsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onEdit",
        value: function onEdit() {
          var _this11 = this;

          var dialogRef = this.dialog.open(_update_resource_dialog_update_resource_dialog_component__WEBPACK_IMPORTED_MODULE_1__["UpdateResourceDialogComponent"], {
            width: '600px',
            data: {
              resourceUrl: this.resourceUrl,
              resource: this.resource
            }
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this11.onUpdate.emit(result);
          });
        }
      }, {
        key: "onDeleteEmit",
        value: function onDeleteEmit() {
          this.onDelete.emit(this.resource);
        }
      }]);

      return ResourceActionsComponent;
    }();

    ResourceActionsComponent.ɵfac = function ResourceActionsComponent_Factory(t) {
      return new (t || ResourceActionsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_shared_services_resource_service__WEBPACK_IMPORTED_MODULE_2__["ResourceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialog"]));
    };

    ResourceActionsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: ResourceActionsComponent,
      selectors: [["app-resource-actions"]],
      inputs: {
        resource: "resource",
        resourceUrl: "resourceUrl"
      },
      outputs: {
        onUpdate: "onUpdate",
        onDelete: "onDelete"
      },
      decls: 4,
      vars: 0,
      consts: [[1, "example-flex-container2"], ["mat-icon-button", "", "color", "primary", "aria-label", "Example icon button with a vertical three dot icon", 3, "click"]],
      template: function ResourceActionsComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "button", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ResourceActionsComponent_Template_button_click_1_listener() {
            return ctx.onEdit();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "create");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
      },
      directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_4__["MatButton"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__["MatIcon"]],
      styles: ["section[_ngcontent-%COMP%] {\n  display: table;\n  margin: 8px;\n}\n\n.example-label[_ngcontent-%COMP%] {\n  display: table-cell;\n  font-size: 14px;\n  margin-left: 8px;\n  width: 120px;\n}\n\n.example-button-row[_ngcontent-%COMP%] {\n  display: table-cell;\n}\n\n.example-button-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\n  display: table-cell;\n  margin-right: 8px;\n}\n\n.example-flex-container[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: space-between;\n  width: 480px;\n}\n\n.example-button-container[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: center;\n  width: 120px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvcmVzb3VyY2UtYWN0aW9ucy9yZXNvdXJjZS1hY3Rpb25zLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9yZXNvdXJjZS1hY3Rpb25zL3Jlc291cmNlLWFjdGlvbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0VBQ0EsV0FBQTtBQ0NGOztBREVBO0VBQ0UsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxtQkFBQTtBQ0NGOztBREVBO0VBQ0UsbUJBQUE7RUFDQSxpQkFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvcmVzb3VyY2UtYWN0aW9ucy9yZXNvdXJjZS1hY3Rpb25zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsic2VjdGlvbiB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBtYXJnaW46IDhweDtcbn1cblxuLmV4YW1wbGUtbGFiZWwge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIHdpZHRoOiAxMjBweDtcbn1cblxuLmV4YW1wbGUtYnV0dG9uLXJvdyB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG59XG5cbi5leGFtcGxlLWJ1dHRvbi1yb3cgYnV0dG9uIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XG59XG5cbi5leGFtcGxlLWZsZXgtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB3aWR0aDogNDgwcHg7XG59XG5cbi5leGFtcGxlLWJ1dHRvbi1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEyMHB4O1xufSIsInNlY3Rpb24ge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgbWFyZ2luOiA4cHg7XG59XG5cbi5leGFtcGxlLWxhYmVsIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogOHB4O1xuICB3aWR0aDogMTIwcHg7XG59XG5cbi5leGFtcGxlLWJ1dHRvbi1yb3cge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xufVxuXG4uZXhhbXBsZS1idXR0b24tcm93IGJ1dHRvbiB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xufVxuXG4uZXhhbXBsZS1mbGV4LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgd2lkdGg6IDQ4MHB4O1xufVxuXG4uZXhhbXBsZS1idXR0b24tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMjBweDtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ResourceActionsComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-resource-actions',
          templateUrl: './resource-actions.component.html',
          styleUrls: ['./resource-actions.component.scss']
        }]
      }], function () {
        return [{
          type: _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_2__["ResourceService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialog"]
        }];
      }, {
        resource: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        resourceUrl: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onUpdate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDelete: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/resource/resource.component.ts":
  /*!***************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/resource/resource.component.ts ***!
    \***************************************************************************/

  /*! exports provided: ResourceComponent */

  /***/
  function srcAppAdminDashboardComponentsResourceResourceComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ResourceComponent", function () {
      return ResourceComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var _create_resource_create_resource_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../create-resource/create-resource.component */
    "./src/app/admin-dashboard/components/create-resource/create-resource.component.ts");
    /* harmony import */


    var _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../shared/services/resource.service */
    "./src/app/shared/services/resource.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");
    /* harmony import */


    var _resource_actions_resource_actions_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../resource-actions/resource-actions.component */
    "./src/app/admin-dashboard/components/resource-actions/resource-actions.component.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function ResourceComponent_th_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Name ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ResourceComponent_td_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r322 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", element_r322.name, " ");
      }
    }

    function ResourceComponent_th_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Created on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ResourceComponent_td_13_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r323 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r323.createdAt), " ");
      }
    }

    function ResourceComponent_th_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Update on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ResourceComponent_td_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r324 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r324.updatedAt), " ");
      }
    }

    function ResourceComponent_th_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Actions ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function ResourceComponent_td_19_Template(rf, ctx) {
      if (rf & 1) {
        var _r327 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "app-resource-actions", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onUpdate", function ResourceComponent_td_19_Template_app_resource_actions_onUpdate_1_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r327);

          var ctx_r326 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r326.onUpdate();
        })("onDelete", function ResourceComponent_td_19_Template_app_resource_actions_onDelete_1_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r327);

          var element_r325 = ctx.$implicit;

          var ctx_r328 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r328.onDelete(element_r325);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r325 = ctx.$implicit;

        var ctx_r319 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("resourceUrl", ctx_r319.resourceUrl)("resource", element_r325);
      }
    }

    function ResourceComponent_tr_20_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 17);
      }
    }

    function ResourceComponent_tr_21_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 18);
      }
    }

    var _c0 = function _c0() {
      return [5, 10, 20];
    };

    var ResourceComponent =
    /*#__PURE__*/
    function () {
      function ResourceComponent(resourceService, dialog) {
        _classCallCheck(this, ResourceComponent);

        this.resourceService = resourceService;
        this.dialog = dialog;
        this.columnConfig = [];
      }

      _createClass(ResourceComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee22() {
            var list;
            return regeneratorRuntime.wrap(function _callee22$(_context22) {
              while (1) {
                switch (_context22.prev = _context22.next) {
                  case 0:
                    _context22.next = 2;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 2:
                    list = _context22.sent;
                    this.displayedColumns = ['name', 'createdAt', 'updatedAt', 'action'];
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"](list['data']);
                    this.dataSource.paginator = this.paginator;

                  case 6:
                  case "end":
                    return _context22.stop();
                }
              }
            }, _callee22, this);
          }));
        }
      }, {
        key: "reFetchResourceList",
        value: function reFetchResourceList() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee23() {
            var list;
            return regeneratorRuntime.wrap(function _callee23$(_context23) {
              while (1) {
                switch (_context23.prev = _context23.next) {
                  case 0:
                    _context23.next = 2;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 2:
                    list = _context23.sent;
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"](list['data']);

                  case 4:
                  case "end":
                    return _context23.stop();
                }
              }
            }, _callee23, this);
          }));
        }
      }, {
        key: "onAddResource",
        value: function onAddResource() {
          var _this12 = this;

          var dialogRef = this.dialog.open(_create_resource_create_resource_component__WEBPACK_IMPORTED_MODULE_4__["CreateResourceComponent"], {
            width: '600px',
            data: {
              resourceUrl: this.resourceUrl
            }
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this12.dataSource.data = [].concat(_toConsumableArray(_this12.dataSource.data), [result['data']]);
          });
        }
      }, {
        key: "onUpdate",
        value: function onUpdate() {
          this.reFetchResourceList();
        }
      }, {
        key: "onDelete",
        value: function onDelete(resource) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee24() {
            return regeneratorRuntime.wrap(function _callee24$(_context24) {
              while (1) {
                switch (_context24.prev = _context24.next) {
                  case 0:
                    _context24.next = 2;
                    return this.resourceService["delete"](this.resourceUrl, resource).toPromise();

                  case 2:
                    this.reFetchResourceList();

                  case 3:
                  case "end":
                    return _context24.stop();
                }
              }
            }, _callee24, this);
          }));
        }
      }]);

      return ResourceComponent;
    }();

    ResourceComponent.ɵfac = function ResourceComponent_Factory(t) {
      return new (t || ResourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]));
    };

    ResourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: ResourceComponent,
      selectors: [["app-resource"]],
      viewQuery: function ResourceComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstaticViewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
        }
      },
      inputs: {
        resourceUrl: "resourceUrl",
        columnConfig: "columnConfig"
      },
      decls: 23,
      vars: 5,
      consts: [[1, "mat-elevation-z8"], [1, "resource-actions-panel"], [1, "table-heading"], ["mat-icon-button", "", "color", "warn", "mat-mini-fab", "", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-table", "", 3, "dataSource"], ["matColumnDef", "name"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "createdAt"], ["matColumnDef", "updatedAt"], ["matColumnDef", "action", "sticky", "true"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["mat-header-cell", ""], ["mat-cell", ""], [3, "resourceUrl", "resource", "onUpdate", "onDelete"], ["mat-header-row", ""], ["mat-row", ""]],
      template: function ResourceComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "h3", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, " Classes ");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "button", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ResourceComponent_Template_button_click_4_listener() {
            return ctx.onAddResource();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "add");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "table", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](8, 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, ResourceComponent_th_9_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](10, ResourceComponent_td_10_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](11, 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](12, ResourceComponent_th_12_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](13, ResourceComponent_td_13_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](14, 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, ResourceComponent_th_15_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](16, ResourceComponent_td_16_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](17, 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](18, ResourceComponent_th_18_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](19, ResourceComponent_td_19_Template, 2, 2, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](20, ResourceComponent_tr_20_Template, 1, 0, "tr", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](21, ResourceComponent_tr_21_Template, 1, 0, "tr", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](22, "mat-paginator", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("dataSource", ctx.dataSource);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](4, _c0));
        }
      },
      directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_7__["MatButton"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__["MatIcon"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatCell"], _resource_actions_resource_actions_component__WEBPACK_IMPORTED_MODULE_9__["ResourceActionsComponent"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatRow"]],
      pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_10__["DatePipe"]],
      styles: ["table[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.resource-actions-panel[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvcmVzb3VyY2UvcmVzb3VyY2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL3Jlc291cmNlL3Jlc291cmNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0Esa0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL3Jlc291cmNlL3Jlc291cmNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnJlc291cmNlLWFjdGlvbnMtcGFuZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbn1cbiIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5yZXNvdXJjZS1hY3Rpb25zLXBhbmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG59Il19 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](ResourceComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-resource',
          templateUrl: './resource.component.html',
          styleUrls: ['./resource.component.scss']
        }]
      }], function () {
        return [{
          type: _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
        }];
      }, {
        resourceUrl: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        columnConfig: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        paginator: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"],
          args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"], {
            "static": true
          }]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/send-messages/send-messages.component.ts":
  /*!*************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/send-messages/send-messages.component.ts ***!
    \*************************************************************************************/

  /*! exports provided: SendMessagesComponent */

  /***/
  function srcAppAdminDashboardComponentsSendMessagesSendMessagesComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SendMessagesComponent", function () {
      return SendMessagesComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/services/api.service */
    "./src/app/services/api.service.ts");
    /* harmony import */


    var src_app_services_alert_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/services/alert.service */
    "./src/app/services/alert.service.ts");
    /* harmony import */


    var src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/auth/services/auth.service */
    "./src/app/auth/services/auth.service.ts");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js");
    /* harmony import */


    var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/checkbox */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _multi_select_multi_select_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../multi-select/multi-select.component */
    "./src/app/admin-dashboard/components/multi-select/multi-select.component.ts");

    function SendMessagesComponent_div_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, "Select at least one");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SendMessagesComponent_span_26_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "mat-checkbox", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, "State Level User");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "mat-checkbox", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "Block Level User");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "mat-checkbox", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](9, "District Level User");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](11, "mat-checkbox", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](12, "Custom");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SendMessagesComponent_app_multi_select_27_Template(rf, ctx) {
      if (rf & 1) {
        var _r310 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "app-multi-select", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("selectedUsersChange", function SendMessagesComponent_app_multi_select_27_Template_app_multi_select_selectedUsersChange_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r310);

          var ctx_r309 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r309.selectedUsers = $event;
        })("change", function SendMessagesComponent_app_multi_select_27_Template_app_multi_select_change_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r310);

          var ctx_r311 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r311.validate();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r306 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("selectedUsers", ctx_r306.selectedUsers);
      }
    }

    function SendMessagesComponent_div_28_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, "Select at least one");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SendMessagesComponent_div_29_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, "Select at least one user");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    var SendMessagesComponent =
    /*#__PURE__*/
    function () {
      function SendMessagesComponent(fb, api, alert, auth) {
        var _this13 = this;

        _classCallCheck(this, SendMessagesComponent);

        this.fb = fb;
        this.api = api;
        this.alert = alert;
        this.auth = auth;
        this.submitted = false;
        this.select1medium = false;
        this.select1send = false;
        this.selectUser = false;
        this.selectedUsers = [];
        this.sendToAll = false;

        this.validate = function () {
          var _this13$messageForm$c = _this13.messageForm.controls.sendToType.value,
              ALL = _this13$messageForm$c.ALL,
              BLOCK_LEVEL_USER = _this13$messageForm$c.BLOCK_LEVEL_USER,
              CUSTOM = _this13$messageForm$c.CUSTOM,
              DISTRICT_LEVEL_USER = _this13$messageForm$c.DISTRICT_LEVEL_USER,
              STATE_LEVEL_USER = _this13$messageForm$c.STATE_LEVEL_USER;

          if (ALL) {
            _this13.select1medium = false;
            _this13.selectUser = false;
          } else if (!BLOCK_LEVEL_USER && !CUSTOM && !DISTRICT_LEVEL_USER && !STATE_LEVEL_USER) {
            _this13.select1medium = true;
          } else if (CUSTOM && _this13.selectedUsers.length === 0) {
            _this13.selectUser = true;
            _this13.select1medium = false;
          } else {
            _this13.select1medium = false;
            _this13.selectUser = false;
          }

          var _this13$messageForm$c2 = _this13.messageForm.controls.mediumType.value,
              SMS = _this13$messageForm$c2.SMS,
              EMAIL = _this13$messageForm$c2.EMAIL,
              PRIVATE = _this13$messageForm$c2.PRIVATE;

          if (!SMS && !EMAIL && !PRIVATE) {
            _this13.select1send = true;
          } else {
            _this13.select1send = false;
          }
        };
      }

      _createClass(SendMessagesComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.messageForm = this.fb.group({
            message: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            mediumType: this.fb.group({
              SMS: [false, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              EMAIL: [false, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              PRIVATE: [false, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
            }),
            sendToType: this.fb.group({
              ALL: [false, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              CUSTOM: [false, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              STATE_LEVEL_USER: [false, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              BLOCK_LEVEL_USER: [false, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              DISTRICT_LEVEL_USER: [false, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
            })
          });
          this.validate();
          this.messageForm.valueChanges.subscribe(this.validate);
          this.fetchUsers();
        }
      }, {
        key: "fetchUsers",
        value: function fetchUsers() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee25() {
            var response;
            return regeneratorRuntime.wrap(function _callee25$(_context25) {
              while (1) {
                switch (_context25.prev = _context25.next) {
                  case 0:
                    _context25.next = 2;
                    return this.auth.getAllUsers().toPromise();

                  case 2:
                    response = _context25.sent;
                    this.users = response['data'];

                  case 4:
                  case "end":
                    return _context25.stop();
                }
              }
            }, _callee25, this);
          }));
        }
      }, {
        key: "toggleSendToAll",
        value: function toggleSendToAll() {}
      }, {
        key: "onSend",
        value: function onSend() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee26() {
            var message, response;
            return regeneratorRuntime.wrap(function _callee26$(_context26) {
              while (1) {
                switch (_context26.prev = _context26.next) {
                  case 0:
                    this.submitted = true;
                    message = this.messageForm.value;

                    if (!(this.select1medium || this.select1send || this.selectUser)) {
                      _context26.next = 4;
                      break;
                    }

                    return _context26.abrupt("return");

                  case 4:
                    _context26.next = 6;
                    return this.api.post('/messages', Object.assign(Object.assign({}, message), {
                      usersId: this.selectedUsers.map(function (u) {
                        return u._id;
                      })
                    })).toPromise();

                  case 6:
                    response = _context26.sent;
                    this.alert.success('Message Sent!!');
                    this.submitted = false;

                  case 9:
                  case "end":
                    return _context26.stop();
                }
              }
            }, _callee26, this);
          }));
        }
      }]);

      return SendMessagesComponent;
    }();

    SendMessagesComponent.ɵfac = function SendMessagesComponent_Factory(t) {
      return new (t || SendMessagesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_alert_service__WEBPACK_IMPORTED_MODULE_4__["AlertService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_5__["AuthService"]));
    };

    SendMessagesComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: SendMessagesComponent,
      selectors: [["app-send-messages"]],
      decls: 32,
      vars: 6,
      consts: [[3, "formGroup", "ngSubmit"], [1, "message-panel"], [1, "mt10"], [1, "form-group"], ["type", "text", "placeholder", "Enter Message", "formControlName", "message", "id", "formGroupExampleInput", "placeholder", "Enter message", 1, "form-control"], ["formGroupName", "mediumType"], [1, "heading"], ["formControlName", "SMS", 1, "example-margin"], ["formControlName", "EMAIL", 1, "example-margin"], ["formControlName", "PRIVATE", 1, "example-margin"], ["class", "alert alert-danger mt10", "role", "alert", 4, "ngIf"], ["formGroupName", "sendToType"], ["formControlName", "ALL", 1, "example-margin"], [4, "ngIf"], [3, "selectedUsers", "selectedUsersChange", "change", 4, "ngIf"], ["type", "submit", "mat-raised-button", "", "color", "primary", 1, "btn", "btn-success", 3, "click"], ["role", "alert", 1, "alert", "alert-danger", "mt10"], ["formControlName", "STATE_LEVEL_USER", 1, "example-margin"], ["formControlName", "BLOCK_LEVEL_USER", 1, "example-margin"], ["formControlName", "DISTRICT_LEVEL_USER", 1, "example-margin"], ["formControlName", "CUSTOM", 1, "example-margin"], [3, "selectedUsers", "selectedUsersChange", "change"]],
      template: function SendMessagesComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "form", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngSubmit", function SendMessagesComponent_Template_form_ngSubmit_0_listener() {
            return ctx.onSend();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "mat-card", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "textarea", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "mat-card", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](8, "Medium to use");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](9, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "mat-checkbox", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](11, "Sms");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "mat-checkbox", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](14, "Email");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](15, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](16, "mat-checkbox", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](17, "Private");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](18, SendMessagesComponent_div_18_Template, 2, 0, "div", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "mat-card", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](20, "div", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](21, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](22, "Send to");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](24, "mat-checkbox", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](25, "All");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](26, SendMessagesComponent_span_26_Template, 13, 0, "span", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](27, SendMessagesComponent_app_multi_select_27_Template, 1, 1, "app-multi-select", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](28, SendMessagesComponent_div_28_Template, 2, 0, "div", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](29, SendMessagesComponent_div_29_Template, 2, 0, "div", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](30, "button", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function SendMessagesComponent_Template_button_click_30_listener() {
            return ctx.onSend();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](31, "Send");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.messageForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](18);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.select1send && ctx.submitted);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.messageForm.value.sendToType.ALL);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.messageForm.value.sendToType.ALL && ctx.messageForm.value.sendToType.CUSTOM);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.select1medium && ctx.submitted);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.selectUser && ctx.submitted);
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_material_card__WEBPACK_IMPORTED_MODULE_6__["MatCard"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupName"], _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_7__["MatCheckbox"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["NgIf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_9__["MatButton"], _multi_select_multi_select_component__WEBPACK_IMPORTED_MODULE_10__["MultiSelectComponent"]],
      styles: [".mt10[_ngcontent-%COMP%] {\n  margin-top: 10px;\n}\n\n.ml10[_ngcontent-%COMP%] {\n  margin-left: 10px;\n}\n\n.message-panel[_ngcontent-%COMP%] {\n  max-width: 700px;\n  margin-bottom: 10px;\n}\n\n.example-margin[_ngcontent-%COMP%] {\n  margin-right: 10px;\n}\n\n.heading[_ngcontent-%COMP%] {\n  font-size: 20px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvc2VuZC1tZXNzYWdlcy9zZW5kLW1lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9zZW5kLW1lc3NhZ2VzL3NlbmQtbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGOztBRENBO0VBQ0UsaUJBQUE7QUNFRjs7QURBQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7QUNHRjs7QURBQTtFQUNFLGtCQUFBO0FDR0Y7O0FEQUE7RUFDRSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQ0dGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvc2VuZC1tZXNzYWdlcy9zZW5kLW1lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm10MTAge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLm1sMTAge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cbi5tZXNzYWdlLXBhbmVsIHtcbiAgbWF4LXdpZHRoOiA3MDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmV4YW1wbGUtbWFyZ2luIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4uaGVhZGluZyB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgLy8gZm9udC13ZWlnaHQ6IGJvbGQ7XG59IiwiLm10MTAge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ubWwxMCB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4ubWVzc2FnZS1wYW5lbCB7XG4gIG1heC13aWR0aDogNzAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5leGFtcGxlLW1hcmdpbiB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLmhlYWRpbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59Il19 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](SendMessagesComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-send-messages',
          templateUrl: './send-messages.component.html',
          styleUrls: ['./send-messages.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
        }, {
          type: src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"]
        }, {
          type: src_app_services_alert_service__WEBPACK_IMPORTED_MODULE_4__["AlertService"]
        }, {
          type: src_app_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_5__["AuthService"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/subjects-page/subjects-page.component.ts":
  /*!*************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/subjects-page/subjects-page.component.ts ***!
    \*************************************************************************************/

  /*! exports provided: SubjectsPageComponent */

  /***/
  function srcAppAdminDashboardComponentsSubjectsPageSubjectsPageComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SubjectsPageComponent", function () {
      return SubjectsPageComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var _create_subject_form_create_subject_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../create-subject-form/create-subject-form.component */
    "./src/app/admin-dashboard/components/create-subject-form/create-subject-form.component.ts");
    /* harmony import */


    var _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../shared/services/resource.service */
    "./src/app/shared/services/resource.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function SubjectsPageComponent_th_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Title ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SubjectsPageComponent_td_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r280 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", element_r280.title, " ");
      }
    }

    function SubjectsPageComponent_th_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Description ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SubjectsPageComponent_td_13_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r281 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", element_r281.description, " ");
      }
    }

    function SubjectsPageComponent_th_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Class ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SubjectsPageComponent_td_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r282 = ctx.$implicit;

        var ctx_r271 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r271.getClassName(element_r282["class"]), " ");
      }
    }

    function SubjectsPageComponent_th_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Created on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SubjectsPageComponent_td_19_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r283 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r283.createdAt), " ");
      }
    }

    function SubjectsPageComponent_th_21_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Update on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SubjectsPageComponent_td_22_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r284 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r284.updatedAt), " ");
      }
    }

    function SubjectsPageComponent_th_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Actions ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SubjectsPageComponent_td_25_Template(rf, ctx) {
      if (rf & 1) {
        var _r287 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "button", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function SubjectsPageComponent_td_25_Template_button_click_2_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r287);

          var element_r285 = ctx.$implicit;

          var ctx_r286 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r286.onEdit(element_r285);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4, "create");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "button", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function SubjectsPageComponent_td_25_Template_button_click_5_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r287);

          var element_r285 = ctx.$implicit;

          var ctx_r288 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r288.onDelete(element_r285);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](7, "delete");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function SubjectsPageComponent_tr_26_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 21);
      }
    }

    function SubjectsPageComponent_tr_27_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 22);
      }
    }

    var _c0 = function _c0() {
      return [5, 10, 20];
    };

    var SubjectsPageComponent =
    /*#__PURE__*/
    function () {
      function SubjectsPageComponent(resourceService, dialog) {
        _classCallCheck(this, SubjectsPageComponent);

        this.resourceService = resourceService;
        this.dialog = dialog;
        this.resourceUrl = '/subjects';
      }

      _createClass(SubjectsPageComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee27() {
            var classesResponse, list;
            return regeneratorRuntime.wrap(function _callee27$(_context27) {
              while (1) {
                switch (_context27.prev = _context27.next) {
                  case 0:
                    _context27.next = 2;
                    return this.resourceService.fetchAll('/classes').toPromise();

                  case 2:
                    classesResponse = _context27.sent;
                    this.classList = classesResponse['data'];
                    this.classMap = new Map(classesResponse['data'].map(function (clas) {
                      return [clas._id, clas.name];
                    }));
                    _context27.next = 7;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 7:
                    list = _context27.sent;
                    this.displayedColumns = ['title', 'description', 'class', 'createdAt', 'updatedAt', 'action'];
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](list['data']);
                    this.dataSource.paginator = this.paginator;

                  case 11:
                  case "end":
                    return _context27.stop();
                }
              }
            }, _callee27, this);
          }));
        }
      }, {
        key: "reFetchResourceList",
        value: function reFetchResourceList() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee28() {
            var list;
            return regeneratorRuntime.wrap(function _callee28$(_context28) {
              while (1) {
                switch (_context28.prev = _context28.next) {
                  case 0:
                    _context28.next = 2;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 2:
                    list = _context28.sent;
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](list['data']);

                  case 4:
                  case "end":
                    return _context28.stop();
                }
              }
            }, _callee28, this);
          }));
        }
      }, {
        key: "openDialogue",
        value: function openDialogue(subject) {
          var _this14 = this;

          var dialogRef = this.dialog.open(_create_subject_form_create_subject_form_component__WEBPACK_IMPORTED_MODULE_4__["CreateSubjectFormComponent"], {
            width: '600px',
            data: {
              resourceUrl: this.resourceUrl,
              classList: this.classList,
              subject: subject
            }
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this14.reFetchResourceList();
          });
        }
      }, {
        key: "onAddResource",
        value: function onAddResource() {
          var subject = {
            _id: '',
            title: '',
            description: '',
            "class": ''
          };
          this.openDialogue(subject);
        }
      }, {
        key: "onUpdate",
        value: function onUpdate() {
          this.reFetchResourceList();
        }
      }, {
        key: "getClassName",
        value: function getClassName(subjectId) {
          return this.classMap.get(subjectId) || 'Subject has been deleted';
        }
      }, {
        key: "onDelete",
        value: function onDelete(resource) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee29() {
            return regeneratorRuntime.wrap(function _callee29$(_context29) {
              while (1) {
                switch (_context29.prev = _context29.next) {
                  case 0:
                    _context29.next = 2;
                    return this.resourceService["delete"](this.resourceUrl, resource).toPromise();

                  case 2:
                    this.reFetchResourceList();

                  case 3:
                  case "end":
                    return _context29.stop();
                }
              }
            }, _callee29, this);
          }));
        }
      }, {
        key: "onEdit",
        value: function onEdit(element) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee30() {
            return regeneratorRuntime.wrap(function _callee30$(_context30) {
              while (1) {
                switch (_context30.prev = _context30.next) {
                  case 0:
                    this.openDialogue(element);

                  case 1:
                  case "end":
                    return _context30.stop();
                }
              }
            }, _callee30, this);
          }));
        }
      }]);

      return SubjectsPageComponent;
    }();

    SubjectsPageComponent.ɵfac = function SubjectsPageComponent_Factory(t) {
      return new (t || SubjectsPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]));
    };

    SubjectsPageComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: SubjectsPageComponent,
      selectors: [["app-subjects-page"]],
      viewQuery: function SubjectsPageComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstaticViewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
        }
      },
      inputs: {
        resourceUrl: "resourceUrl"
      },
      decls: 29,
      vars: 5,
      consts: [[1, "mat-elevation-z8"], [1, "resource-actions-panel"], [1, "table-heading"], ["mat-icon-button", "", "color", "warn", "mat-mini-fab", "", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-table", "", 3, "dataSource"], ["matColumnDef", "title"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "description"], ["matColumnDef", "class"], ["matColumnDef", "createdAt"], ["matColumnDef", "updatedAt"], ["matColumnDef", "action", "sticky", "true"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["mat-header-cell", ""], ["mat-cell", ""], [1, "example-flex-container2"], ["mat-icon-button", "", "color", "primary", "aria-label", "Example icon button with a vertical three dot icon", 3, "click"], ["mat-icon-button", "", "color", "warn", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-header-row", ""], ["mat-row", ""]],
      template: function SubjectsPageComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "h3", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, " Subjects ");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "button", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function SubjectsPageComponent_Template_button_click_4_listener() {
            return ctx.onAddResource();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "add");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "table", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](8, 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, SubjectsPageComponent_th_9_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](10, SubjectsPageComponent_td_10_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](11, 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](12, SubjectsPageComponent_th_12_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](13, SubjectsPageComponent_td_13_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](14, 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, SubjectsPageComponent_th_15_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](16, SubjectsPageComponent_td_16_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](17, 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](18, SubjectsPageComponent_th_18_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](19, SubjectsPageComponent_td_19_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](20, 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](21, SubjectsPageComponent_th_21_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](22, SubjectsPageComponent_td_22_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](23, 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](24, SubjectsPageComponent_th_24_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](25, SubjectsPageComponent_td_25_Template, 8, 0, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](26, SubjectsPageComponent_tr_26_Template, 1, 0, "tr", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](27, SubjectsPageComponent_tr_27_Template, 1, 0, "tr", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](28, "mat-paginator", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("dataSource", ctx.dataSource);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](19);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](4, _c0));
        }
      },
      directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_7__["MatButton"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__["MatIcon"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRow"]],
      pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"]],
      styles: ["table[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.resource-actions-panel[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvc3ViamVjdHMtcGFnZS9zdWJqZWN0cy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy9zdWJqZWN0cy1wYWdlL3N1YmplY3RzLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxrQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvc3ViamVjdHMtcGFnZS9zdWJqZWN0cy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnJlc291cmNlLWFjdGlvbnMtcGFuZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbn1cbiIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5yZXNvdXJjZS1hY3Rpb25zLXBhbmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG59Il19 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](SubjectsPageComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-subjects-page',
          templateUrl: './subjects-page.component.html',
          styleUrls: ['./subjects-page.component.scss']
        }]
      }], function () {
        return [{
          type: _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
        }];
      }, {
        resourceUrl: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        paginator: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"],
          args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
            "static": true
          }]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/update-resource-dialog/update-resource-dialog.component.ts":
  /*!*******************************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/update-resource-dialog/update-resource-dialog.component.ts ***!
    \*******************************************************************************************************/

  /*! exports provided: UpdateResourceDialogComponent */

  /***/
  function srcAppAdminDashboardComponentsUpdateResourceDialogUpdateResourceDialogComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UpdateResourceDialogComponent", function () {
      return UpdateResourceDialogComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/services/api.service */
    "./src/app/services/api.service.ts");
    /* harmony import */


    var _update_resource_form_update_resource_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../update-resource-form/update-resource-form.component */
    "./src/app/admin-dashboard/components/update-resource-form/update-resource-form.component.ts");

    var UpdateResourceDialogComponent =
    /*#__PURE__*/
    function () {
      function UpdateResourceDialogComponent(api, dialogRef, data) {
        _classCallCheck(this, UpdateResourceDialogComponent);

        this.api = api;
        this.dialogRef = dialogRef;
        this.data = data;
      }

      _createClass(UpdateResourceDialogComponent, [{
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onUpdate",
        value: function onUpdate(id, formValues) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee31() {
            var url, response;
            return regeneratorRuntime.wrap(function _callee31$(_context31) {
              while (1) {
                switch (_context31.prev = _context31.next) {
                  case 0:
                    url = "".concat(this.data.resourceUrl, "/").concat(id);
                    _context31.next = 3;
                    return this.api.put(url, formValues).toPromise();

                  case 3:
                    response = _context31.sent;
                    this.dialogRef.close(response);

                  case 5:
                  case "end":
                    return _context31.stop();
                }
              }
            }, _callee31, this);
          }));
        }
      }]);

      return UpdateResourceDialogComponent;
    }();

    UpdateResourceDialogComponent.ɵfac = function UpdateResourceDialogComponent_Factory(t) {
      return new (t || UpdateResourceDialogComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]));
    };

    UpdateResourceDialogComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: UpdateResourceDialogComponent,
      selectors: [["app-update-resource-dialog"]],
      decls: 2,
      vars: 1,
      consts: [["mat-dialog-content", ""], [3, "resource", "onUpdate"]],
      template: function UpdateResourceDialogComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "app-update-resource-form", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onUpdate", function UpdateResourceDialogComponent_Template_app_update_resource_form_onUpdate_1_listener($event) {
            return ctx.onUpdate(ctx.data.resource._id, $event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("resource", ctx.data.resource);
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogContent"], _update_resource_form_update_resource_form_component__WEBPACK_IMPORTED_MODULE_4__["UpdateResourceFormComponent"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL3VwZGF0ZS1yZXNvdXJjZS1kaWFsb2cvdXBkYXRlLXJlc291cmNlLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](UpdateResourceDialogComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-update-resource-dialog',
          templateUrl: './update-resource-dialog.component.html',
          styleUrls: ['./update-resource-dialog.component.scss']
        }]
      }], function () {
        return [{
          type: src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
          }]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/update-resource-form/update-resource-form.component.ts":
  /*!***************************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/update-resource-form/update-resource-form.component.ts ***!
    \***************************************************************************************************/

  /*! exports provided: UpdateResourceFormComponent */

  /***/
  function srcAppAdminDashboardComponentsUpdateResourceFormUpdateResourceFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UpdateResourceFormComponent", function () {
      return UpdateResourceFormComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");

    function UpdateResourceFormComponent_p_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "p", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r330 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r330.error, " ");
      }
    }

    var UpdateResourceFormComponent =
    /*#__PURE__*/
    function () {
      function UpdateResourceFormComponent(fb) {
        _classCallCheck(this, UpdateResourceFormComponent);

        this.fb = fb;
        this.onUpdate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.initialValues = {
          name: '',
          _id: ''
        };
      }

      _createClass(UpdateResourceFormComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.form = this.fb.group({
            name: [this.resource.name, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            _id: [this.resource._id, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
          });
          this.initialValues = {
            name: this.resource.name,
            _id: this.resource._id
          };
        }
      }, {
        key: "submit",
        value: function submit() {
          if (this.form.valid) {
            this.onUpdate.emit(this.form.value);
          }
        }
      }]);

      return UpdateResourceFormComponent;
    }();

    UpdateResourceFormComponent.ɵfac = function UpdateResourceFormComponent_Factory(t) {
      return new (t || UpdateResourceFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]));
    };

    UpdateResourceFormComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: UpdateResourceFormComponent,
      selectors: [["app-update-resource-form"]],
      inputs: {
        error: "error",
        resource: "resource"
      },
      outputs: {
        onUpdate: "onUpdate"
      },
      decls: 14,
      vars: 4,
      consts: [[3, "formGroup", "ngSubmit"], ["type", "text", "matInput", "", "placeholder", "Class name", "formControlName", "name"], ["class", "error", 4, "ngIf"], [1, "button"], ["type", "button", "mat-button", "", 3, "disabled", "click"], ["type", "submit", "mat-button", "", 3, "disabled"], [1, "error"]],
      template: function UpdateResourceFormComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-card");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-card-title");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Create Class");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "mat-card-content");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "form", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngSubmit", function UpdateResourceFormComponent_Template_form_ngSubmit_4_listener() {
            return ctx.submit();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "p");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "mat-form-field");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "input", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, UpdateResourceFormComponent_p_8_Template, 2, 1, "p", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "button", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function UpdateResourceFormComponent_Template_button_click_10_listener() {
            return ctx.form.reset(ctx.initialValues);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "Reset");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "button", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Update");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.error);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", !ctx.form.touched);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx.form.invalid);
        }
      },
      directives: [_angular_material_card__WEBPACK_IMPORTED_MODULE_2__["MatCard"], _angular_material_card__WEBPACK_IMPORTED_MODULE_2__["MatCardTitle"], _angular_material_card__WEBPACK_IMPORTED_MODULE_2__["MatCardContent"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_3__["MatFormField"], _angular_material_input__WEBPACK_IMPORTED_MODULE_4__["MatInput"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_6__["MatButton"]],
      styles: [".mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.error[_ngcontent-%COMP%] {\n  padding: 16px;\n  width: 300px;\n  color: white;\n  background-color: red;\n}\n\n.button[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.forgot-pass-link[_ngcontent-%COMP%] {\n  align-self: center;\n  padding: 0 16px;\n  text-decoration: underline;\n  font-size: smaller;\n  font-style: italic;\n  line-height: 36px;\n}\n\n.mat-card[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: unset;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvdXBkYXRlLXJlc291cmNlLWZvcm0vdXBkYXRlLXJlc291cmNlLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL3VwZGF0ZS1yZXNvdXJjZS1mb3JtL3VwZGF0ZS1yZXNvdXJjZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EscUJBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0EsMEJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1kYXNoYm9hcmQvY29tcG9uZW50cy91cGRhdGUtcmVzb3VyY2UtZm9ybS91cGRhdGUtcmVzb3VyY2UtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXJyb3Ige1xuICBwYWRkaW5nOiAxNnB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4uYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmZvcmdvdC1wYXNzLWxpbmsge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBsaW5lLWhlaWdodDogMzZweDtcbn1cblxuLm1hdC1jYXJkOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogdW5zZXQ7XG59IiwiLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5lcnJvciB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHdpZHRoOiAzMDBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5idXR0b24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4uZm9yZ290LXBhc3MtbGluayB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC1zaXplOiBzbWFsbGVyO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xufVxuXG4ubWF0LWNhcmQ6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSkge1xuICBib3gtc2hhZG93OiB1bnNldDtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](UpdateResourceFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-update-resource-form',
          templateUrl: './update-resource-form.component.html',
          styleUrls: ['./update-resource-form.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }];
      }, {
        error: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        resource: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onUpdate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/upload-document/upload-document.component.ts":
  /*!*****************************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/upload-document/upload-document.component.ts ***!
    \*****************************************************************************************/

  /*! exports provided: UploadDocumentComponent */

  /***/
  function srcAppAdminDashboardComponentsUploadDocumentUploadDocumentComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UploadDocumentComponent", function () {
      return UploadDocumentComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var src_app_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! src/app/constants */
    "./src/app/constants/index.ts");
    /* harmony import */


    var src_app_services_documents_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! src/app/services/documents.service */
    "./src/app/services/documents.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js");
    /* harmony import */


    var _shared_components_upload_upload_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../shared/components/upload/upload.component */
    "./src/app/shared/components/upload/upload.component.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _shared_pipes_role_pipe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../shared/pipes/role.pipe */
    "./src/app/shared/pipes/role.pipe.ts");

    function UploadDocumentComponent_div_6_div_5_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "input", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "\xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "label", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](5, "role");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var roleCode_r300 = ctx.$implicit;
        var i_r301 = ctx.index;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("name", roleCode_r300)("id", "inlineCheckbox" + i_r301);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("for", "inlineCheckbox" + i_r301);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](5, 4, roleCode_r300));
      }
    }

    function UploadDocumentComponent_div_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-card");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Select who can see this document");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, UploadDocumentComponent_div_6_div_5_Template, 6, 6, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "button", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "Share document");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r298 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r298.roles);
      }
    }

    var UploadDocumentComponent =
    /*#__PURE__*/
    function () {
      function UploadDocumentComponent(documentsService, router) {
        _classCallCheck(this, UploadDocumentComponent);

        this.documentsService = documentsService;
        this.router = router;
      }

      _createClass(UploadDocumentComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.roles = Object(src_app_constants__WEBPACK_IMPORTED_MODULE_1__["getKeys"])(src_app_constants__WEBPACK_IMPORTED_MODULE_1__["USER_ROLES"]);
        }
      }, {
        key: "onSubmit",
        value: function onSubmit(uploadForm) {
          var _this15 = this;

          if (!this.uploadedInfo) {
            alert('Please upload file before sending');
            return;
          }

          var roles = Reflect.ownKeys(uploadForm.value).filter(function (key) {
            return !!uploadForm.value[key];
          });
          this.documentsService.create(Object.assign(Object.assign({}, this.uploadedInfo), {
            roles: roles
          })).subscribe(function () {
            _this15.router.navigate(['dashboard', 'documents']);
          });
        }
      }, {
        key: "onUploadSuccess",
        value: function onUploadSuccess(uploadedInfo) {
          this.uploadedInfo = uploadedInfo;
        }
      }]);

      return UploadDocumentComponent;
    }();

    UploadDocumentComponent.ɵfac = function UploadDocumentComponent_Factory(t) {
      return new (t || UploadDocumentComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_documents_service__WEBPACK_IMPORTED_MODULE_2__["DocumentsService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]));
    };

    UploadDocumentComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: UploadDocumentComponent,
      selectors: [["app-upload-document"]],
      decls: 7,
      vars: 1,
      consts: [[1, "mw", 3, "submit"], ["uploadForm", "ngForm"], [1, "mb20"], [1, "heading-doc", "mb20"], [3, "onUploadSuccess"], [4, "ngIf"], ["class", "form-check form-check-inline", 4, "ngFor", "ngForOf"], ["mat-raised-button", "", "color", "primary", "type", "submit", 1, "mt10"], [1, "form-check", "form-check-inline"], ["ngModel", "", "type", "checkbox", 1, "form-check-input", 3, "name", "id"], [1, "form-check-label", 3, "for"]],
      template: function UploadDocumentComponent_Template(rf, ctx) {
        if (rf & 1) {
          var _r302 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "form", 0, 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("submit", function UploadDocumentComponent_Template_form_submit_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r302);

            var _r297 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);

            return ctx.onSubmit(_r297);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "mat-card", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Add document");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "app-upload", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onUploadSuccess", function UploadDocumentComponent_Template_app_upload_onUploadSuccess_5_listener($event) {
            return ctx.onUploadSuccess($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, UploadDocumentComponent_div_6_Template, 8, 1, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !!ctx.uploadedInfo);
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgForm"], _angular_material_card__WEBPACK_IMPORTED_MODULE_5__["MatCard"], _shared_components_upload_upload_component__WEBPACK_IMPORTED_MODULE_6__["UploadComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgForOf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_8__["MatButton"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["CheckboxControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgModel"]],
      pipes: [_shared_pipes_role_pipe__WEBPACK_IMPORTED_MODULE_9__["RolePipe"]],
      styles: [".mb20[_ngcontent-%COMP%] {\n  margin-bottom: 20px;\n}\n\n.mt10[_ngcontent-%COMP%] {\n  margin-top: 10px;\n}\n\n.heading-doc[_ngcontent-%COMP%] {\n  margin-top: 30px;\n  font-size: 20px;\n}\n\n.mw[_ngcontent-%COMP%] {\n  max-width: 700px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvdXBsb2FkLWRvY3VtZW50L3VwbG9hZC1kb2N1bWVudC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvdXBsb2FkLWRvY3VtZW50L3VwbG9hZC1kb2N1bWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxnQkFBQTtBQ0VGOztBREFBO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0FDR0Y7O0FEREE7RUFDQyxnQkFBQTtBQ0lEIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvdXBsb2FkLWRvY3VtZW50L3VwbG9hZC1kb2N1bWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYjIwIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cbi5tdDEwe1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLmhlYWRpbmctZG9jIHtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuLm13IHtcblx0bWF4LXdpZHRoOiA3MDBweDtcbn0iLCIubWIyMCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5tdDEwIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLmhlYWRpbmctZG9jIHtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4ubXcge1xuICBtYXgtd2lkdGg6IDcwMHB4O1xufSJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](UploadDocumentComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-upload-document',
          templateUrl: './upload-document.component.html',
          styleUrls: ['./upload-document.component.scss']
        }]
      }], function () {
        return [{
          type: src_app_services_documents_service__WEBPACK_IMPORTED_MODULE_2__["DocumentsService"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/admin-dashboard/components/videos-page/videos-page.component.ts":
  /*!*********************************************************************************!*\
    !*** ./src/app/admin-dashboard/components/videos-page/videos-page.component.ts ***!
    \*********************************************************************************/

  /*! exports provided: VideosPageComponent */

  /***/
  function srcAppAdminDashboardComponentsVideosPageVideosPageComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "VideosPageComponent", function () {
      return VideosPageComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var _create_video_form_create_video_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../create-video-form/create-video-form.component */
    "./src/app/admin-dashboard/components/create-video-form/create-video-form.component.ts");
    /* harmony import */


    var _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../shared/services/resource.service */
    "./src/app/shared/services/resource.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function VideosPageComponent_th_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Title ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r207 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", element_r207.title, " ");
      }
    }

    function VideosPageComponent_th_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Description ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_13_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r208 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", element_r208.description, " ");
      }
    }

    function VideosPageComponent_th_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Video ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_16_ng_container_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "a", 23);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var element_r209 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("href", element_r209.videoS3.Location, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeUrl"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"]("", element_r209.videoS3.Key, " ");
      }
    }

    function VideosPageComponent_td_16_ng_container_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " No video ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }
    }

    function VideosPageComponent_td_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, VideosPageComponent_td_16_ng_container_1_Template, 3, 2, "ng-container", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, VideosPageComponent_td_16_ng_container_2_Template, 2, 0, "ng-container", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r209 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", element_r209.videoS3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !element_r209.videoS3);
      }
    }

    function VideosPageComponent_th_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " PDF ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_19_ng_container_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "a", 23);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var element_r213 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("href", element_r213.pdfS3.Location, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeUrl"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"]("", element_r213.pdfS3.Key, " ");
      }
    }

    function VideosPageComponent_td_19_ng_container_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " No video ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
      }
    }

    function VideosPageComponent_td_19_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, VideosPageComponent_td_19_ng_container_1_Template, 3, 2, "ng-container", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, VideosPageComponent_td_19_ng_container_2_Template, 2, 0, "ng-container", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r213 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", element_r213.pdfS3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !element_r213.pdfS3);
      }
    }

    function VideosPageComponent_th_21_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Chapter ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_22_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r217 = ctx.$implicit;

        var ctx_r194 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r194.getChapterName(element_r217.chapter), " ");
      }
    }

    function VideosPageComponent_th_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Class ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_25_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r218 = ctx.$implicit;

        var ctx_r196 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r196.getClassName(element_r218["class"]), " ");
      }
    }

    function VideosPageComponent_th_27_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Subject ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_28_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r219 = ctx.$implicit;

        var ctx_r198 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r198.getSubjectName(element_r219.subject), " ");
      }
    }

    function VideosPageComponent_th_30_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Created on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_31_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r220 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r220.createdAt), " ");
      }
    }

    function VideosPageComponent_th_33_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Update on ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_34_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "date");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r221 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](2, 1, element_r221.updatedAt), " ");
      }
    }

    function VideosPageComponent_th_36_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "th", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Actions ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_td_37_Template(rf, ctx) {
      if (rf & 1) {
        var _r224 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "button", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function VideosPageComponent_td_37_Template_button_click_2_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r224);

          var element_r222 = ctx.$implicit;

          var ctx_r223 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r223.onEdit(element_r222);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4, "create");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "button", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function VideosPageComponent_td_37_Template_button_click_5_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r224);

          var element_r222 = ctx.$implicit;

          var ctx_r225 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r225.onDelete(element_r222);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](7, "delete");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function VideosPageComponent_tr_38_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 27);
      }
    }

    function VideosPageComponent_tr_39_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "tr", 28);
      }
    }

    var _c0 = function _c0() {
      return [5, 10, 20];
    };

    var VideosPageComponent =
    /*#__PURE__*/
    function () {
      function VideosPageComponent(resourceService, dialog) {
        _classCallCheck(this, VideosPageComponent);

        this.resourceService = resourceService;
        this.dialog = dialog;
        this.resourceUrl = '/assets';
      }

      _createClass(VideosPageComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee32() {
            var classesResponse, chaptersResponse, subjectResponse, list;
            return regeneratorRuntime.wrap(function _callee32$(_context32) {
              while (1) {
                switch (_context32.prev = _context32.next) {
                  case 0:
                    _context32.next = 2;
                    return this.resourceService.fetchAll('/classes').toPromise();

                  case 2:
                    classesResponse = _context32.sent;
                    this.classList = classesResponse['data'];
                    this.classMap = new Map(classesResponse['data'].map(function (clas) {
                      return [clas._id, clas.name];
                    }));
                    _context32.next = 7;
                    return this.resourceService.fetchAll('/chapters').toPromise();

                  case 7:
                    chaptersResponse = _context32.sent;
                    this.chapterList = chaptersResponse['data'];
                    this.chapterMap = new Map(chaptersResponse['data'].map(function (chapter) {
                      return [chapter._id, chapter.title];
                    }));
                    _context32.next = 12;
                    return this.resourceService.fetchAll('/subjects').toPromise();

                  case 12:
                    subjectResponse = _context32.sent;
                    this.subjectList = subjectResponse['data'];
                    this.subjectMap = new Map(subjectResponse['data'].map(function (chapter) {
                      return [chapter._id, chapter.title];
                    }));
                    _context32.next = 17;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 17:
                    list = _context32.sent;
                    this.displayedColumns = ['title', 'description', 'subject', 'class', 'chapter', 'videoS3', 'pdfS3', 'createdAt', 'updatedAt', 'action'];
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](list['data']);
                    this.dataSource.paginator = this.paginator;

                  case 21:
                  case "end":
                    return _context32.stop();
                }
              }
            }, _callee32, this);
          }));
        }
      }, {
        key: "reFetchResourceList",
        value: function reFetchResourceList() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee33() {
            var list;
            return regeneratorRuntime.wrap(function _callee33$(_context33) {
              while (1) {
                switch (_context33.prev = _context33.next) {
                  case 0:
                    _context33.next = 2;
                    return this.resourceService.fetchAll(this.resourceUrl).toPromise();

                  case 2:
                    list = _context33.sent;
                    this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](list['data']);

                  case 4:
                  case "end":
                    return _context33.stop();
                }
              }
            }, _callee33, this);
          }));
        }
      }, {
        key: "getClassName",
        value: function getClassName(classId) {
          return this.classMap.get(classId) || 'Class has been deleted';
        }
      }, {
        key: "getChapterName",
        value: function getChapterName(chapterId) {
          return this.chapterMap.get(chapterId) || 'Chapter has been deleted';
        }
      }, {
        key: "getSubjectName",
        value: function getSubjectName(chapterId) {
          return this.subjectMap.get(chapterId) || 'Subject has been deleted';
        }
      }, {
        key: "openDialogue",
        value: function openDialogue(video) {
          var _this16 = this;

          var dialogRef = this.dialog.open(_create_video_form_create_video_form_component__WEBPACK_IMPORTED_MODULE_4__["CreateVideoFormComponent"], {
            width: '600px',
            data: {
              resourceUrl: this.resourceUrl,
              classList: this.classList,
              chapterList: this.chapterList,
              subjectList: this.subjectList,
              video: video
            }
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this16.reFetchResourceList();
          });
        }
      }, {
        key: "onAddResource",
        value: function onAddResource() {
          var video = {
            _id: '',
            title: '',
            description: '',
            "class": '',
            subject: '',
            chapter: ''
          };
          this.openDialogue(video);
        }
      }, {
        key: "onUpdate",
        value: function onUpdate() {
          this.reFetchResourceList();
        }
      }, {
        key: "onDelete",
        value: function onDelete(resource) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee34() {
            return regeneratorRuntime.wrap(function _callee34$(_context34) {
              while (1) {
                switch (_context34.prev = _context34.next) {
                  case 0:
                    _context34.next = 2;
                    return this.resourceService["delete"](this.resourceUrl, resource).toPromise();

                  case 2:
                    this.reFetchResourceList();

                  case 3:
                  case "end":
                    return _context34.stop();
                }
              }
            }, _callee34, this);
          }));
        }
      }, {
        key: "onEdit",
        value: function onEdit(element) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee35() {
            return regeneratorRuntime.wrap(function _callee35$(_context35) {
              while (1) {
                switch (_context35.prev = _context35.next) {
                  case 0:
                    this.openDialogue(element);

                  case 1:
                  case "end":
                    return _context35.stop();
                }
              }
            }, _callee35, this);
          }));
        }
      }]);

      return VideosPageComponent;
    }();

    VideosPageComponent.ɵfac = function VideosPageComponent_Factory(t) {
      return new (t || VideosPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]));
    };

    VideosPageComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: VideosPageComponent,
      selectors: [["app-videos-page"]],
      viewQuery: function VideosPageComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstaticViewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
        }
      },
      inputs: {
        resourceUrl: "resourceUrl"
      },
      decls: 41,
      vars: 5,
      consts: [[1, "mat-elevation-z8"], [1, "resource-actions-panel"], [1, "table-heading"], ["mat-icon-button", "", "color", "warn", "mat-mini-fab", "", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-table", "", 3, "dataSource"], ["matColumnDef", "title"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "description"], ["matColumnDef", "videoS3"], ["matColumnDef", "pdfS3"], ["matColumnDef", "chapter"], ["matColumnDef", "class"], ["matColumnDef", "subject"], ["matColumnDef", "createdAt"], ["matColumnDef", "updatedAt"], ["matColumnDef", "action", "sticky", "true"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["mat-header-cell", ""], ["mat-cell", ""], [4, "ngIf"], [3, "href"], [1, "example-flex-container2"], ["mat-icon-button", "", "color", "primary", "aria-label", "Example icon button with a vertical three dot icon", 3, "click"], ["mat-icon-button", "", "color", "warn", "aria-label", "Example icon button with a home icon", 3, "click"], ["mat-header-row", ""], ["mat-row", ""]],
      template: function VideosPageComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "h3", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, " Videos ");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "button", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function VideosPageComponent_Template_button_click_4_listener() {
            return ctx.onAddResource();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "add");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "table", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](8, 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, VideosPageComponent_th_9_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](10, VideosPageComponent_td_10_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](11, 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](12, VideosPageComponent_th_12_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](13, VideosPageComponent_td_13_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](14, 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, VideosPageComponent_th_15_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](16, VideosPageComponent_td_16_Template, 3, 2, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](17, 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](18, VideosPageComponent_th_18_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](19, VideosPageComponent_td_19_Template, 3, 2, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](20, 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](21, VideosPageComponent_th_21_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](22, VideosPageComponent_td_22_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](23, 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](24, VideosPageComponent_th_24_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](25, VideosPageComponent_td_25_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](26, 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](27, VideosPageComponent_th_27_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](28, VideosPageComponent_td_28_Template, 2, 1, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](29, 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](30, VideosPageComponent_th_30_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](31, VideosPageComponent_td_31_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](32, 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](33, VideosPageComponent_th_33_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](34, VideosPageComponent_td_34_Template, 3, 3, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](35, 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](36, VideosPageComponent_th_36_Template, 2, 0, "th", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](37, VideosPageComponent_td_37_Template, 8, 0, "td", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](38, VideosPageComponent_tr_38_Template, 1, 0, "tr", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](39, VideosPageComponent_tr_39_Template, 1, 0, "tr", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](40, "mat-paginator", 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("dataSource", ctx.dataSource);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](31);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](4, _c0));
        }
      },
      directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_7__["MatButton"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__["MatIcon"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTable"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCell"], _angular_common__WEBPACK_IMPORTED_MODULE_9__["NgIf"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRow"]],
      pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"]],
      styles: ["table[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.resource-actions-panel[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iamF2ZWQvRG9jdW1lbnRzL2Zyb250ZW5kL3NyYy9hcHAvYWRtaW4tZGFzaGJvYXJkL2NvbXBvbmVudHMvdmlkZW9zLXBhZ2UvdmlkZW9zLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL3ZpZGVvcy1wYWdlL3ZpZGVvcy1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0Esa0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9jb21wb25lbnRzL3ZpZGVvcy1wYWdlL3ZpZGVvcy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnJlc291cmNlLWFjdGlvbnMtcGFuZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbn1cbiIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5yZXNvdXJjZS1hY3Rpb25zLXBhbmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG59Il19 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](VideosPageComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-videos-page',
          templateUrl: './videos-page.component.html',
          styleUrls: ['./videos-page.component.scss']
        }]
      }], function () {
        return [{
          type: _shared_services_resource_service__WEBPACK_IMPORTED_MODULE_5__["ResourceService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
        }];
      }, {
        resourceUrl: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        paginator: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"],
          args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], {
            "static": true
          }]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/lib/AvMenu.ts":
  /*!*******************************!*\
    !*** ./src/app/lib/AvMenu.ts ***!
    \*******************************/

  /*! exports provided: default */

  /***/
  function srcAppLibAvMenuTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * This code and all components (c) Copyright 2019-2020, Wowza Media Systems, LLC. All rights reserved.
     * This code is licensed pursuant to the BSD 3-Clause License.
     */


    var selectedMic = "";
    var selectedCam = "";
    var selectedMobileCam = "";

    var init = function init(cameras, mics, camCallback, micCallback) {
      $("#show-cameras-menu").popover({
        content: deviceListDesktopHTML(cameras, "Camera"),
        html: true,
        trigger: "click",
        placement: "right"
      });
      $("#show-mics-menu").popover({
        content: deviceListDesktopHTML(mics, "Microphone"),
        html: true,
        trigger: "click",
        placement: "left"
      });
      $("#settings-button-large").click(function () {
        $("#show-mics-menu, #show-cameras-menu").popover('hide');
      }); // console.log(selectedCam);

      $("#camera-list-select").append(deviceListSelectHTML(cameras, "Camera"));
      $("#camera-list-select").change(function () {
        var camera = $("#camera-list-select option:selected").attr("id").split("_")[1];
        camCallback(camera);
      });
      $("#mic-list-select").append(deviceListSelectHTML(mics, "Microphone"));
      $("#mic-list-select").change(function () {
        var mic = $("#mic-list-select option:selected").attr("id").split("_")[1];
        micCallback(mic);
      }); // the click listeners for desktop need to be attached when the menu is shown

      $("#show-cameras-menu").on('inserted.bs.popover', function () {
        if (selectedCam) {
          $("#".concat(selectedCam)).addClass("font-weight-bold");
        }

        ;

        if (selectedMobileCam) {
          $("#camera-list-select option").attr("selected", false);
          $("#".concat(selectedMobileCam)).attr("selected", true);
        }

        ;
        attachOnClickListeners(cameras, camCallback, "Camera");
      }); // the click listeners for desktop need to be attached when the menu is shown

      $("#show-mics-menu").on('inserted.bs.popover', function () {
        if (selectedMic) {
          $("#".concat(selectedMic)).addClass("font-weight-bold");
        }

        ;
        attachOnClickListeners(mics, micCallback, "Microphone");
      });
    };

    var deviceListDesktopHTML = function deviceListDesktopHTML(devices, label) {
      var deviceList = "";

      for (var i = 0; i < devices.length; i++) {
        var deviceId = "".concat(label, "_").concat(devices[i].deviceId);

        if (i == 0) {
          setSelectedDevice(deviceId, label);
        }

        ;
        var deviceLabel = devices[i].label || "".concat(label, "_").concat(i);
        deviceList = deviceList + "<p id=\"".concat(deviceId, "\" class=\"device-list-item\">").concat(deviceLabel, "</p>");
      }

      return deviceList;
    };

    var deviceListSelectHTML = function deviceListSelectHTML(devices, label) {
      var deviceList = [];

      for (var i = 0; i < devices.length; i++) {
        var deviceId = "".concat(label, "Mobile_").concat(devices[i].deviceId);

        if (i == 0) {
          selectedMobileCam = deviceId;
        }

        ;
        var deviceLabel = devices[i].label || "".concat(label, "_").concat(i);
        var element = $('<option>').attr("id", deviceId).text(deviceLabel);
        deviceList.push(element);
      }

      return deviceList;
    }; // pass label here too so we can mark selected guy


    var attachOnClickListeners = function attachOnClickListeners(devices, callback, label) {
      var _loop = function _loop() {
        var deviceId = "".concat(label, "_").concat(devices[i].deviceId);
        $("#".concat(deviceId)).click(function () {
          callback(deviceId.split("_")[1]);
          setSelectedDevice(deviceId, label);
          $("#show-mics-menu, #show-cameras-menu").popover('hide'); //stupid hack to make popovers work in safari because "focus" doesn't

          $(".device-list-item").remove(); //listener garbage collection here
        });
      };

      for (var i = 0; i < devices.length; i++) {
        _loop();
      }
    };

    var setSelectedDevice = function setSelectedDevice(id, label) {
      if (label == "Camera") {
        selectedCam = id;
      } else {
        selectedMic = id;
      }
    };

    var AvMenu = {
      init: init
    };
    /* harmony default export */

    __webpack_exports__["default"] = AvMenu;
    /***/
  },

  /***/
  "./src/app/lib/SoundMeter.js":
  /*!***********************************!*\
    !*** ./src/app/lib/SoundMeter.js ***!
    \***********************************/

  /*! exports provided: default */

  /***/
  function srcAppLibSoundMeterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     *  Copyright (c) 2015 The WebRTC project authors. All Rights Reserved.
     *
     *  Use of this source code is governed by a BSD-style license
     *  that can be found in the LICENSE file in the root of the source
     *  tree.
     * 
     *  This code is modified to be used as a JS module from original source at
     *  https://github.com/webrtc/samples/blob/gh-pages/src/content/getusermedia/volume/js/soundmeter.js
     * 
     */
    // Meter class that generates a number correlated to audio volume.
    // The meter class itself displays nothing, but it makes the
    // instantaneous and time-decaying volumes available for inspection.
    // It also reports on the fraction of samples that were at or near
    // the top of the measurement range.


    function SoundMeter(context) {
      this.context = context;
      this.instant = 0.0;
      this.slow = 0.0;
      this.clip = 0.0;
      this.script = context.createScriptProcessor(2048, 1, 1);
      var that = this;

      this.script.onaudioprocess = function (event) {
        var input = event.inputBuffer.getChannelData(0);
        var i;
        var sum = 0.0;
        var clipcount = 0;

        for (i = 0; i < input.length; ++i) {
          sum += input[i] * input[i];

          if (Math.abs(input[i]) > 0.99) {
            clipcount += 1;
          }
        }

        that.instant = Math.sqrt(sum / input.length);
        that.slow = 0.95 * that.slow + 0.05 * that.instant;
        that.clip = clipcount / input.length;
      };
    }

    SoundMeter.prototype.connectToSource = function (stream, callback) {
      try {
        this.mic = this.context.createMediaStreamSource(stream);
        this.mic.connect(this.script); // necessary to make sample run, but should not be.

        this.script.connect(this.context.destination);

        if (typeof callback !== 'undefined') {
          callback(null);
        }
      } catch (e) {
        console.error(e);

        if (typeof callback !== 'undefined') {
          callback(e);
        }
      }
    };

    SoundMeter.prototype.stop = function () {
      this.mic.disconnect();
      this.script.disconnect();
    };
    /* harmony default export */


    __webpack_exports__["default"] = SoundMeter;
    /***/
  },

  /***/
  "./src/app/lib/WowzaMungeSDP.ts":
  /*!**************************************!*\
    !*** ./src/app/lib/WowzaMungeSDP.ts ***!
    \**************************************/

  /*! exports provided: mungeSDPPublish, mungeSDPPlay, default */

  /***/
  function srcAppLibWowzaMungeSDPTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "mungeSDPPublish", function () {
      return mungeSDPPublish;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "mungeSDPPlay", function () {
      return mungeSDPPlay;
    });
    /*
     * This code and all components (c) Copyright 2019-2020, Wowza Media Systems, LLC. All rights reserved.
     * This code is licensed pursuant to the BSD 3-Clause License.
     */


    var browserDetails = window.adapter.browserDetails;
    var SDPOutput;
    var videoChoice;
    var audioChoice;
    var videoIndex;
    var audioIndex;

    function addAudio(sdpStr, audioLine) {
      var sdpLines = sdpStr.split(/\r\n/);
      var sdpSection = 'header';
      var hitMID = false;
      var sdpStrRet = '';
      var done = false;

      for (var sdpIndex in sdpLines) {
        var sdpLine = sdpLines[sdpIndex];
        if (sdpLine.length <= 0) continue;
        sdpStrRet += sdpLine;
        sdpStrRet += '\r\n';

        if ('a=rtcp-mux'.localeCompare(sdpLine) == 0 && done == false) {
          sdpStrRet += audioLine;
          done = true;
        }
      }

      return sdpStrRet;
    }

    function addVideo(sdpStr, videoLine) {
      var sdpLines = sdpStr.split(/\r\n/);
      var sdpSection = 'header';
      var hitMID = false;
      var sdpStrRet = '';
      var done = false;
      var rtcpSize = false;
      var rtcpMux = false;

      for (var sdpIndex in sdpLines) {
        var sdpLine = sdpLines[sdpIndex];
        if (sdpLine.length <= 0) continue;

        if (sdpLine.includes("a=rtcp-rsize")) {
          rtcpSize = true;
        }

        if (sdpLine.includes("a=rtcp-mux")) {
          rtcpMux = true;
        }
      }

      for (var _sdpIndex in sdpLines) {
        var _sdpLine = sdpLines[_sdpIndex];
        sdpStrRet += _sdpLine;
        sdpStrRet += '\r\n';

        if ('a=rtcp-rsize'.localeCompare(_sdpLine) == 0 && done == false && rtcpSize == true) {
          sdpStrRet += videoLine;
          done = true;
        }

        if ('a=rtcp-mux'.localeCompare(_sdpLine) == 0 && done == true && rtcpSize == false) {
          sdpStrRet += videoLine;
          done = true;
        }

        if ('a=rtcp-mux'.localeCompare(_sdpLine) == 0 && done == false && rtcpSize == false) {
          done = true;
        }
      }

      return sdpStrRet;
    } // Filter codec offerings


    function deliverCheckLine(profile, type) {
      var outputString = "";

      for (var line in SDPOutput) {
        var lineInUse = SDPOutput[line];
        outputString += line;

        if (lineInUse.includes(profile)) {
          if (profile.includes("VP9") || profile.includes("VP8")) {
            var output = "";
            var outputs = lineInUse.split(/\r\n/);

            for (var position in outputs) {
              var transport = outputs[position]; // NOTE: This block of code is needed for WSE versions older than 4.8.5
              // if (transport.indexOf("a=extmap") !== -1 ||
              //   transport.indexOf("transport-cc") !== -1 ||
              //   transport.indexOf("goog-remb") !== -1 ||
              //   transport.indexOf("nack") !== -1) {
              //   continue;
              // }

              output += transport;
              output += "\r\n";
            }

            if (type.includes("audio")) {
              audioIndex = line;
            }

            if (type.includes("video")) {
              videoIndex = line;
            }

            return output;
          }

          if (type.includes("audio")) {
            audioIndex = line;
          }

          if (type.includes("video")) {
            videoIndex = line;
          }

          return lineInUse;
        }
      }

      return outputString;
    }

    function checkLine(line) {
      if (line.startsWith("a=rtpmap") || line.startsWith("a=rtcp-fb") || line.startsWith("a=fmtp")) {
        var res = line.split(":");

        if (res.length > 1) {
          var number = res[1].split(" ");

          if (!isNaN(number[0])) {
            if (!number[1].startsWith("http") && !number[1].startsWith("ur")) {
              var currentString = SDPOutput[number[0]];

              if (!currentString) {
                currentString = "";
              }

              currentString += line + "\r\n";
              SDPOutput[number[0]] = currentString;
              return false;
            }
          }
        }
      }

      return true;
    }

    function getrtpMapID(line) {
      var findid = new RegExp('a=rtpmap:(\\d+) (\\w+)/(\\d+)');
      var found = line.match(findid);
      return found && found.length >= 3 ? found : null;
    }

    function mungeSDPPublish(sdpStr, mungeData) {
      SDPOutput = new Object();
      videoChoice = "42e01f";
      audioChoice = "opus";
      videoIndex = -1;
      audioIndex = -1;
      var sdpLines = sdpStr.split(/\r\n/);
      var sdpSection = 'header';
      var hitMID = false;
      var sdpStrRet = '';
      if (mungeData.videoCodec != null && mungeData.videoCodec !== '') videoChoice = mungeData.videoCodec;
      if (mungeData.audioCodec != null && mungeData.audioCodec !== '') audioChoice = mungeData.audioCodec; // Deliver the requested codecs

      for (var sdpIndex in sdpLines) {
        var sdpLine = sdpLines[sdpIndex];
        if (sdpLine.length <= 0) continue;
        var doneCheck = checkLine(sdpLine);
        if (!doneCheck) continue;
        sdpStrRet += sdpLine;
        sdpStrRet += '\r\n';
      }

      sdpStrRet = addAudio(sdpStrRet, deliverCheckLine(audioChoice, "audio"));
      sdpStrRet = addVideo(sdpStrRet, deliverCheckLine(videoChoice, "video"));
      sdpStr = sdpStrRet;
      sdpLines = sdpStr.split(/\r\n/);
      sdpStrRet = '';

      for (var _sdpIndex2 in sdpLines) {
        var _sdpLine2 = sdpLines[_sdpIndex2];
        if (_sdpLine2.length <= 0) continue;

        if (browserDetails.browser === 'chrome') {
          var audioMLines = void 0;

          if (_sdpLine2.indexOf("m=audio") == 0 && audioIndex != -1) {
            audioMLines = _sdpLine2.split(" ");
            sdpStrRet += audioMLines[0] + " " + audioMLines[1] + " " + audioMLines[2] + " " + audioIndex + "\r\n";
            continue;
          }

          if (_sdpLine2.indexOf("m=video") == 0 && videoIndex != -1) {
            audioMLines = _sdpLine2.split(" ");
            sdpStrRet += audioMLines[0] + " " + audioMLines[1] + " " + audioMLines[2] + " " + videoIndex + "\r\n";
            continue;
          }
        }

        sdpStrRet += _sdpLine2;

        if (_sdpLine2.indexOf("m=audio") === 0) {
          sdpSection = 'audio';
          hitMID = false;
        } else if (_sdpLine2.indexOf("m=video") === 0) {
          sdpSection = 'video';
          hitMID = false;
        } else if (_sdpLine2.indexOf("a=rtpmap") == 0) {
          sdpSection = 'bandwidth';
          hitMID = false;
        }

        if (browserDetails.browser === 'chrome') {
          if (_sdpLine2.indexOf("a=mid:") === 0 || _sdpLine2.indexOf("a=rtpmap") == 0) {
            if (!hitMID) {
              if ('audio'.localeCompare(sdpSection) == 0) {
                if (mungeData.audioBitrate !== undefined) {
                  sdpStrRet += '\r\nb=CT:' + mungeData.audioBitrate;
                  sdpStrRet += '\r\nb=AS:' + mungeData.audioBitrate;
                }

                hitMID = true;
              } else if ('video'.localeCompare(sdpSection) == 0) {
                if (mungeData.videoBitrate !== undefined) {
                  sdpStrRet += '\r\nb=CT:' + mungeData.videoBitrate;
                  sdpStrRet += '\r\nb=AS:' + mungeData.videoBitrate;

                  if (mungeData.videoFrameRate !== undefined) {
                    sdpStrRet += '\r\na=framerate:' + mungeData.videoFrameRate;
                  }
                }

                hitMID = true;
              } else if ('bandwidth'.localeCompare(sdpSection) == 0) {
                var rtpmapID = void 0;
                rtpmapID = getrtpMapID(_sdpLine2);

                if (rtpmapID !== null) {
                  var match = rtpmapID[2].toLowerCase();

                  if ('vp9'.localeCompare(match) == 0 || 'vp8'.localeCompare(match) == 0 || 'h264'.localeCompare(match) == 0 || 'red'.localeCompare(match) == 0 || 'ulpfec'.localeCompare(match) == 0 || 'rtx'.localeCompare(match) == 0) {
                    if (mungeData.videoBitrate !== undefined) {
                      sdpStrRet += '\r\na=fmtp:' + rtpmapID[1] + ' x-google-min-bitrate=' + mungeData.videoBitrate + ';x-google-max-bitrate=' + mungeData.videoBitrate;
                    }
                  }

                  if ('opus'.localeCompare(match) == 0 || 'isac'.localeCompare(match) == 0 || 'g722'.localeCompare(match) == 0 || 'pcmu'.localeCompare(match) == 0 || 'pcma'.localeCompare(match) == 0 || 'cn'.localeCompare(match) == 0) {
                    if (mungeData.audioBitrate !== undefined) {
                      sdpStrRet += '\r\na=fmtp:' + rtpmapID[1] + ' x-google-min-bitrate=' + mungeData.audioBitrate + ';x-google-max-bitrate=' + mungeData.audioBitrate;
                    }
                  }
                }
              }
            }
          }
        }

        if (browserDetails.browser === 'firefox' || browserDetails.browser === 'safari') {
          if (_sdpLine2.indexOf("c=IN") == 0) {
            if ('audio'.localeCompare(sdpSection) == 0) {
              if (mungeData.audioBitrate !== '') {
                sdpStrRet += "\r\nb=TIAS:" + Number(mungeData.audioBitrate) * 1000 + "\r\n";
                sdpStrRet += "b=AS:" + Number(mungeData.audioBitrate) * 1000 + "\r\n";
                sdpStrRet += "b=CT:" + Number(mungeData.audioBitrate) * 1000 + "\r\n";
              }

              continue;
            }

            if ('video'.localeCompare(sdpSection) == 0) {
              if (mungeData.videoBitrate !== '') {
                sdpStrRet += "\r\nb=TIAS:" + Number(mungeData.videoBitrate) * 1000 + "\r\n";
                sdpStrRet += "b=AS:" + Number(mungeData.videoBitrate) * 1000 + "\r\n";
                sdpStrRet += "b=CT:" + Number(mungeData.videoBitrate) * 1000 + "\r\n";
              }

              continue;
            }
          }
        }

        sdpStrRet += '\r\n';
      }

      return sdpStrRet;
    }

    function mungeSDPPlay(sdpStr) {
      // For greatest playback compatibility, 
      // force H.264 playback to baseline (42e01f).
      var sdpLines = sdpStr.split(/\r\n/);
      var sdpStrRet = '';

      for (var sdpIndex in sdpLines) {
        var sdpLine = sdpLines[sdpIndex];
        if (sdpLine.length == 0) continue;

        if (sdpLine.includes("profile-level-id")) {
          // The profile-level-id string has three parts: XXYYZZ, where
          //   XX: 42 baseline, 4D main, 64 high
          //   YY: constraint
          //   ZZ: level ID
          // Look for codecs higher than baseline and force downward.
          var profileLevelId = sdpLine.substr(sdpLine.indexOf("profile-level-id") + 17, 6);
          var profile = Number('0x' + profileLevelId.substr(0, 2));
          var constraint = Number('0x' + profileLevelId.substr(2, 2));
          var level = Number('0x' + profileLevelId.substr(4, 2));

          if (profile > 0x42) {
            profile = 0x42;
            constraint = 0xE0;
            level = 0x1F;
          }

          var newProfileLevelId = ("00" + profile.toString(16)).slice(-2).toLowerCase() + ("00" + constraint.toString(16)).slice(-2).toLowerCase() + ("00" + level.toString(16)).slice(-2).toLowerCase();
          sdpLine = sdpLine.replace(profileLevelId, newProfileLevelId);
        }

        sdpStrRet += sdpLine;
        sdpStrRet += '\r\n';
      }

      return sdpStrRet;
    }
    /* harmony default export */


    __webpack_exports__["default"] = mungeSDPPublish;
    /***/
  },

  /***/
  "./src/app/lib/WowzaPeerConnectionPublish.ts":
  /*!***************************************************!*\
    !*** ./src/app/lib/WowzaPeerConnectionPublish.ts ***!
    \***************************************************/

  /*! exports provided: default */

  /***/
  function srcAppLibWowzaPeerConnectionPublishTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * This code and all components (c) Copyright 2019-2020, Wowza Media Systems, LLC. All rights reserved.
     * This code is licensed pursuant to the BSD 3-Clause License.
     */


    var browserDetails = window.adapter.browserDetails; // munge plug-in

    var mungeSDP = undefined; // callbacks

    var onconnectionstatechange = undefined;
    var onstop = undefined;
    var onerror = undefined; // local state

    var localStream = undefined;
    var streamInfo = undefined;
    var mediaInfo = {
      videoBitrate: "",
      audioBitrate: "",
      videoFrameRate: "30",
      videoCodec: "42e01f",
      audioCodec: "opus"
    };
    var userData = undefined;
    var wsConnection = undefined;
    var peerConnection = undefined;
    var peerConnectionConfig = {
      'iceServers': []
    };
    peerConnectionConfig = null;

    function gotIceCandidate(event) {
      if (event.candidate != null) {
        console.log('WowzaPeerConnectionPublish.gotIceCandidate: ' + JSON.stringify({
          'ice': event.candidate
        }));
      }
    }

    function gotDescription(description) {
      console.log("WowzaPeerConnectionPublish.gotDescription: SDP:");
      console.log(description.sdp + '');
      var mungeData = new Object();
      if (mediaInfo.audioBitrate != null) mungeData.audioBitrate = mediaInfo.audioBitrate;
      if (mediaInfo.videoBitrate != null) mungeData.videoBitrate = mediaInfo.videoBitrate;
      if (mediaInfo.videoFrameRate != null) mungeData.videoFrameRate = mediaInfo.videoFrameRate;
      if (mediaInfo.videoCodec != null) mungeData.videoCodec = mediaInfo.videoCodec;
      if (mediaInfo.audioCodec != null) mungeData.audioCodec = mediaInfo.audioCodec;

      if (mungeSDP != null) {
        description.sdp = mungeSDP(description.sdp, mungeData);
      }

      console.log("WowzaPeerConnectionPublish.gotDescription: Setting local description SDP: ");
      console.log(description.sdp);
      peerConnection.setLocalDescription(description).then(function () {
        return wsConnection.send('{"direction":"publish", "command":"sendOffer", "streamInfo":' + JSON.stringify(streamInfo) + ', "sdp":' + JSON.stringify(description) + ', "userData":' + JSON.stringify(userData) + '}');
      })["catch"](function (error) {
        var newError = Object.assign({
          message: "Peer connection failed"
        }, error);
        errorHandler(newError);
      });
    } // START STATS


    function statsInterval() {
      console.log('WowzaPeerConnectionPublish.statsInterval');

      if (peerConnection != null) {
        peerConnection.getStats(null).then(showLocalStats, function (err) {
          return console.log(err);
        });
      }
    }

    function showLocalStats(results) {
      results.forEach(function (res) {
        console.log(res);
      });
    }

    function dumpStats(results) {
      var statsString = '';
      results.forEach(function (res) {
        statsString += '<h3>Report type=';
        statsString += res.type;
        statsString += '</h3>\n';
        statsString += "id ".concat(res.id, "<br>");
        statsString += "time ".concat(res.timestamp, "<br>");
        Object.keys(res).forEach(function (k) {
          if (k !== 'timestamp' && k !== 'type' && k !== 'id') {
            statsString += "".concat(k, ": ").concat(res[k], "<br>");
          }
        });
      });
      return statsString;
    } // END STATS


    function wsConnect(url) {
      try {
        wsConnection = new WebSocket(url);
      } catch (e) {
        errorHandler(e);
        return;
      }

      wsConnection.binaryType = 'arraybuffer';

      wsConnection.onopen = function () {
        console.log("WowzaPeerConnectionPublish.wsConnection.onopen");
        peerConnection = new RTCPeerConnection(peerConnectionConfig);

        peerConnection.onicecandidate = function (event) {
          if (event.candidate != null) {
            console.log('WowzaPeerConnectionPublish.gotIceCandidate: ' + JSON.stringify({
              'ice': event.candidate
            }));
          }
        };

        peerConnection.onconnectionstatechange = function (event) {
          if (onconnectionstatechange != null) {
            onconnectionstatechange(event);
          }
        };

        var localTracks = localStream.getTracks();

        for (var localTrack in localTracks) {
          peerConnection.addTrack(localTracks[localTrack], localStream);
        }

        peerConnection.createOffer(gotDescription, errorHandler);
      };

      wsConnection.onmessage = function (evt) {
        console.log("WowzaPeerConnectionPublish.wsConnection.onmessage: " + evt.data);
        var msgJSON = JSON.parse(evt.data);
        var msgStatus = Number(msgJSON['status']);
        var msgCommand = msgJSON['command'];

        if (msgStatus != 200) {
          stop();
          errorHandler({
            message: msgJSON['statusDescription']
          });
        } else {
          var sdpData = msgJSON['sdp'];

          if (sdpData !== undefined) {
            var mungeData = new Object();
            if (mediaInfo.audioBitrate !== undefined) mungeData.audioBitrate = mediaInfo.audioBitrate;
            if (mediaInfo.videoBitrate !== undefined) mungeData.videoBitrate = mediaInfo.videoBitrate;
            console.log("WowzaPeerConnectionPublish.wsConnection.onmessage: Setting remote description SDP:");
            console.log(sdpData.sdp);
            peerConnection.setRemoteDescription(new RTCSessionDescription(sdpData), function () {}, errorHandler);
          }

          var iceCandidates = msgJSON['iceCandidates'];

          if (iceCandidates !== undefined) {
            for (var index in iceCandidates) {
              console.log('WowzaPeerConnectionPublish.wsConnection.iceCandidates: ' + iceCandidates[index]);
              peerConnection.addIceCandidate(new RTCIceCandidate(iceCandidates[index]));
            }
          }
        }

        if (wsConnection != null) wsConnection.close();
        wsConnection = null;
      };

      wsConnection.onclose = function () {
        console.log("WowzaPeerConnectionPublish.wsConnection.onclose");
      };

      wsConnection.onerror = function (error) {
        console.log('wsConnection.onerror');
        console.log(error);
        var message = "Websocket connection failed: " + url;
        console.log(message);
        var newError = Object.assign({
          message: message
        }, error);
        stop();
        errorHandler(newError);
      };
    } // startProps:
    //   wsURL: string
    //   localStream: MediaStream
    //   streamInfo: { applicationName, streamName }
    //   mediaInfo: { videoBitrate, audioBitrate, videoFrameRate, videoCodec, audioCodec }
    //   userData: any
    //   mungeSDP: function (sdpStr, mungeData)
    //   onconnectionstatechange: function
    //   onerror: function 


    function start(props) {
      var wsURL = props.wsURL;
      localStream = props.localStream;
      if (props.streamInfo != null) streamInfo = props.streamInfo;
      if (props.mediaInfo != null) mediaInfo = props.mediaInfo;
      if (props.userData != null) userData = props.userData;
      if (props.mungeSDP != null) mungeSDP = props.mungeSDP;
      if (props.onconnectionstatechange != null) onconnectionstatechange = props.onconnectionstatechange;
      if (props.onstop != null) onstop = props.onstop;
      if (props.onerror != null) onerror = props.onerror;

      if (peerConnection == null) {
        console.log("WowzaPeerConnectionPublish.start: wsURL:" + wsURL + " streamInfo:" + JSON.stringify(streamInfo));
        wsConnect(wsURL);
      } else {
        console.log('WowzaPeerConnectionPublish.start: peerConnection already in use, not starting');
      }
    }

    function stop() {
      if (peerConnection != null) peerConnection.close();
      peerConnection = null;
      if (wsConnection != null) wsConnection.close();
      wsConnection = null;

      if (onstop != null) {
        onstop();
      }
    }

    function errorHandler(error) {
      console.trace();

      if (onerror != null) {
        onerror(error);
      }
    } // To display peer connection stats, uncomment this line
    // setInterval(statsInterval,5000);

    /* harmony default export */


    __webpack_exports__["default"] = {
      connect: wsConnect,
      start: start,
      stop: stop
    };
    /***/
  },

  /***/
  "./src/app/lib/WowzaWebRTCPublish.ts":
  /*!*******************************************!*\
    !*** ./src/app/lib/WowzaWebRTCPublish.ts ***!
    \*******************************************/

  /*! exports provided: default */

  /***/
  function srcAppLibWowzaWebRTCPublishTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _WowzaMungeSDP__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./WowzaMungeSDP */
    "./src/app/lib/WowzaMungeSDP.ts");
    /* harmony import */


    var _WowzaPeerConnectionPublish__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./WowzaPeerConnectionPublish */
    "./src/app/lib/WowzaPeerConnectionPublish.ts");
    /* harmony import */


    var _SoundMeter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./SoundMeter.js */
    "./src/app/lib/SoundMeter.js");
    /*
     * This code and all components (c) Copyright 2019-2020, Wowza Media Systems, LLC. All rights reserved.
     * This code is licensed pursuant to the BSD 3-Clause License.
     */


    window.AudioContext = window.AudioContext || window.webkitAudioContext || false;
    var state = {
      ready: false,
      connectionState: 'stopped',
      videoElementPublish: undefined,
      stream: undefined,
      constraints: {
        video: {
          width: {
            min: "640",
            ideal: "1280",
            max: "1920"
          },
          height: {
            min: "360",
            ideal: "720",
            max: "1080"
          },
          frameRate: "30"
        },
        audio: true
      },
      sdpURL: '',
      streamInfo: {
        applicationName: "",
        streamName: "",
        sessionId: "[empty]"
      },
      mediaInfo: {
        videoBitrate: "",
        audioBitrate: "",
        videoFrameRate: "30",
        videoCodec: "42e01f",
        audioCodec: "opus"
      },
      userData: {
        param1: "value1"
      },
      audioEnabled: true,
      videoEnabled: true,
      useSoundMeter: false,
      cameras: [],
      microphones: []
    };
    var soundMeter = undefined;
    var soundMeterInterval = undefined;
    var callbacks = {};

    var setState = function setState(newState) {
      return new Promise(function (resolve, reject) {
        state = Object.assign(Object.assign({}, state), newState);

        if (callbacks.onStateChanged != null) {
          callbacks.onStateChanged(state);
        }

        resolve(state);
      });
    };

    var getState = function getState() {
      return state;
    }; // External wire callbacks


    var on = function on(_callbacks) {
      callbacks = _callbacks;
    }; // External set


    var set = function set(props) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(void 0, void 0, void 0,
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee36() {
        var currentState, newStreamInfo, newMediaInfo, newState, constraintsChanged, s1, s2;
        return regeneratorRuntime.wrap(function _callee36$(_context36) {
          while (1) {
            switch (_context36.prev = _context36.next) {
              case 0:
                console.log('WowzaWebRTC.set');
                console.log(props);
                currentState = getState();
                newStreamInfo = Object.assign({}, currentState.streamInfo);
                newMediaInfo = Object.assign({}, currentState.mediaInfo);
                newState = {};
                constraintsChanged = false;
                if (props.videoElementPublish != null) newState['videoElementPublish'] = props.videoElementPublish;
                if (props.useSoundMeter != null) newState['useSoundMeter'] = props.useSoundMeter;
                if (props.sdpURL != null) newState['sdpURL'] = props.sdpURL.trim();
                if (props.applicationName != null) newStreamInfo['applicationName'] = props.applicationName.trim();
                if (props.streamName != null) newStreamInfo['streamName'] = props.streamName.trim();
                if (props.sessionId != null) newStreamInfo['sessionId'] = props.sessionId;
                if (props.streamInfo != null) newStreamInfo = Object.assign(Object.assign({}, newStreamInfo), props.streamInfo);
                newState['streamInfo'] = newStreamInfo;
                if (props.videoBitrate != null) newMediaInfo.videoBitrate = props.videoBitrate;
                if (props.audioBitrate != null) newMediaInfo.audioBitrate = props.audioBitrate;

                if (props.videoFrameRate != null) {
                  newMediaInfo.videoFrameRate = props.videoFrameRate;
                  newState['constraints'] = Object.assign({}, currentState.constraints);
                  if (newMediaInfo.videoFrameRate === '') delete newState['constraints']['video']['frameRate'];else newState['constraints']['video']['frameRate'] = props.videoFrameRate;
                }

                if (props.videoCodec != null) newMediaInfo.videoCodec = props.videoCodec;
                if (props.audioCodec != null) newMediaInfo.audioCodec = props.audioCodec;
                if (props.mediaInfo != null) newMediaInfo = Object.assign(Object.assign({}, newMediaInfo), props.streamInfo);
                newState['mediaInfo'] = newMediaInfo;
                if (props.userData != null) newState['userData'] = Object.assign({}, props.userData);
                if (props.constraints != null) newState['constraints'] = props.constraints;

                if (newState.constraints != null && JSON.stringify(currentState.constraints) !== JSON.stringify(newState.constraints)) {
                  constraintsChanged = true;
                }

                _context36.prev = 25;
                _context36.next = 28;
                return setState(newState);

              case 28:
                s1 = _context36.sent;

                if (!(s1.stream == null)) {
                  _context36.next = 32;
                  break;
                }

                _context36.next = 32;
                return getUserMedia();

              case 32:
                _context36.next = 34;
                return getDevices();

              case 34:
                s2 = _context36.sent;

                if (!(constraintsChanged && s2.stream != null)) {
                  _context36.next = 38;
                  break;
                }

                _context36.next = 38;
                return applyConstraints(s2.stream, s2.constraints);

              case 38:
                return _context36.abrupt("return", getState());

              case 41:
                _context36.prev = 41;
                _context36.t0 = _context36["catch"](25);
                errorHandler(_context36.t0);
                return _context36.abrupt("return", null);

              case 45:
              case "end":
                return _context36.stop();
            }
          }
        }, _callee36, null, [[25, 41]]);
      }));
    }; // returns Promise


    var applyConstraints = function applyConstraints(stream, constraints) {
      var promises = [];
      var audioTracks = stream.getAudioTracks();
      var videoTracks = stream.getVideoTracks();

      for (var a in audioTracks) {
        promises.push(audioTracks[a].applyConstraints(constraints['audio']));
      }

      for (var v in videoTracks) {
        promises.push(videoTracks[v].applyConstraints(constraints['video']));
      }

      return Promise.all(promises);
    }; // returns Promise
    // resultsObject is {stream:MediaStream}


    var getUserMedia = function getUserMedia() {
      return new Promise(function (resolve, reject) {
        console.log('WowzaWebRTCPublish.getUserMedia');
        var currentState = getState();

        if (soundMeter != null) {
          soundMeter.stop();
        }

        if (soundMeterInterval != null) {
          clearInterval(soundMeterInterval);
        }

        if (currentState.videoElementPublish == null) {
          reject({
            message: "videoElementPublish not set"
          });
        }

        function getUserMediaSuccess(stream) {
          var newState = {
            stream: stream
          };

          try {
            currentState.videoElementPublish.srcObject = stream;
            newState['ready'] = true;
          } catch (error) {
            console.log('getUserMediaSuccess: error connecting stream to videoElementPublish, trying createObjectURL');
            console.log(error);
            currentState.videoElementPublish.src = window.URL.createObjectURL(stream);
            newState['ready'] = true;
          }

          try {
            if (window.AudioContext && currentState.useSoundMeter) {
              var audioContext = new AudioContext();

              var _soundMeter = new _SoundMeter_js__WEBPACK_IMPORTED_MODULE_3__["default"](audioContext);

              _soundMeter.connectToSource(stream, function (e) {
                if (e) {
                  console.log(e);
                  return;
                }

                soundMeterInterval = setInterval(function () {
                  var soundVal = getState().audioEnabled ? _soundMeter.instant.toFixed(2) : 0;

                  if (callbacks.onSoundMeter != null) {
                    callbacks.onSoundMeter(soundVal);
                  }
                }, 200);
              });
            }
          } catch (error2) {
            console.log('getUserMediaSuccess: error creating audio meter');
            console.log(error2);
          }

          setState(newState);
          resolve(newState);
        }

        if (navigator.mediaDevices.getUserMedia) {
          navigator.mediaDevices.getUserMedia(currentState.constraints).then(getUserMediaSuccess)["catch"](errorHandler);
        } else if (navigator.getUserMedia) {
          navigator.getUserMedia(currentState.constraints, getUserMediaSuccess, function (error) {
            errorHandler(error);
            reject(error);
          });
        } else {
          errorHandler({
            message: "Your browser does not support WebRTC"
          });
          reject();
        }
      });
    }; // Returns Promise
    // resultsObject is {cameras:[]<InputDeviceInfo>,microphones:[]<InputDeviceInfo>}


    var getDevices = function getDevices() {
      return new Promise(function (resolve, reject) {
        console.log('WowzaWebRTCPublish.getDevices');
        navigator.mediaDevices.enumerateDevices().then(function (devices) {
          console.log(JSON.stringify(devices));
          var constraints = Object.assign({}, getState().constraints);
          var cameras = [];
          var microphones = [];

          for (var i = 0; i < devices.length; i++) {
            if (devices[i].kind === 'videoinput') {
              if (cameras.length === 0) {
                constraints.video = Object.assign({}, constraints.video, {
                  deviceId: devices[i].deviceId
                });
              }

              cameras.push(devices[i]);
            } else if (devices[i].kind === 'audioinput') {
              if (microphones.length === 0) {
                constraints.audio = Object.assign({}, constraints.audio, {
                  deviceId: devices[i].deviceId
                });
              }

              microphones.push(devices[i]);
            }
          }

          var newState = {
            cameras: cameras,
            microphones: microphones,
            constraints: constraints
          };
          resolve(setState(newState));
        })["catch"](function (e) {
          console.log("unable to detect AV devices: " + e);
          reject(e);
        });
      });
    };

    function onconnectionstatechange(evt) {
      if (evt.target != null && evt.target.connectionState != null) {
        setState({
          connectionState: evt.target.connectionState
        });
      }
    }

    function onstop() {
      setState({
        connectionState: 'stopped'
      });
    }

    function setEnabled(trackKind, enabled) {
      var currentState = getState();

      if (currentState.stream != null && currentState.stream.getTracks != null) {
        currentState.stream.getTracks().map(function (track) {
          if (track.kind === trackKind) {
            track.enabled = enabled;
          }
        });
      }
    }

    function setAudioEnabled(enabled) {
      console.log('WowzaWebRTC.setAudioEnabled:' + enabled);
      setEnabled("audio", enabled);
      setState({
        audioEnabled: enabled
      });
    }

    function setVideoEnabled(enabled) {
      console.log('WowzaWebRTC.setVideoEnabled:' + enabled);
      setEnabled("video", enabled);
      setState({
        videoEnabled: enabled
      });
    }

    var setCamera = function setCamera(id) {
      console.log("WowzaWebRTC.setCamera: " + id);
      var constraints = Object.assign({}, state.constraints);

      if (typeof constraints.video === 'boolean') {
        constraints.video = {};
      }

      constraints.video = Object.assign({}, constraints.video, {
        deviceId: id
      });
      setState({
        constraints: constraints
      }).then(function () {
        getUserMedia().then(function () {
          var currentState = getState();
          setEnabled("audio", currentState.audioEnabled);
          setEnabled("video", currentState.videoEnabled);
        });
      });
    };

    var setMicrophone = function setMicrophone(id) {
      console.log("WowzaWebRTC.setMicrophone: " + id);
      var constraints = Object.assign({}, state.constraints);

      if (typeof constraints.audio === 'boolean') {
        constraints.audio = {};
      }

      constraints.audio = Object.assign({}, constraints.audio, {
        deviceId: id
      });
      setState({
        constraints: constraints
      }).then(function () {
        getUserMedia().then(function () {
          var currentState = getState();
          setEnabled("audio", currentState.audioEnabled);
          setEnabled("video", currentState.videoEnabled);
        });
      });
    };

    var start = function start() {
      var currentState = getState();
      console.log('WowzaWebRTC.start()');

      _WowzaPeerConnectionPublish__WEBPACK_IMPORTED_MODULE_2__["default"].start({
        wsURL: currentState.sdpURL,
        localStream: currentState.stream,
        streamInfo: currentState.streamInfo,
        mediaInfo: currentState.mediaInfo,
        userData: currentState.userData,
        mungeSDP: _WowzaMungeSDP__WEBPACK_IMPORTED_MODULE_1__["mungeSDPPublish"],
        onconnectionstatechange: onconnectionstatechange,
        onstop: onstop,
        onerror: errorHandler
      });
    };

    var stop = function stop() {
      console.log('WowzaWebRTC.stop()');

      _WowzaPeerConnectionPublish__WEBPACK_IMPORTED_MODULE_2__["default"].stop();
    };

    var errorHandler = function errorHandler(error) {
      console.log('WowzaWebRTC ERROR:');
      console.log(error);

      if (error.message == null) {
        if (error.target != null) {
          console.log('typeof error.target: ' + typeof error.target);
        }
      }

      var newError = Object.assign({}, error);

      if (callbacks.onError != null) {
        callbacks.onError(error);
      }
    };

    var WowzaWebRTC = {
      on: on,
      set: set,
      getState: getState,
      start: start,
      stop: stop,
      setAudioEnabled: setAudioEnabled,
      setVideoEnabled: setVideoEnabled,
      setCamera: setCamera,
      setMicrophone: setMicrophone
    };
    /* harmony default export */

    __webpack_exports__["default"] = WowzaWebRTC;
    /***/
  },

  /***/
  "./src/app/lib/settings.ts":
  /*!*********************************!*\
    !*** ./src/app/lib/settings.ts ***!
    \*********************************/

  /*! exports provided: default */

  /***/
  function srcAppLibSettingsTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * This code and all components (c) Copyright 2019-2020, Wowza Media Systems, LLC. All rights reserved.
     * This code is licensed pursuant to the BSD 3-Clause License.
     */


    var cookieName = "webrtcValues";

    var serializeArrayFormValues = function serializeArrayFormValues(formNode) {
      var disabled = formNode.find(":input:disabled").removeAttr("disabled");
      var serialized = formNode.serializeArray();
      disabled.attr("disabled", "disabled");
      return serialized;
    };

    var saveToCookie = function saveToCookie(valuesObject) {
      var cookieValue = Cookies.get(cookieName);
      if (cookieValue == null) cookieValue = '{}';
      var cookieObject = JSON.parse(unescape(cookieValue));
      var saveObject = Object.assign(Object.assign({}, cookieObject), valuesObject);
      Cookies.set(cookieName, escape(JSON.stringify(saveObject)));
    };

    var mapFromCookie = function mapFromCookie(initialStateObject) {
      var state = Object.assign({}, initialStateObject);
      var cookieValue = Cookies.get(cookieName);
      if (cookieValue == null) cookieValue = '{}';
      var cookieObject = JSON.parse(unescape(cookieValue));

      for (var key in cookieObject) {
        if (state[key] != null) state[key] = cookieObject[key];
      }

      ;
      return state;
    };

    var mapFromQueryParams = function mapFromQueryParams(initialStateObject) {
      var state = Object.assign({}, initialStateObject);

      for (var _i = 0, _Object$entries = Object.entries(initialStateObject); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
            key = _Object$entries$_i[0],
            value = _Object$entries$_i[1];

        state[key] = getQueryVariable(key, state[key]);
      }

      return state;
    };

    var mapFromForm = function mapFromForm(formValueArray) {
      var state = {};

      for (var i = 0; i < formValueArray.length; i++) {
        state[formValueArray[i].name] = formValueArray[i].value;
      }

      return state;
    };

    var updateForm = function updateForm(state) {
      for (var _i2 = 0, _Object$entries2 = Object.entries(state); _i2 < _Object$entries2.length; _i2++) {
        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),
            key = _Object$entries2$_i[0],
            value = _Object$entries2$_i[1];

        $("#".concat(key)).val(state[key]);
      }
    };

    var getQueryVariable = function getQueryVariable(variable, defaultVal) {
      var query = window.location.search.substring(1);
      var vars = query.split('&');

      for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split('=');

        if (decodeURIComponent(pair[0]) == variable) {
          return decodeURIComponent(pair[1]);
        }
      }

      return defaultVal;
    };

    var shareLink = function shareLink(settings, message) {
      var queryParams = $.param(settings);
      var baseUrl = window.location.href.split('#');
      var anchor = baseUrl[1] ? '#' + baseUrl[1] : '';
      baseUrl = baseUrl[0].split('?')[0]; //toss existing query params

      copyTextToClipboard(baseUrl + '?' + queryParams + anchor, message);
    };

    var copyTextToClipboard = function copyTextToClipboard(text, message) {
      if (text === null || text === undefined || text.length == 0) {
        alert("Copy failed :(");
        return;
      }

      navigator.clipboard.writeText(text).then(function () {
        showAlert();
      }, function () {
        /* clipboard write failed do it the ugly way */
        text.select();
        document.execCommand("copy");
        showAlert();
      });

      var showAlert = function showAlert() {
        if (message) {
          alert(message);
        } else {
          alert("Copied!");
        }
      };
    };

    var Settings = {
      serializeArrayFormValues: serializeArrayFormValues,
      saveToCookie: saveToCookie,
      mapFromCookie: mapFromCookie,
      mapFromQueryParams: mapFromQueryParams,
      mapFromForm: mapFromForm,
      updateForm: updateForm,
      getQueryVariable: getQueryVariable,
      shareLink: shareLink
    };
    /* harmony default export */

    __webpack_exports__["default"] = Settings;
    /***/
  },

  /***/
  "./src/app/services/s3.service.ts":
  /*!****************************************!*\
    !*** ./src/app/services/s3.service.ts ***!
    \****************************************/

  /*! exports provided: S3Service */

  /***/
  function srcAppServicesS3ServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "S3Service", function () {
      return S3Service;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var aws_sdk_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! aws-sdk/global */
    "./node_modules/aws-sdk/browser.js");
    /* harmony import */


    var aws_sdk_global__WEBPACK_IMPORTED_MODULE_1___default =
    /*#__PURE__*/
    __webpack_require__.n(aws_sdk_global__WEBPACK_IMPORTED_MODULE_1__);
    /* harmony import */


    var aws_sdk_clients_s3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! aws-sdk/clients/s3 */
    "./node_modules/aws-sdk/clients/s3.js");
    /* harmony import */


    var aws_sdk_clients_s3__WEBPACK_IMPORTED_MODULE_2___default =
    /*#__PURE__*/
    __webpack_require__.n(aws_sdk_clients_s3__WEBPACK_IMPORTED_MODULE_2__);
    /* harmony import */


    var src_environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/environments/environment */
    "./src/environments/environment.ts"); // import * as AWS from "aws-sdk";


    var S3Service =
    /*#__PURE__*/
    function () {
      function S3Service() {
        _classCallCheck(this, S3Service);

        this.bucketName = src_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].S3Bucket;
        aws_sdk_global__WEBPACK_IMPORTED_MODULE_1__["config"].update({
          accessKeyId: src_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].AWSAccessKeyId,
          secretAccessKey: src_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].AWSSecretKey,
          region: src_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].AWSregion
        });
        this.s3Client = new aws_sdk_clients_s3__WEBPACK_IMPORTED_MODULE_2__({
          apiVersion: '2006-03-01'
        });
      }

      _createClass(S3Service, [{
        key: "uploadFile",
        value: function uploadFile(fileName, fileData) {
          var params = {
            Bucket: this.bucketName,
            Key: fileName,
            ACL: 'public-read',
            Body: fileData
          };
          var req = new aws_sdk_clients_s3__WEBPACK_IMPORTED_MODULE_2__["ManagedUpload"]({
            params: params
          });
          return req;
        }
      }]);

      return S3Service;
    }();

    S3Service.ɵfac = function S3Service_Factory(t) {
      return new (t || S3Service)();
    };

    S3Service.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
      token: S3Service,
      factory: S3Service.ɵfac,
      providedIn: 'root'
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](S3Service, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
          providedIn: 'root'
        }]
      }], function () {
        return [];
      }, null);
    })();
    /***/

  },

  /***/
  4:
  /*!********************!*\
    !*** fs (ignored) ***!
    \********************/

  /*! no static exports found */

  /***/
  function _(module, exports) {
    /* (ignored) */

    /***/
  }
}]);
//# sourceMappingURL=admin-dashboard-admin-dashboard-module-es5.js.map